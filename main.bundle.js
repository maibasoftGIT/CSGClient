webpackJsonp(["main"],{

/***/ "../../../../../src/$$_lazy_route_resource lazy recursive":
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "../../../../../src/$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "../../../../../src/app/app.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return App; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var App = (function () {
    function App() {
        //        alert("app")
    }
    App = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'csg-app',
            template: '<router-outlet></router-outlet>'
        }),
        __metadata("design:paramtypes", [])
    ], App);
    return App;
}());



/***/ }),

/***/ "../../../../../src/app/app.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ng2_validation__ = __webpack_require__("../../../../ng2-validation/dist/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ng2_validation___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_ng2_validation__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_platform_browser__ = __webpack_require__("../../../platform-browser/esm5/platform-browser.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_component__ = __webpack_require__("../../../../../src/app/app.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_vo_member_member_component__ = __webpack_require__("../../../../../src/app/components/vo/member/member.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_vo_fix_deposite_fixdeposite_component__ = __webpack_require__("../../../../../src/app/components/vo/fix_deposite/fixdeposite.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_vo_dashboard_dashboard_component__ = __webpack_require__("../../../../../src/app/components/vo/dashboard/dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_vo_loan_loan_component__ = __webpack_require__("../../../../../src/app/components/vo/loan/loan.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__components_public_login_login_component__ = __webpack_require__("../../../../../src/app/components/public/login/login.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__components_public_Public_Component__ = __webpack_require__("../../../../../src/app/components/public/Public.Component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__routing_CSGRoutes__ = __webpack_require__("../../../../../src/app/routing/CSGRoutes.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__components_common_component__ = __webpack_require__("../../../../../src/app/components/common.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__components_vo_VO_BaseComponent__ = __webpack_require__("../../../../../src/app/components/vo/VO.BaseComponent.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__components_vo_shg_master_shg_master_component__ = __webpack_require__("../../../../../src/app/components/vo/shg_master/shg_master.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__components_vo_loan_loanrepayment_component__ = __webpack_require__("../../../../../src/app/components/vo/loan/loanrepayment.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__components_sc_dashboard_dashboard_component__ = __webpack_require__("../../../../../src/app/components/sc/dashboard/dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__components_sc_base_component__ = __webpack_require__("../../../../../src/app/components/sc/base.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__angular_common__ = __webpack_require__("../../../common/esm5/common.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__components_cmrc_CMRC_BaseComponent__ = __webpack_require__("../../../../../src/app/components/cmrc/CMRC.BaseComponent.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__components_cmrc_dashboard_dashboard_component__ = __webpack_require__("../../../../../src/app/components/cmrc/dashboard/dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__components_sc_loan_loan_component__ = __webpack_require__("../../../../../src/app/components/sc/loan/loan.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__components_cmrc_reports_reports_component__ = __webpack_require__("../../../../../src/app/components/cmrc/reports/reports.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__components_cmrc_district_district_component__ = __webpack_require__("../../../../../src/app/components/cmrc/district/district.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__components_vo_vo_members_vo_members_component__ = __webpack_require__("../../../../../src/app/components/vo/vo_members/vo_members.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__components_cmrc_member_member_component__ = __webpack_require__("../../../../../src/app/components/cmrc/member/member.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__components_sc_scrutinycommitte_scrutinycommitte_component__ = __webpack_require__("../../../../../src/app/components/sc/scrutinycommitte/scrutinycommitte.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__components_cmrc_vo_vo_component__ = __webpack_require__("../../../../../src/app/components/cmrc/vo/vo.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__components_vo_sc_member_sc_member_component__ = __webpack_require__("../../../../../src/app/components/vo/sc_member/sc_member.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__components_cmrc_fund_fund_component__ = __webpack_require__("../../../../../src/app/components/cmrc/fund/fund.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__components_vo_attendance_attendance_component__ = __webpack_require__("../../../../../src/app/components/vo/attendance/attendance.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__components_sc_members_member_component__ = __webpack_require__("../../../../../src/app/components/sc/members/member.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__components_cmrc_gender_gender_component__ = __webpack_require__("../../../../../src/app/components/cmrc/gender/gender.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__components_cmrc_taluka_taluka_component__ = __webpack_require__("../../../../../src/app/components/cmrc/taluka/taluka.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__components_cmrc_education_education_component__ = __webpack_require__("../../../../../src/app/components/cmrc/education/education.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__components_cmrc_occupation_occupation_component__ = __webpack_require__("../../../../../src/app/components/cmrc/occupation/occupation.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__components_cmrc_social_category_social_category_component__ = __webpack_require__("../../../../../src/app/components/cmrc/social_category/social_category.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__components_cmrc_economic_category_economic_category_component__ = __webpack_require__("../../../../../src/app/components/cmrc/economic_category/economic_category.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__components_cmrc_ration_card_ration_card_component__ = __webpack_require__("../../../../../src/app/components/cmrc/ration_card/ration_card.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__components_cmrc_designation_designation_component__ = __webpack_require__("../../../../../src/app/components/cmrc/designation/designation.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__components_cmrc_scheme_scheme_component__ = __webpack_require__("../../../../../src/app/components/cmrc/scheme/scheme.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__components_cmrc_area_area_component__ = __webpack_require__("../../../../../src/app/components/cmrc/area/area.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__components_cmrc_loan_reason_loan_reason_component__ = __webpack_require__("../../../../../src/app/components/cmrc/loan_reason/loan_reason.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__components_cmrc_fund_types_fund_types_component__ = __webpack_require__("../../../../../src/app/components/cmrc/fund_types/fund_types.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__components_cmrc_memShare_memShare_component__ = __webpack_require__("../../../../../src/app/components/cmrc/memShare/memShare.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__components_cmrc_minority_minority_component__ = __webpack_require__("../../../../../src/app/components/cmrc/minority/minority.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__components_cmrc_maritalStatus_maritalStatus_component__ = __webpack_require__("../../../../../src/app/components/cmrc/maritalStatus/maritalStatus.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__components_cmrc_fd_fd_component__ = __webpack_require__("../../../../../src/app/components/cmrc/fd/fd.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__components_vo_AccountTransaction_accounttransaction_component__ = __webpack_require__("../../../../../src/app/components/vo/AccountTransaction/accounttransaction.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__components_cmrc_AccountTransaction_accounttransaction_component__ = __webpack_require__("../../../../../src/app/components/cmrc/AccountTransaction/accounttransaction.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__components_vo_fund_fund_component__ = __webpack_require__("../../../../../src/app/components/vo/fund/fund.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__components_vo_fund_fundrepayment_component__ = __webpack_require__("../../../../../src/app/components/vo/fund/fundrepayment.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__components_vo_income_other_income_component__ = __webpack_require__("../../../../../src/app/components/vo/income/other_income.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__components_cmrc_ledger_ledger_component__ = __webpack_require__("../../../../../src/app/components/cmrc/ledger/ledger.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__components_public_cmrc_cmrc_component__ = __webpack_require__("../../../../../src/app/components/public/cmrc/cmrc.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__components_public_mavim_mavim_component__ = __webpack_require__("../../../../../src/app/components/public/mavim/mavim.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__components_public_work_work_component__ = __webpack_require__("../../../../../src/app/components/public/work/work.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__components_vo_ledgerentries_ledgerentries_component__ = __webpack_require__("../../../../../src/app/components/vo/ledgerentries/ledgerentries.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__components_cmrc_fund_fundrepayment_component__ = __webpack_require__("../../../../../src/app/components/cmrc/fund/fundrepayment.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__components_cmrc_ledgerentries_ledgerentries_component__ = __webpack_require__("../../../../../src/app/components/cmrc/ledgerentries/ledgerentries.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__components_cmrc_village_village_component__ = __webpack_require__("../../../../../src/app/components/cmrc/village/village.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__components_cmrc_reports_members_report_component__ = __webpack_require__("../../../../../src/app/components/cmrc/reports/members_report.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__components_cmrc_reports_shg_report_component__ = __webpack_require__("../../../../../src/app/components/cmrc/reports/shg_report.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__components_cmrc_reports_memberperformance_memberperfromance__ = __webpack_require__("../../../../../src/app/components/cmrc/reports/memberperformance/memberperfromance.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__components_cmrc_reports_scheme_wise_shg_component__ = __webpack_require__("../../../../../src/app/components/cmrc/reports/scheme_wise_shg_component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__components_cmrc_reports_shgbyvo_component__ = __webpack_require__("../../../../../src/app/components/cmrc/reports/shgbyvo.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__services_reports_exportexcel__ = __webpack_require__("../../../../../src/app/services/reports/exportexcel.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_77_ng2_datepicker__ = __webpack_require__("../../../../ng2-datepicker/dist/ng2-datepicker.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__components_district_DISTRICT_BaseComponent__ = __webpack_require__("../../../../../src/app/components/district/DISTRICT.BaseComponent.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__components_district_dashboard_dashboard_component__ = __webpack_require__("../../../../../src/app/components/district/dashboard/dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__components_vo_finance_finance_component__ = __webpack_require__("../../../../../src/app/components/vo/finance/finance.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__components_district_fund_fund_component__ = __webpack_require__("../../../../../src/app/components/district/fund/fund.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__services_district_services__ = __webpack_require__("../../../../../src/app/services/district.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__components_district_fund_fund_model_component__ = __webpack_require__("../../../../../src/app/components/district/fund/fund.model.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__components_district_fd_fd_component__ = __webpack_require__("../../../../../src/app/components/district/fd/fd.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__components_district_fd_fd_model_component__ = __webpack_require__("../../../../../src/app/components/district/fd/fd.model.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__components_public_contact_contact_component__ = __webpack_require__("../../../../../src/app/components/public/contact/contact.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__components_district_loan_loan_component__ = __webpack_require__("../../../../../src/app/components/district/loan/loan.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_88__components_district_memShare_memShare_component__ = __webpack_require__("../../../../../src/app/components/district/memShare/memShare.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_89__components_district_loan_loan_model_component__ = __webpack_require__("../../../../../src/app/components/district/loan/loan.model.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_90__components_district_memShare_memShare_model_components__ = __webpack_require__("../../../../../src/app/components/district/memShare/memShare.model.components.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_91__components_district_otherIncome_otherIncome_component__ = __webpack_require__("../../../../../src/app/components/district/otherIncome/otherIncome.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_92__components_district_otherIncome_otherIncome_model_component__ = __webpack_require__("../../../../../src/app/components/district/otherIncome/otherIncome.model.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_93__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_94__services_FileService_file_upload_service__ = __webpack_require__("../../../../../src/app/services/FileService/file_upload.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_95__services_login_service__ = __webpack_require__("../../../../../src/app/services/login.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_96__components_cmrc_vo_vo_model_component__ = __webpack_require__("../../../../../src/app/components/cmrc/vo/vo.model.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_97__components_vo_shg_master_shg_master_model__ = __webpack_require__("../../../../../src/app/components/vo/shg_master/shg_master.model.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_98__components_vo_member_member_model__ = __webpack_require__("../../../../../src/app/components/vo/member/member.model.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_99__components_district_shg_shg_component__ = __webpack_require__("../../../../../src/app/components/district/shg/shg.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_100__components_district_shg_shg_model_component__ = __webpack_require__("../../../../../src/app/components/district/shg/shg.model.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_101__components_district_member_member_component__ = __webpack_require__("../../../../../src/app/components/district/member/member.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_102__components_district_member_member_model_component__ = __webpack_require__("../../../../../src/app/components/district/member/member.model.component.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


//import { MatButtonModule,MatMenuModule,MatToolbarModule,MatIconModule,MatCardModule} from '@angular/material';









//VO Module














//CMRC**********











































//import { CustomFormsModule } from 'ng2-validation';
//import { TreeModule } from 'ng2-tree';











// import { AngularDateTimePickerModule } from 'angular2-datetimepicker';










//import {MatCheckboxModule} from '@angular/material/checkbox';
















var AppModule = (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [__WEBPACK_IMPORTED_MODULE_4__app_component__["a" /* App */],
                __WEBPACK_IMPORTED_MODULE_13__components_public_login_login_component__["a" /* LoginComponent */],
                __WEBPACK_IMPORTED_MODULE_17__components_vo_VO_BaseComponent__["a" /* VOBaseComponent */],
                __WEBPACK_IMPORTED_MODULE_8__components_vo_member_member_component__["a" /* MemberComponent */],
                __WEBPACK_IMPORTED_MODULE_62__components_public_cmrc_cmrc_component__["a" /* CMRCComponent */],
                __WEBPACK_IMPORTED_MODULE_86__components_public_contact_contact_component__["a" /* ContactComponent */],
                __WEBPACK_IMPORTED_MODULE_63__components_public_mavim_mavim_component__["a" /* MavimComponent */],
                __WEBPACK_IMPORTED_MODULE_64__components_public_work_work_component__["a" /* WorkComponent */],
                __WEBPACK_IMPORTED_MODULE_30__components_vo_vo_members_vo_members_component__["a" /* VOCMembersComponent */],
                __WEBPACK_IMPORTED_MODULE_9__components_vo_fix_deposite_fixdeposite_component__["a" /* FixDepositeComponent */],
                __WEBPACK_IMPORTED_MODULE_11__components_vo_dashboard_dashboard_component__["a" /* VoDashboardComponent */],
                __WEBPACK_IMPORTED_MODULE_12__components_vo_loan_loan_component__["a" /* LoanComponent */],
                __WEBPACK_IMPORTED_MODULE_18__components_vo_shg_master_shg_master_component__["a" /* ShgMasterComponent */],
                __WEBPACK_IMPORTED_MODULE_16__components_common_component__["b" /* LoadingComponent */],
                __WEBPACK_IMPORTED_MODULE_16__components_common_component__["c" /* MessageComponent */],
                __WEBPACK_IMPORTED_MODULE_16__components_common_component__["a" /* ErrorMessageComponent */],
                __WEBPACK_IMPORTED_MODULE_16__components_common_component__["d" /* WarningMessageComponent */],
                __WEBPACK_IMPORTED_MODULE_14__components_public_Public_Component__["a" /* PublicComponent */],
                __WEBPACK_IMPORTED_MODULE_19__components_vo_loan_loanrepayment_component__["a" /* LoanRepaymentComponent */],
                __WEBPACK_IMPORTED_MODULE_20__components_sc_dashboard_dashboard_component__["a" /* SCDashboardComponent */],
                __WEBPACK_IMPORTED_MODULE_34__components_cmrc_vo_vo_component__["a" /* VoComponent */],
                __WEBPACK_IMPORTED_MODULE_21__components_sc_base_component__["a" /* SCBaseComponent */],
                __WEBPACK_IMPORTED_MODULE_33__components_sc_scrutinycommitte_scrutinycommitte_component__["a" /* ScrunityCommitteComponent */],
                __WEBPACK_IMPORTED_MODULE_58__components_vo_fund_fund_component__["a" /* VOFundComponent */],
                __WEBPACK_IMPORTED_MODULE_59__components_vo_fund_fundrepayment_component__["a" /* VOFundRepaymentComponent */],
                __WEBPACK_IMPORTED_MODULE_36__components_cmrc_fund_fund_component__["a" /* CMRCFundComponent */],
                __WEBPACK_IMPORTED_MODULE_66__components_cmrc_fund_fundrepayment_component__["a" /* CMRCFundRepaymentComponent */],
                __WEBPACK_IMPORTED_MODULE_23__components_cmrc_CMRC_BaseComponent__["a" /* CMRCBaseComponent */],
                __WEBPACK_IMPORTED_MODULE_24__components_cmrc_dashboard_dashboard_component__["a" /* CMRCDashboardComponent */],
                __WEBPACK_IMPORTED_MODULE_67__components_cmrc_ledgerentries_ledgerentries_component__["a" /* CMRCSLEntryComponent */],
                __WEBPACK_IMPORTED_MODULE_26__components_sc_loan_loan_component__["a" /* SCLoanComponent */],
                __WEBPACK_IMPORTED_MODULE_28__components_cmrc_reports_reports_component__["a" /* CmrcReportComponent */],
                __WEBPACK_IMPORTED_MODULE_71__components_cmrc_reports_shg_report_component__["a" /* SHGReportsComponent */],
                __WEBPACK_IMPORTED_MODULE_29__components_cmrc_district_district_component__["a" /* CmrcdistrictComponent */],
                __WEBPACK_IMPORTED_MODULE_61__components_cmrc_ledger_ledger_component__["a" /* LedgerComponent */],
                __WEBPACK_IMPORTED_MODULE_32__components_cmrc_member_member_component__["a" /* CMRCMemberComponent */],
                __WEBPACK_IMPORTED_MODULE_37__components_vo_attendance_attendance_component__["a" /* AttendanceComponent */],
                __WEBPACK_IMPORTED_MODULE_38__components_sc_members_member_component__["a" /* ALLSCMembers */],
                __WEBPACK_IMPORTED_MODULE_39__components_cmrc_gender_gender_component__["a" /* GenderComponent */],
                __WEBPACK_IMPORTED_MODULE_60__components_vo_income_other_income_component__["a" /* VOOtherIncome */],
                __WEBPACK_IMPORTED_MODULE_52__components_cmrc_memShare_memShare_component__["a" /* MemShareComponent */],
                __WEBPACK_IMPORTED_MODULE_40__components_cmrc_taluka_taluka_component__["a" /* TalukaComponent */],
                __WEBPACK_IMPORTED_MODULE_41__components_cmrc_education_education_component__["a" /* EducationComponent */],
                __WEBPACK_IMPORTED_MODULE_42__components_cmrc_occupation_occupation_component__["a" /* OccupationComponent */],
                __WEBPACK_IMPORTED_MODULE_43__components_cmrc_social_category_social_category_component__["a" /* SocialcategoryComponent */],
                __WEBPACK_IMPORTED_MODULE_44__components_cmrc_economic_category_economic_category_component__["a" /* EconomiccategoryComponent */],
                __WEBPACK_IMPORTED_MODULE_45__components_cmrc_ration_card_ration_card_component__["a" /* RationcardComponent */],
                __WEBPACK_IMPORTED_MODULE_46__components_cmrc_designation_designation_component__["a" /* DesignationComponent */],
                __WEBPACK_IMPORTED_MODULE_47__components_cmrc_scheme_scheme_component__["a" /* SchemeComponent */],
                __WEBPACK_IMPORTED_MODULE_48__components_cmrc_area_area_component__["a" /* AreaComponent */],
                __WEBPACK_IMPORTED_MODULE_49__components_cmrc_loan_reason_loan_reason_component__["a" /* LoanreasonComponent */],
                __WEBPACK_IMPORTED_MODULE_35__components_vo_sc_member_sc_member_component__["a" /* SCMemberComponent */],
                __WEBPACK_IMPORTED_MODULE_35__components_vo_sc_member_sc_member_component__["a" /* SCMemberComponent */],
                __WEBPACK_IMPORTED_MODULE_51__components_cmrc_fund_types_fund_types_component__["a" /* FundTypeComponent */],
                __WEBPACK_IMPORTED_MODULE_53__components_cmrc_minority_minority_component__["a" /* MinorityComponent */],
                __WEBPACK_IMPORTED_MODULE_54__components_cmrc_maritalStatus_maritalStatus_component__["a" /* MaritalStatusComponent */],
                __WEBPACK_IMPORTED_MODULE_55__components_cmrc_fd_fd_component__["a" /* FDComponent */],
                __WEBPACK_IMPORTED_MODULE_56__components_vo_AccountTransaction_accounttransaction_component__["a" /* VOViewAccountTransctionComponent */],
                __WEBPACK_IMPORTED_MODULE_57__components_cmrc_AccountTransaction_accounttransaction_component__["a" /* VOCMRCAccountTransctionComponent */],
                __WEBPACK_IMPORTED_MODULE_65__components_vo_ledgerentries_ledgerentries_component__["a" /* SLEntryComponent */],
                __WEBPACK_IMPORTED_MODULE_75__components_cmrc_reports_shgbyvo_component__["a" /* SHGByVoComponent */],
                __WEBPACK_IMPORTED_MODULE_69__components_cmrc_village_village_component__["a" /* VillageComponent */],
                __WEBPACK_IMPORTED_MODULE_70__components_cmrc_reports_members_report_component__["a" /* ActiveAndWithdrawlMembersComponent */],
                __WEBPACK_IMPORTED_MODULE_74__components_cmrc_reports_scheme_wise_shg_component__["a" /* scheme_wise_shg_Component */],
                __WEBPACK_IMPORTED_MODULE_73__components_cmrc_reports_memberperformance_memberperfromance__["a" /* MemberPerformanceComponent */],
                __WEBPACK_IMPORTED_MODULE_78__components_district_DISTRICT_BaseComponent__["a" /* DISTRICTBaseComponent */],
                __WEBPACK_IMPORTED_MODULE_79__components_district_dashboard_dashboard_component__["a" /* DistrictDashboardComponent */],
                __WEBPACK_IMPORTED_MODULE_80__components_vo_finance_finance_component__["a" /* VOFinanceComponent */],
                __WEBPACK_IMPORTED_MODULE_79__components_district_dashboard_dashboard_component__["a" /* DistrictDashboardComponent */],
                __WEBPACK_IMPORTED_MODULE_81__components_district_fund_fund_component__["a" /* DistrictFundComponent */],
                __WEBPACK_IMPORTED_MODULE_84__components_district_fd_fd_component__["a" /* DistrictFDComponent */],
                __WEBPACK_IMPORTED_MODULE_87__components_district_loan_loan_component__["a" /* DistrictLoanComponent */],
                __WEBPACK_IMPORTED_MODULE_88__components_district_memShare_memShare_component__["a" /* DistrictMemberShareComponent */],
                __WEBPACK_IMPORTED_MODULE_91__components_district_otherIncome_otherIncome_component__["a" /* DistrictOtherIncomeComponent */],
                __WEBPACK_IMPORTED_MODULE_99__components_district_shg_shg_component__["a" /* DistrictSHGComponent */],
                __WEBPACK_IMPORTED_MODULE_101__components_district_member_member_component__["a" /* DistrictMemberComponent */]
            ],
            imports: [__WEBPACK_IMPORTED_MODULE_22__angular_common__["b" /* CommonModule */], __WEBPACK_IMPORTED_MODULE_3__angular_platform_browser__["a" /* BrowserModule */], __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormsModule"], __WEBPACK_IMPORTED_MODULE_7__angular_http__["c" /* HttpModule */], __WEBPACK_IMPORTED_MODULE_15__routing_CSGRoutes__["a" /* PublicRoutes */], __WEBPACK_IMPORTED_MODULE_6_angular_datatables__["b" /* DataTablesModule */], __WEBPACK_IMPORTED_MODULE_77_ng2_datepicker__["a" /* NgDatepickerModule */]],
            bootstrap: [__WEBPACK_IMPORTED_MODULE_4__app_component__["a" /* App */]],
            providers: [__WEBPACK_IMPORTED_MODULE_10__services_vo_services__["a" /* VOService */], __WEBPACK_IMPORTED_MODULE_27__services_common_service__["a" /* CommonService */], __WEBPACK_IMPORTED_MODULE_1_ng2_validation__["CustomFormsModule"], __WEBPACK_IMPORTED_MODULE_25__services_cmrc_services__["a" /* CMRCService */], __WEBPACK_IMPORTED_MODULE_5__environments_access_token__["a" /* AccessToken */], __WEBPACK_IMPORTED_MODULE_31__environments_GlobalVeriables__["a" /* GlobalVariable */], __WEBPACK_IMPORTED_MODULE_50__environments_CommanMssage__["a" /* CommonMessageComponent */], __WEBPACK_IMPORTED_MODULE_68__services_reports_exportpdf__["a" /* ExportToPDF */], __WEBPACK_IMPORTED_MODULE_72__environments_language_config__["a" /* LangulageConf */], __WEBPACK_IMPORTED_MODULE_76__services_reports_exportexcel__["a" /* ExportToExcel */], __WEBPACK_IMPORTED_MODULE_82__services_district_services__["a" /* DISTRICTService */], __WEBPACK_IMPORTED_MODULE_83__components_district_fund_fund_model_component__["a" /* FundMasterModel */], __WEBPACK_IMPORTED_MODULE_85__components_district_fd_fd_model_component__["a" /* FDMasterModel */], __WEBPACK_IMPORTED_MODULE_89__components_district_loan_loan_model_component__["a" /* LoanMasterModel */], __WEBPACK_IMPORTED_MODULE_90__components_district_memShare_memShare_model_components__["a" /* MemberShareMasterModel */], __WEBPACK_IMPORTED_MODULE_92__components_district_otherIncome_otherIncome_model_component__["a" /* OtherIncomeMasterModel */], __WEBPACK_IMPORTED_MODULE_93__environments_Global__["a" /* GlobalAssets */], __WEBPACK_IMPORTED_MODULE_94__services_FileService_file_upload_service__["a" /* FileUploadService */], __WEBPACK_IMPORTED_MODULE_95__services_login_service__["a" /* LoginService */],
                __WEBPACK_IMPORTED_MODULE_96__components_cmrc_vo_vo_model_component__["a" /* VOMasterModel */], __WEBPACK_IMPORTED_MODULE_97__components_vo_shg_master_shg_master_model__["a" /* ShgMasterModel */], __WEBPACK_IMPORTED_MODULE_98__components_vo_member_member_model__["a" /* shgDetails */], __WEBPACK_IMPORTED_MODULE_100__components_district_shg_shg_model_component__["a" /* DistrictShgMasterModel */], __WEBPACK_IMPORTED_MODULE_102__components_district_member_member_model_component__["a" /* DistrictMemberModel */]]
        })
    ], AppModule);
    return AppModule;
}());



/***/ }),

/***/ "../../../../../src/app/components/app.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "/* Start Accont Detail! */\r\n.image-set{\r\n  width: 25px;\r\n  height: 25px;\r\n}\r\n\r\n.header_part {\r\n  background-color: #c5e1a5;\r\n}\r\n\r\n.detail_info {\r\n  border-radius: 0px;\r\n}\r\n\r\n\r\n/* Log In Screen! */\r\n.contact-label{\r\n  font-size:20px;\r\n}\r\n\r\n\r\n.request_div {\r\n  border: solid 1px gray;\r\n}\r\n\r\n.operator_detail {\r\n  background-color: #c5e1a5;\r\n  color: white;\r\n  height: 45px;\r\n  margin-top: 20px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  line-height: 47px;\r\n  font-weight: bold;\r\n}\r\n\r\n.comman_error_message {\r\n  text-align: left;\r\n}\r\n\r\n.broadband_detail {\r\n  margin-top: 20px;\r\n  background-color: white;\r\n}\r\n\r\n.plan_detail>th {\r\n  background-color: #90caf9;\r\n  text-align: center;\r\n}\r\n\r\n.plan_detail>td>input {\r\n  border-radius: 0px;\r\n}\r\n\r\n.next_button {\r\n  background-color: #222d32;\r\n  border: none;\r\n  width: 100%;\r\n  margin-top: 5px;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 7px 15px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n#next_button_one {\r\n  margin-top: 110px;\r\n}\r\n\r\n.comman-error-mesage {\r\n  text-align: left;\r\n}\r\n\r\n.Data_save {\r\n  background-color: #222d32;\r\n  border: none;\r\n  margin-top: 5px;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 7px 15px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.back_step {\r\n  background-color: #222d32;\r\n  border: none;\r\n  margin-top: 5px;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 7px 15px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.submit_data {\r\n  background-color: #222d32;\r\n  border: none;\r\n  margin-top: 5px;\r\n  color: white;\r\n  text-align: center;\r\n  padding: 7px 15px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.parent-form {\r\n  margin-left: 100px;\r\n}\r\n\r\n/* .table>thead>tr>th {\r\n  text-align:center;\r\n}\r\n\r\n.table>tbody>tr>td {\r\n  text-align:center;\r\n}\r\n.table>tbody>tr>th, .table>tfoot>tr>th, .table>thead>tr>td, .table>tbody>tr>td, .table>tfoot>tr>td {\r\n  text-align: center;\r\n  border-top: 1px solid #f4f4f4;\r\n} */\r\n.dashboard_count{\r\n  border: 1px solid white;\r\n  background-color: lavenderblush;\r\n  margin-top: 10px;\r\n  height:66px;\r\n}\r\n.dashboard_count > h2{\r\n  margin-top: 16px;\r\n}\r\n.request_div{\r\n  height: 86px;\r\n  background-color: white;\r\n  box-shadow: 0 1px 3px 0, 0 0 0 1px floralwhite;\r\n}\r\n\r\n\r\n/* Start Side Detail Css*/\r\n\r\n.Registration_Success {\r\n  position: relative;\r\n  background-color: #2a9474;\r\n  width: 1114px;\r\n  height: 40px;\r\n  border-radius: 0px;\r\n  line-height: 40px;   \r\n  top: 11px;\r\n  right:2px;\r\n  left:2px;\r\n  z-index: 1;\r\n}\r\n\r\n.SuccessMessage {\r\n  color: #fff;\r\n  font-family: sans-serif, arial;\r\n  font-size: 13px;\r\n  text-align: left;\r\n  padding-left: 30px;\r\n  font-weight: bold;\r\n}\r\n\r\n.Error-Message {\r\n  position: relative;\r\n  background-color: #f30b2af5;\r\n  width: 1114px;\r\n  height: 40px;\r\n  border-radius: 0px;\r\n  line-height: 40px;   \r\n  top: 11px;\r\n  left:2px;\r\n  right:2px;\r\n  z-index: 1;\r\n}\r\n\r\n.Error_message {\r\n  color: #fff;\r\n  font-family: sans-serif, arial;\r\n  font-size: 13px;\r\n  text-align: left;\r\n  padding-left: 30px;\r\n  font-weight: bold;\r\n}\r\n\r\n.Warning-Message {\r\n  position: relative;\r\n  background-color:#ff8a65;\r\n  width: 1114px;\r\n  height: 40px;\r\n  border-radius: 0px;\r\n  line-height: 40px;   \r\n  top: 11px;\r\n  left:2px;\r\n  z-index: 1;\r\n}\r\n\r\n.Warning_message {\r\n  color: #fff;\r\n  font-family: sans-serif, arial;\r\n  font-size: 13px;\r\n  text-align: left;\r\n  padding-left: 30px;\r\n  font-weight: bold;\r\n}\r\n\r\n\r\n/* end Side Detail Css*/\r\n\r\n\r\n/* Start Mavim Detail */\r\n\r\n/* .first_div {\r\n\r\n background-size:cover;\r\n background-attachment: fixed;  \r\n  background-color: #F5F7FD;\r\n   \r\n} */\r\n\r\n\r\n.w3-animate-zoom {\r\n  -webkit-animation: animatezoom 1.8s;\r\n          animation: animatezoom 1.8s;\r\n}\r\n.w3-card{\r\n  -webkit-animation: animatezoom 1.8s;\r\n          animation: animatezoom 1.8s;\r\n}\r\n\r\n/* .middle_section>p {\r\n  padding: 0;\r\n  text-align: justify;\r\n  font-size: 17px;\r\n} */\r\n/* .mavim_detail{\r\n  box-shadow: 1px 3px 11px #bababa;\r\n} */\r\n/* .cmrc_detail{\r\n  box-shadow: 1px 3px 11px #bababa;\r\n} */\r\n.cmrc_detail >p{\r\n  padding: 0;\r\n  text-align: justify; \r\n  font-size: 14px;\r\n  font-family: 'Saira Extra Condensed', sans-serif;\r\n}\r\n.cmrc_detail >h3{\r\n  font-size: 15px;\r\n  font-family: 'Saira Extra Condensed', sans-serif;\r\n  font-size: 18px;\r\n  color: black;\r\n}\r\n.cmrc_detail >h2{\r\n  font-family: 'Saira Extra Condensed', sans-serif;\r\n  text-shadow: 0 0 3px #dc4c16b5;\r\n}\r\n.mavim_detail >p{\r\n  padding: 0;\r\n  text-align: justify; \r\n  font-size: 15px;\r\n  font-family: \"Open Sans\", Arial, sans-serif;\r\n}\r\n.mavim_detail >h3{\r\n  font-family: 'Saira Extra Condensed', sans-serif;\r\n  font-size: 21px;\r\n  font-weight: bold;\r\n  letter-spacing: 1px;\r\n  color: #ffffff;\r\n}\r\n.mavim_detail >h2{\r\n  font-family: 'Saira Extra Condensed', sans-serif;\r\n  text-shadow: 0 0 3px #dc4c16b5;\r\n}\r\n\r\n.cmrc_selection {\r\n  color: #3c8dbc;\r\n  font-size: 19px\r\n}\r\n\r\n.slide_content{\r\n  text-align:center;\r\n}\r\n\r\n.slide_content>p {\r\n  font-size: 18px;\r\n  font-family:'Saira Extra Condensed', sans-serif;\r\n  margin: 0px;\r\n}\r\n\r\n.slide_content>h3 { \r\n  font-size: 14px;\r\n  text-shadow: 0px 1px indianred; \r\n  font-family: 'Zilla+Slab';\r\n\r\n}\r\n\r\n.nav_list>li>a {\r\n  margin-left: 10px;\r\n  color: #fff;\r\n  list-style: none;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  font-family: Oswald;\r\n}\r\n\r\n.nav_list>li :after{\r\n  background:none;\r\n  list-style: none;\r\n}\r\n\r\n.navbar-nav>li>:hover {\r\n  color: #bb2727;\r\n\r\n}\r\n.background-image{\r\n  width:100%;\r\n}\r\n.slide_img{\r\n  width:100%;  \r\n  height:200px;\r\n  margin-top:21px\r\n}\r\n.mavim_head{\r\n  width:100%;\r\n  -webkit-animation: animatezoom 1.8s;\r\n          animation: animatezoom 1.8s;\r\n  height:294px;  \r\n  margin-top:10px\r\n}\r\n.slide_indicator {\r\n  color: #3c8dbc;\r\n}\r\n.record-action{\r\n  text-align:center;\r\n  padding:3px;\r\n}\r\n.list_point {\r\n  font-size: 12px;\r\n  margin-right: 8px;\r\n  color: #3c8dbc;\r\n \r\n}\r\n.point_list >li{\r\n  list-style: none;\r\n  font-size: 15px;\r\n  font-family: \"Open Sans\", Arial, sans-serif;\r\n}\r\n\r\n.body_section {\r\n  background-color: #eeeeee;\r\n}\r\n\r\n\r\n.section_first{\r\n  background-attachment: fixed;\r\n  background-size:cover;\r\n  margin-top:200px;\r\n}\r\n.box_section{\r\n  box-shadow: 0 1px 8px 0, 0 0 0 1px #daccb00d;\r\n  background: #ffffff;\r\n  border-top: 3px solid #eeaeb738;\r\n\r\n}\r\n\r\n.dashboard-finance-details{\r\n  text-align: left;\r\n  padding-left: 10px;\r\n  color: rgb(18, 13, 34);\r\n  font-weight: bold;\r\n}\r\n\r\n.finance-heading-name{\r\n  background-color: #acb4b8;\r\n}\r\n.finance-heading-value{\r\n  background-color: #dad4d6;\r\n}\r\n.finance-main-content{\r\n  background-color: #d1e1ee;\r\n}\r\n\r\n\r\n/* ENd Mavim Detail*/\r\n/* Start Treeview Menu CSS */\r\ntable{\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n  width: 100%; \r\n}\r\n.box_section{\r\n  overflow:auto;\r\n}\r\n  .vo-detail{\r\n  box-shadow: 0 1px 8px 0, 0 0 0 1px #daccb00d;\r\n  background: #ffffff;\r\n  border-top: 3px solid #eeaeb738;\r\n}\r\n.pdf-button{\r\n  float:right;\r\n}\r\n.table>tbody>tr>td{\r\n  padding-left:9px;\r\n}\r\n.table>thead>tr>th{\r\n  padding-left:7px;\r\n}\r\n.table-head{\r\n  margin-top:10px;\r\n  font-size:16px;\r\n}\r\n\r\n.btn-warning{\r\n  font-size: 16px;\r\n}\r\n.list-item-view{\r\n  color:white;\r\n  padding:0px;\r\n  background: #2c3b41;\r\n  margin:0px;\r\n}\r\n.list-item-view > li >a{\r\n  color:white;\r\n  padding-left:46px;\r\n\r\n}\r\n.drop-list{\r\n  padding-left:10px;\r\n  padding-top:11px;\r\n}\r\n.list-detail{\r\n  color: white; \r\n  margin-top:18px;\r\n}\r\n\r\n.list-item-view >li{\r\n  list-style: none;\r\n  padding:9px 0px 0px 0px;\r\n}\r\n.ul-item{\r\n  margin:3px;\r\n} \r\n.font_left{\r\n  margin-right: 8px;\r\n  font-size: 18px;\r\n}\r\n\r\n.village-btn{\r\n  padding: 8px; \r\n  margin-top: 7px;\r\n  color: black;\r\n}\r\n.loan_head{\r\n  padding-bottom:45px;\r\n}\r\n\r\n .repayment_loan_details_table > thead > tr > loan_head {\r\n  padding-bottom:23px;\r\n}\r\n.district_head >td> input{\r\n  width:90px;\r\n}\r\n\r\n/* Start Public Page  Style*/\r\n.panel-default >h2{\r\n  padding: 9px 0px;\r\n  margin: 0px;\r\n  color: #ffe0b2;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  text-transform: uppercase;\r\n  border-bottom: 2px solid #ffe0b2;\r\n  margin-bottom: 10px;\r\n}\r\n.gray-box{\r\n  width: 100%;\r\n  background: #f2f2f2;\r\n  border: 1px solid #e1e1e1;\r\n  margin: 0px;\r\n  text-align:center;\r\n}\r\n.gray-box >p{\r\n  text-align: center;\r\n  text-align: justify;\r\n}\r\n.gray-box >ul >li{\r\n    padding: 1px 1px 1px 14px;\r\n    margin-bottom: 5px;\r\n    display: block;\r\n    line-height: 17px;\r\n}\r\n.training-img{\r\n  height:160px;\r\n  width:100%;\r\n  background-size:cover;\r\n}\r\n.gray-box >p >img{\r\n  height:160px;\r\n  width:100%;\r\n  background-size:cover;\r\n}\r\n\r\n.gallery\r\n{\r\n    display: inline-block;\r\n    margin-top: 20px;\r\n}\r\n.text-muted{font-style:italic; color:coral;\r\n}\r\n.cmrc-list{\r\nmin-width:120px !important;\r\nbackground-color: #093758 !important;\r\n}\r\n.cmrc-list >li > a{\r\n  padding: 3px 16px !important;\r\n  color:white;\r\n  padding: 4px 10px !important;\r\n}\r\n/*End  Public Page  Style*/\r\n\r\n/* Start  Select Language Check Box Style */\r\n.parent span::before,\r\n.parent span::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  margin: auto;\r\n}\r\n.parent span.radio:hover {\r\n  cursor: pointer;\r\n}\r\n.parent span.radio::before {\r\n  left: -52px;\r\n  width: 45px;\r\n  height: 25px;\r\n  background-color: #060101f0;\r\n  border-radius: 50px;\r\n}\r\n.parent span.radio::after {\r\n  left: -49px;\r\n  width: 17px;\r\n  height: 17px;\r\n  border-radius: 10px;\r\n  background-color: #fff;\r\n  transition: left .25s, background-color .25s;\r\n}\r\ninput[type=\"radio\"]:checked + label span.radio::after {\r\n  left: -27px;\r\n  background-color:  #44cd41;\r\n}\r\n.ngx-datepicker-container[_ngcontent-c8] .ngx-datepicker-input[_ngcontent-c8] {\r\n  padding: 5px 10px;\r\n  font-size: 14px;\r\n  width: 200px;\r\n  outline: none;\r\n  border: 1px solid #DFE3E9;\r\n}\r\n/* End  Select Language Check Box Style */\r\n/* \r\nlanguage-select { \r\n  outline: 0;\r\n  height: 40px;\r\n  box-shadow: none;\r\n  border: 0px !important;\r\n  height: 2.5;\r\n  line-height: 2;\r\n  background: black;\r\n  overflow: hidden;\r\n  margin: 0;\r\n  padding: 5px;\r\n  color: #fff;\r\n  cursor: pointer;\r\n}\r\nlanguage-select::-ms-expand {\r\n  display: none;\r\n}\r\n\r\n.language-select::after {\r\n  content: '\\25BC';\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  padding: 0 1em;\r\n  background: #34495e;\r\n  pointer-events: none;\r\n}\r\n\r\n.language-select:hover::after {\r\n  color: #f39c12;\r\n}\r\n.language-select::after {\r\n  -webkit-transition: .25s all ease;\r\n  -o-transition: .25s all ease;\r\n  transition: .25s all ease;\r\n} */\r\n\r\n.dropbtn {\r\n  color: white;\r\n  padding: 16px;\r\n  font-size: 16px;\r\n  border: none;\r\n}\r\n\r\n.dropdown {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.dropdown-content {\r\n  display: none;\r\n  margin-top:0.5px;\r\n\r\n  position: absolute;\r\n  background-color: #f1f1f1;\r\n  min-width: -webkit-max-content;\r\n  min-width: -moz-max-content;\r\n  min-width: max-content;\r\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  z-index: 1;\r\n}\r\n\r\n.dropdown-content a {\r\n  color: black;\r\n\r\n  text-decoration: none;\r\n  display: block;\r\n}\r\n\r\n.dropdown-content a:hover {background-color: #ddd}\r\n\r\n.dropdown:hover .dropdown-content {\r\n  display: block;\r\n}\r\n.dropdown-content > li > a:hover{\r\n  color:red !important;\r\n\r\n}\r\n.dropdown-content >li{\r\n  list-style: none;\r\n  margin-left: -10px;\r\n}\r\n\r\n.dropdown:hover .dropbtn {\r\n  background-color:#093758 !important ;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/cmrc/AccountTransaction/accounttransaction.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">   \r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<!-- <div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div> -->\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n</div>\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-3\">\r\n                <label style=\"font-size:24px\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" routerLink=\"../\" style=\"margin-bottom:10px;\">\r\n                        BACK</button>\r\n                    <span *ngIf=\"lang.en\"> GENERAL LEDGER ENTRIES </span>\r\n                    <span *ngIf=\"lang.mr\">जनरल लेजर तपशील </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <select class=\"form-control\" [(ngModel)]=\"selectGLType\" name=\"selectGLType\" (change)=\"getSelectedGLTypeDetails(selectGLType)\">\r\n                        <option [value]=\"1\">ASSETS</option>\r\n                        <option [value]=\"2\">LIABILITIES</option>\r\n                        <option [value]=\"3\">INCOME</option>\r\n                        <option [value]=\"4\">EXPENSES</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <h4 class=\"btn-warning text-center\" style=\"background-color: cadetblue;padding: 6px;\">DETAILS FOR\r\n                        <b>{{selectGLType == 1 ? \"ASSETS\" : selectGLType == 2 ? \"LIABILITIES\" : selectGLType == 3 ? \"INCOME\"\r\n                            : \"EXPENSES\"}}</b>\r\n                        ACCOUNT TYPE\r\n                        <span>\r\n                            <button class=\"btn btn-primary\" (click)=\"LibilityAssetIncomeExporttoPdf()\">\r\n                                <span>\r\n                                    <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                                </span>\r\n                               EXPORT PDF</button>\r\n                        </span>\r\n                        <span>\r\n                                <button class=\"btn btn-primary\" (click)=\"ExportDetailedCmrcBalancesheettoPdf()\">\r\n                                    <span>\r\n                                        <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                                    </span>\r\n                                   EXPORT ALL PDF</button>\r\n                            </span>\r\n                          </h4>\r\n                    <table class=\"table table-bordered common_table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">FROM</span>\r\n                                    <span *ngIf=\"lang.mr\">पासून </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TO</span>\r\n                                    <span *ngIf=\"lang.mr\">पर्यंत </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SUB LEDGER</span>\r\n                                    <span *ngIf=\"lang.mr\">सबलेजर </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TRANSACTION DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> व्यवहार दिनांक </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let glTypeAccTransactionDetail of glTypeAccTransactionDetails\">\r\n                                <td>{{glTypeAccTransactionDetail.FromName}}</td>\r\n                                <td>{{glTypeAccTransactionDetail.ToName}}</td>\r\n                                <td>{{glTypeAccTransactionDetail.SLTypeName}}</td>\r\n                                <td>{{glTypeAccTransactionDetail.Amount}}</td>\r\n                                <td>{{glTypeAccTransactionDetail.TransactionDate | date}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <span *ngIf=\"lang.en\">TOTAL</span>\r\n                                    <span *ngIf=\"lang.mr\"> एकूण </span>\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>-</td>\r\n                                <td>{{totalAmt}}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/AccountTransaction/accounttransaction.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VOCMRCAccountTransctionComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var VOCMRCAccountTransctionComponent = (function () {
    function VOCMRCAccountTransctionComponent(_voservice, _access_token, _globalURL, _router, exportPdf, lang, _common_message, globalVariable) {
        this._voservice = _voservice;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._router = _router;
        this.exportPdf = exportPdf;
        this.lang = lang;
        this._common_message = _common_message;
        this.globalVariable = globalVariable;
        if (_access_token.access_token == "")
            _router.navigate(['../login']);
    }
    VOCMRCAccountTransctionComponent.prototype.ngOnInit = function () {
        this.selectGLType = this.globalVariable.selectedGLTypeId;
        this.getSelectedGLTypeDetails(this.globalVariable.selectedGLTypeId);
    };
    VOCMRCAccountTransctionComponent.prototype.getSelectedGLTypeDetails = function (glType) {
        var _this = this;
        debugger;
        this.totalAmt = 0;
        var url = "";
        url = this.globalVariable.VoId == 0 ? this._globalURL.GET_SELECTED_GL_TYPE_DETAILS + this.globalVariable.roleId + "&glType=" + glType : this._globalURL.GET_SELECTED_GL_TYPE_DETAILS + this.globalVariable.roleId + "&loginId=" + this.globalVariable.VoId + "&glType=" + glType;
        this._voservice.get(url, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    _this.glTypeAccTransactionDetails = JSON.parse(res._body).Data;
                    for (var item in _this.glTypeAccTransactionDetails)
                        _this.totalAmt = _this.totalAmt + _this.glTypeAccTransactionDetails[item].Amount;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                    _this.glTypeAccTransactionDetails = res.Data;
                    for (var item in _this.glTypeAccTransactionDetails)
                        _this.totalAmt = _this.totalAmt + _this.glTypeAccTransactionDetails[item].Amount;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    VOCMRCAccountTransctionComponent.prototype.ExportDetailedCmrcBalancesheettoPdf = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.GET_DETAILED_BALANCESHEET + 2, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                var headerData = {
                    "VOName": _this.globalVariable.VOName,
                    "Code": _this.globalVariable.voBaseCode,
                };
                _this.exportPdf.ExportDetailedCmrcBalancesheettoPdf(res.Data, headerData);
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    VOCMRCAccountTransctionComponent.prototype.LibilityAssetIncomeExporttoPdf = function () {
        debugger;
        var reportNames = this.selectGLType == 1 ? "ASSETS" : this.selectGLType == 2 ? "LIABILITIES" : this.selectGLType == 3 ? "INCOME" : "EXPENSES";
        var total = this.totalAmt;
        //  let ForAmount = {
        // //     //this.selectGLType == 3 ? "INCOME" : "EXPENSES"
        //      "reportName": this.totalAmt
        //  };
        this.exportPdf.LibilityAssetIncomeExporttoPdf(this.glTypeAccTransactionDetails, reportNames, total);
    };
    VOCMRCAccountTransctionComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/AccountTransaction/accounttransaction.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_7__services_reports_exportpdf__["a" /* ExportToPDF */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */]])
    ], VOCMRCAccountTransctionComponent);
    return VOCMRCAccountTransctionComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/CMRC.BaseComponent.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CMRCBaseComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_platform_browser__ = __webpack_require__("../../../platform-browser/esm5/platform-browser.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





//import { TreeModel, NodeEvent } from 'ng2-tree';




// import { } from '../../../../node_modules/ng2-tree/styles.css'
//import {} from '../vo'
var CMRCBaseComponent = (function () {
    function CMRCBaseComponent(_cmrcservice, _router, _access_token, _globalURL, _globalVariable, lang, _common_message, titleService) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this.lang = lang;
        this._common_message = _common_message;
        this.titleService = titleService;
        this.today = new Date();
        this.setTitle("CMRC");
    }
    CMRCBaseComponent.prototype.setTitle = function (newTitle) {
        this.titleService.setTitle(newTitle);
    };
    CMRCBaseComponent.prototype.ngOnInit = function () {
        this.getCMRCDetail();
    };
    CMRCBaseComponent.prototype.setLang = function (lang_) {
        if (lang_ === "en") {
            this.lang.en = true;
            this.lang.mr = false;
        }
        if (lang_ === "mr") {
            this.lang.en = false;
        }
        debugger;
    };
    CMRCBaseComponent.prototype.getCMRCDetail = function () {
        var _this = this;
        debugger;
        var finalUrl = "";
        if (sessionStorage.getItem("roleId") == "2") {
            this._globalURL.get_GET_USER_PROFILE_DETAIL_VO = "";
            finalUrl = this._globalURL.GET_USER_PROFILE_DETAIL + (sessionStorage.getItem("roleId") == null ? "2" : sessionStorage.getItem("roleId"));
        }
        else
            finalUrl = this._globalURL.GET_USER_PROFILE_DETAIL;
        this._cmrcservice.get(finalUrl, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.cmrcDetails = res.Data;
                _this._globalVariable.cmrcBaseCode = res.Data.Code;
                _this._globalVariable.CMRCName = res.Data.Name;
            }
            else {
                alert("else");
            }
        })
            .catch(function (err) {
            alert("catch block");
        });
    };
    CMRCBaseComponent.prototype.changePassword = function (changePassword) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._cmrcservice.post(this._globalURL.CHANGEPASSWORD, changePassword, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status == 200) {
                _this.showMessage = true;
                _this.message = "Password changed successfully";
                setInterval(function () {
                }, 5000);
            }
            else {
                //    this._router.navigate(['../login']);
                setInterval(function () {
                    _this._globalURL.isLoading = false;
                }, 5000);
            }
        }).catch(function (res) {
            console.log(res.error);
            alert("error");
        });
    };
    CMRCBaseComponent.prototype.SignOut = function () {
        sessionStorage.clear();
        // sessionStorage.setItem("roleId", null);
    };
    CMRCBaseComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/index.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_1__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_2__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_7__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_8__angular_platform_browser__["b" /* Title */]])
    ], CMRCBaseComponent);
    return CMRCBaseComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/area/area.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">   \r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n</div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-3\">\r\n                <label class=\"heading-title\">\r\n\r\n                    <span *ngIf=\"lang.en\">AREA DETAIL </span>\r\n                    <span *ngIf=\"lang.mr\">क्षेत्र तपशील </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createArea\">\r\n                        <span *ngIf=\"lang.en\">ADD NEW AREA </span>\r\n                        <span *ngIf=\"lang.mr\">नवीन क्षेत्र समाविष्ट करा </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table datatable [dtTrigger]=\"dtTrigger\"  class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">AREA ID </span>\r\n                                    <span *ngIf=\"lang.mr\">क्षेत्र आय डी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">AREA NAME </span>\r\n                                    <span *ngIf=\"lang.mr\">क्षेत्र नाव</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getArea of getAreas\">\r\n                                <td>{{getArea.Id}}</td>\r\n                                <td>{{getArea.Name | uppercase}}</td>\r\n                                <td>{{getArea.CreatedBy}}</td>\r\n                                <td>{{getArea.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td>\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteAreaForm\" (click)=\"delete(getArea)\">\r\n                                        <span *ngIf=\"lang.en\">DELETE</span>\r\n                                        <span *ngIf=\"lang.mr\"> काढून टाका </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"createArea\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width:300px;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">AREA FORM </span>\r\n                    <span *ngIf=\"lang.mr\">क्षेत्र फॉर्म</span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #areaForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">AREA NAME </span>\r\n                                        <span *ngIf=\"lang.mr\">क्षेत्र नाव</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"AreaName\" class=\"form-control\" id=\"AreaName\" name=\"AreaName\" #AreaName=\"ngModel\" required maxlength=\"50\">\r\n                                    <div *ngIf=\"AreaName.invalid && AreaName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!AreaName.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Area is required ! </span>\r\n                                            <span *ngIf=\"lang.mr\">क्षेत्र आवश्यक आहे !</span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!AreaName.hasError('pattern')\">AreaName should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" [disabled]=\"areaForm.invalid\" (click)=\"createArea(areaForm)\" data-dismiss=\"modal\" class=\"btn btn-primary\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteAreaForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">AREA DETAIL </span>\r\n                    <span *ngIf=\"lang.mr\">क्षेत्र तपशील </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteArea(areaModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--Anjali...-->"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/area/area.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AreaComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AreaComponent = (function () {
    function AreaComponent(_cmrcservice, _router, _access_token, lang, _globalURL, _globalVariable, _common_message) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this._access_token = _access_token;
        this.lang = lang;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_8_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    AreaComponent.prototype.ngOnInit = function () {
        //this.getArea();
    };
    AreaComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getArea();
    };
    //GET AREA  ...
    AreaComponent.prototype.getArea = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_AREA_DETAILS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.getAreas = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
            _this.reRenderDT();
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //create area...
    AreaComponent.prototype.createArea = function (Data1) {
        var _this = this;
        this._globalURL.isLoading = true;
        this._cmrcservice.post((this._globalURL.CREATE_AREA + Data1.value.AreaName), null, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.AddAreaMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        _this.getArea();
                        Data1.control.reset();
                    }
                    else {
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.NotAreaAddMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this._globalURL.isLoading = false;
                    }
                }
            }
            else {
                if (res.status == 200) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.AddAreaMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getArea();
                }
                else {
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.NotAreaAddMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //Delete Area
    AreaComponent.prototype.delete = function (data) {
        debugger;
        this.areaModel = data;
        debugger;
    };
    AreaComponent.prototype.deleteArea = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_AREA + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this.message = _this._common_message.DeleteAreaMsg;
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                    _this.getArea();
                }
                else {
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.AreaNotDeleteMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                    _this.message = _this._common_message.DeleteAreaMsg;
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                    _this.getArea();
                }
                else {
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.AreaNotDeleteMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    AreaComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */])
    ], AreaComponent.prototype, "dtElement", void 0);
    AreaComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/area/area.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], AreaComponent);
    return AreaComponent;
}());

//Anjali....


/***/ }),

/***/ "../../../../../src/app/components/cmrc/dashboard/dashboard.component.html":
/***/ (function(module, exports) {

module.exports = "<!-- <div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n  <loading-selector>\r\n  </loading-selector>\r\n</div> -->\r\n<!-- <div *ngIf=\"showMessage\">\r\n  <message-selector [message]=\"message\">\r\n  </message-selector>\r\n</div> -->\r\n<div *ngIf=\"showErrorMessage\">\r\n  <error-message-selector [message]=\"message\">\r\n  </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n  <warning-message-selector [message]=\"message\">\r\n  </warning-message-selector>\r\n</div>\r\n<section class=\"content-header\">\r\n  <div class=\"col-md-12\" style=\"padding:3px;\">\r\n    <div class=\"col-md-4\">\r\n      <label style=\"font-size:24px\" *ngIf=\"showCmrcDashbord\">\r\n        CMRC DASHBOARD DETAILS\r\n      </label>\r\n    </div>\r\n    <div class=\"col-md-6 col-md-offset-2\" *ngIf=\"showVoOnlyForCMRC == 2\">\r\n      <div class=\"col-md-2\" style=\"padding-left:0px;padding-right:0px;\">\r\n        <label style=\"font-size:15px\">\r\n          <span *ngIf=\"lang.en\">SELECT VO</span>\r\n          <span *ngIf=\"lang.mr\">व्हीओ निवडा</span>\r\n        </label>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <select [disabled]=\"!showCmrcDashbord\" class=\"form-control\" (change)=\"voDashboard(selectedVoId.viewModel)\" (ngModel)=\"selectedVoId\"\r\n          #selectedVoId=\"ngModel\" id=\"selectVo\" name=\"selectVo\">\r\n          <option *ngFor=\"let Vo of Vos\" [value]=\"Vo.Key\">{{Vo.Value}}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"col-md-2\">\r\n        <button [disabled]=\"showCmrcDashbord\" class=\"btn btn-primary\" (click)=\"refreshDashboard()\">CHANGE</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<section class=\"content\" *ngIf=\"showCmrcDashbord\" style=\"margin-top:27px;\">\r\n  <!-- Info boxes -->\r\n  <div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n  </div>\r\n  <div class=\" vo_dashboard\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-4\">\r\n        <div class=\"box-body box_section\">\r\n          <table class=\"table\" style=\"width:100%\">\r\n            <thead>\r\n              <tr *ngFor=\"let count of cmrcCounts\" style=\"border:1px solid #fff\">\r\n                <th class=\"finance-heading-name\">\r\n                  <div class=\"dashboard-finance-details\">\r\n                    <h5>\r\n                      <b>\r\n                        <span *ngIf=\"lang.en\">\r\n                          TOTAL\r\n                          <span class=\"text-center\" style=\"margin-top:0px\">{{count.Type | uppercase}} </span>\r\n                        </span>\r\n                        <span *ngIf=\"lang.mr\">एकूण\r\n                          <span class=\"text-center\" style=\"margin-top:0px\">{{count.Type | uppercase}} </span>\r\n                        </span>\r\n                      </b>\r\n                    </h5>\r\n                  </div>\r\n                </th>\r\n                <th class=\"finance-heading-value\">\r\n                  <div class=\"dashboard-finance-details\">\r\n                    <h5>\r\n                      <b>{{count.Count}}</b>\r\n                    </h5>\r\n                  </div>\r\n                </th>\r\n              </tr>\r\n              <tr style=\"border:1px solid #fff\">\r\n                <th class=\"finance-heading-name\">\r\n                  <div class=\"dashboard-finance-details\">\r\n                    <h5>\r\n                      <b>\r\n                        TOTAL CAPITAL RESERVED FUND\r\n                      </b>\r\n                    </h5>\r\n                  </div>\r\n                </th>\r\n                <th class=\"finance-heading-value\">\r\n                  <div class=\"dashboard-finance-details\">\r\n                    <h5>\r\n                      <b>{{financeDetails.TotalFundAmtAvailable}}</b>\r\n                    </h5>\r\n                  </div>\r\n                </th>\r\n              </tr>\r\n              <tr style=\"border:1px solid #fff\">\r\n                <th class=\"finance-heading-name\">\r\n                  <div class=\"dashboard-finance-details\">\r\n                    <h5>\r\n                      <b>\r\n                        TOTAL FUND DISTRIBUTED\r\n                      </b>\r\n                    </h5>\r\n                  </div>\r\n                </th>\r\n                <th class=\"finance-heading-value\">\r\n                  <div class=\"dashboard-finance-details\">\r\n                    <h5>\r\n                      <b>{{financeDetails.TotalFundAmtSpend}}</b>\r\n                    </h5>\r\n                  </div>\r\n                </th>\r\n              </tr>\r\n              <tr style=\"border:1px solid #fff\">\r\n                <th class=\"finance-heading-name\">\r\n                  <div class=\"dashboard-finance-details\">\r\n                    <h5>\r\n                      <b>\r\n                        TOTAL FUND AVAILABLE\r\n                      </b>\r\n                    </h5>\r\n                  </div>\r\n                </th>\r\n                <th class=\"finance-heading-value\">\r\n                  <div class=\"dashboard-finance-details\">\r\n                    <h5>\r\n                      <b>{{financeDetails.TotalAmtAvailable}}</b>\r\n                    </h5>\r\n                  </div>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-8\">\r\n        <div class=\"box-body box_section\" style=\"overflow:auto;\">\r\n          <table class=\"table table-bordered common_table\">\r\n            <caption class=\"text-center btn-info\" style=\"color:#fff; background-color: cadetblue\">\r\n              <h4 style=\"margin:-3px 10px;\" *ngIf=\"lang.en\">\r\n                <label class=\"table-head\"> COMMUNITY MANAGED RESOURCE CENTER (CMRC)</label>\r\n                <button class=\"btn btn-primary pdf-button\" (click)=\"R23CmrcSummeryExportToPDF()\">\r\n                  <span>\r\n                    <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                  </span>\r\n                  PDF</button>\r\n              </h4>\r\n              <h4 style=\"margin:-3px 10px;\" *ngIf=\"lang.mr\">\r\n                <label class=\"table-head\"> समुदाय संगोपन संसाधन केंद्र</label>\r\n                <button class=\"btn btn-primary pdf-button\" (click)=\"R23CmrcSummeryExportToPDF()\">\r\n                  <span>\r\n                    <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                  </span>\r\n                  PDF</button>\r\n              </h4>\r\n            </caption>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">CMRC NAME</span>\r\n                  <span *ngIf=\"lang.mr\">सि.एम.आर.सी. नाव</span>\r\n                </th>\r\n                <td colspan=\"3\">{{cmrcDetails.Name | uppercase}}</td>\r\n              </tr>\r\n              <br>\r\n            </thead>\r\n            <tbody style=\"margin-top:12px;\">\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">AREA</span>\r\n                  <span *ngIf=\"lang.mr\">क्षेत्र</span>\r\n                </th>\r\n                <td>{{cmrcDetails.Area | uppercase}}</td>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">PAN CARD NUMBER</span>\r\n                  <span *ngIf=\"lang.mr\">पॅन कार्ड क्रमांक </span>\r\n                </th>\r\n                <td>{{cmrcDetails.PanCardNumber}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">VILLAGE NAME</span>\r\n                  <span *ngIf=\"lang.mr\">गावाचे नांव </span>\r\n                </th>\r\n                <td>{{cmrcDetails.Taluka | uppercase}}</td>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">CMRC FORMATION DATE</span>\r\n                  <span *ngIf=\"lang.mr\">\r\n                    सीएमआरसी स्थापना दिनांक\r\n                  </span>\r\n                </th>\r\n\r\n                <td>{{cmrcDetails.FormationDate | date: 'dd-MMM-yyyy'}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">ADDRESS</span>\r\n                  <span *ngIf=\"lang.mr\">पत्ता </span>\r\n                </th>\r\n                <td>{{cmrcDetails.Address | uppercase}}</td>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">BANK AC NO</span>\r\n                  <span *ngIf=\"lang.mr\">\r\n                    बँक खाते क्रमांक\r\n                  </span>\r\n                </th>\r\n                <td>{{cmrcDetails.BankAccountNumber}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">TALUKA</span>\r\n                  <span *ngIf=\"lang.mr\">तालुका </span>\r\n                </th>\r\n                <td>{{cmrcDetails.Taluka | uppercase}}</td>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">BANK NAME</span>\r\n                  <span *ngIf=\"lang.mr\">बँकेचे नांव </span>\r\n                </th>\r\n                <td>{{cmrcDetails.BankName | uppercase}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">DISTRICT</span>\r\n                  <span *ngIf=\"lang.mr\">जिल्हा </span>\r\n                </th>\r\n                <td>{{cmrcDetails.District | uppercase}}</td>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">BRANCH NAME</span>\r\n                  <span *ngIf=\"lang.mr\">शाखा नांव </span>\r\n                </th>\r\n                <td>{{cmrcDetails.BranchName | uppercase}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">PINCODE</span>\r\n                  <span *ngIf=\"lang.mr\">पिनकोड </span>\r\n                </th>\r\n                <td>{{cmrcDetails.PinCode}}</td>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">BANK ADDRESS</span>\r\n                  <span *ngIf=\"lang.mr\">बँक पत्ता </span>\r\n                </th>\r\n                <td>{{cmrcDetails.BankAddress | uppercase}} </td>\r\n              </tr>\r\n              <tr>\r\n                <th></th>\r\n                <td></td>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">IFSC CODE </span>\r\n                  <span *ngIf=\"lang.mr\">आय.एफ.एस.सी </span>\r\n                </th>\r\n                <td>{{cmrcDetails.IFSCCode}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"\" style=\"margin-top:12px\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <h4 class=\"btn-warning text-center\" style=\"font-weight:bold;background-color: cadetblue;padding: 6px;margin-bottom:1px;\">\r\n            <span *ngIf=\"lang.en\">FUND AMOUNT DISTRIBUTION</span>\r\n            <span *ngIf=\"lang.mr\">फंड वाटप </span>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"box-body box_section\">\r\n            <table class=\"table table-bordered common_table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">VO</span>\r\n                    <span *ngIf=\"lang.mr\">व्हीओ नाव</span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">AMOUNT</span>\r\n                    <span *ngIf=\"lang.mr\">रक्कम </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">AMOUNT PAID DATE</span>\r\n                    <span *ngIf=\"lang.mr\">रक्कम देय दिनांक </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">\r\n                      AMOUNT REASON\r\n                    </span>\r\n                    <span *ngIf=\"lang.mr\">\r\n                      निधी कारण\r\n                    </span>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let fundDetail of fundDetails\">\r\n                  <td>{{fundDetail.ToVOName}}</td>\r\n                  <td>{{fundDetail.ApproveAmount | currency: 'INR'}}</td>\r\n                  <td>{{fundDetail.ApprovedDate| date: 'dd-MMM-yyyy'}}</td>\r\n                  <td>{{fundDetail.FundReason}}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>-</td>\r\n                  <td>{{totalApprovedAmt | currency: 'INR'}}</td>\r\n                  <td>-</td>\r\n                  <td>-</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <h4 class=\"btn-warning text-center\" style=\"background-color: cadetblue;padding: 6px;margin-bottom:1px;\">\r\n          <label *ngIf=\"lang.en\">\r\n            BALANCESHEET</label>\r\n          <label *ngIf=\"lang.mr\">\r\n            बॅलेन्सशीट </label>\r\n        </h4>\r\n      </div>\r\n    </div>\r\n    <!--  Liabilities Income and Asset -->\r\n    <div class=\"col-md-12 box_section\">\r\n      <div class=\"col-md-6\" style=\"padding-right: 0px;\">\r\n        <div class=\"box-body\" style=\"padding-right: 0px;\">\r\n          <table class=\"table table-bordered common_table\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">LIABILITIES</span>\r\n                  <span *ngIf=\"lang.mr\">देणे </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">AMOUNT</span>\r\n                  <span *ngIf=\"lang.mr\">रक्कम </span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(2)\">\r\n                    <span *ngIf=\"lang.en\"> CURRENT LIABILITIES</span>\r\n                    <span *ngIf=\"lang.mr\">चालू देणे </span>\r\n                  </a>\r\n                </td>\r\n                <td>\r\n                  <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(2)\">\r\n                    {{balancesheetCMRC.LiabilityAmount | currency: 'INR'}}\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <span *ngIf=\"lang.en\"> CAPITAL RESERVED </span>\r\n                  <span *ngIf=\"lang.mr\"> आरक्षित भांडवल </span>\r\n                </td>\r\n                <td>\r\n                  {{balancesheetCMRC.CapitalReserved | currency: 'INR'}}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(2)\">\r\n                    <span *ngIf=\"lang.en\">NET INCOME/ LOSS</span>\r\n                    <span *ngIf=\"lang.mr\">निव्वळ फायदा /तोटा </span>\r\n                  </a>\r\n                </td>\r\n                <td>\r\n                  {{balancesheetCMRC.NetProfitOrLoss | currency: 'INR'}}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">TOTAL</span>\r\n                  <span *ngIf=\"lang.mr\">एकूण </span>\r\n                </th>\r\n                <td>{{balancesheetCMRC.TotalLiability + balancesheetCMRC.CapitalReserved | currency: 'INR'}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\" style=\"padding-left: 0px;\">\r\n        <div class=\"box-body\" style=\"padding-left: 0px;\">\r\n          <table class=\"table table-bordered common_table\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">ASSETS </span>\r\n                  <span *ngIf=\"lang.mr\">मालमत्ता </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">AMOUNT </span>\r\n                  <span *ngIf=\"lang.mr\">रक्कम </span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(1)\">\r\n                    <span *ngIf=\"lang.en\">CURRENT ASSETS </span>\r\n                    <span *ngIf=\"lang.mr\">सध्याची मालमत्ता </span>\r\n                  </a>\r\n                </td>\r\n                <td>\r\n                  <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(1)\">\r\n                    {{balancesheetCMRC.AssetAmount | currency: 'INR'}}\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <span *ngIf=\"lang.en\">CASH IN HAND </span>\r\n                  <span *ngIf=\"lang.mr\">रोख रक्कम </span>\r\n                </td>\r\n                <td>{{balancesheetCMRC.CashInHandAmount | currency: 'INR'}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <span *ngIf=\"lang.en\">CASH AT BANK </span>\r\n                  <span *ngIf=\"lang.mr\">बँकेतील रक्कम </span>\r\n                </td>\r\n                <td>{{balancesheetCMRC.cashAtBankAmount | currency: 'INR'}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">TOTAL</span>\r\n                  <span *ngIf=\"lang.mr\">एकूण </span>\r\n                </th>\r\n                <td>{{balancesheetCMRC.TotalAsset | currency: 'INR'}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- End Liabilities and asset-->\r\n\r\n\r\n\r\n    <!-- Income and Expenditure  Detail -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\" style=\"margin-top:24px;\">\r\n        <div class=\"box-body box_section\">\r\n          <table class=\"table table-bordered common_table\">\r\n            <thead>\r\n              <tr>\r\n                <th colspan=\"2\">\r\n                  <span *ngIf=\"lang.en\">INCOME & EXPENDITURE</span>\r\n                  <span *ngIf=\"lang.mr\">उत्पन्न / खर्च</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <thead>\r\n              <tr>\r\n                <td>\r\n                  <span *ngIf=\"lang.en\">INCOME </span>\r\n                  <span *ngIf=\"lang.mr\">उत्पन्न </span>\r\n                </td>\r\n                <td>{{balancesheetCMRC.IncomeAmount | currency: 'INR'}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <span *ngIf=\"lang.en\">EXPENSE </span>\r\n                  <span *ngIf=\"lang.mr\">खर्च </span>\r\n                </td>\r\n                <td>{{balancesheetCMRC.ExpenseAmount | currency: 'INR'}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <span *ngIf=\"lang.en\">NET INCOME/LOSSS</span>\r\n                  <span *ngIf=\"lang.mr\">निव्वळ उत्पन्न/खर्च </span>\r\n                </td>\r\n                <td>{{balancesheetCMRC.IncomeAmount - balancesheetCMRC.ExpenseAmount | currency: 'INR'}}</td>\r\n              </tr>\r\n            </thead>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- End Income and Expenditure detail -->\r\n  </div>\r\n  <!-- end Scheme SHG Table -->\r\n  <!-- Start Scheme Scheme Table -->\r\n\r\n  <!-- Start Detail Table -->\r\n\r\n</section>\r\n<!-- /.content -->\r\n\r\n<!--VO DASHBORD-->\r\n<!--Anjali...-->\r\n<!-- Main content -->\r\n\r\n<span *ngIf=\"showVoDashbord\">\r\n  <vo-dashboard></vo-dashboard>\r\n</span>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/dashboard/dashboard.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CMRCDashboardComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var CMRCDashboardComponent = (function () {
    function CMRCDashboardComponent(_cmrcservice, _access_token, _globalURL, voService, _common_message, _router, _commonService, globalVariable, lang, exportToPdf) {
        this._cmrcservice = _cmrcservice;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this.voService = voService;
        this._common_message = _common_message;
        this._router = _router;
        this._commonService = _commonService;
        this.globalVariable = globalVariable;
        this.lang = lang;
        this.exportToPdf = exportToPdf;
        this.showlabel = false;
        this.CapitalReserdev = 1000000;
        this.hidelabel = true;
        this.isDataCountLoaded = true;
        this.totalApprovedAmt = 0;
        this.shgCount = 0;
        this.memebrCount = 0;
        this.totalshgCount = 0;
        this.totalMemCount = 0;
        this.totalCastCount = 0;
        this.memebersDataCasteWise = new Array();
        this.schemeWiseSHGCasteData = null;
        this.casteWiseData = null;
        _globalURL.isLoading = false;
        this.cmrcDetails = null;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
        this.showCmrcDashbord = true;
        this.showVoDashbord = false;
        this.financeDetails = null;
    }
    CMRCDashboardComponent.prototype.ngOnInit = function () {
        //   this.getBalanceSheet();
        this.globalVariable.VoId = 0;
        this.globalVariable.roleId = this.globalVariable.CMRCRoleId;
        this.getCMRCDetail();
        this.getAllVoShgMemberCount();
        this.getVoIdAndName();
        this._globalURL.isLoading = true;
        this.totalMembers = 0;
        this.totalLoanApprovedAmt = 0;
        this.purpose_total_mem = 0;
        this.purpose_total_mem = 0;
        this.purpose_total_mem_per = 0;
        this.purpose_total_amt = 0;
        this.purpose_total_amt_per = 0;
        this.caste_total_mem = 0;
        this.caste_total_mem_per = 0;
        this.caste_total_loan_con_mem = 0;
        this.caste_total_loan_con_mem_per = 0;
        this.caste_total_loan_not_con_mem = 0;
        this.caste_total_loan_not_con_mem_per = 0;
        this.CashInHand = 0;
        this.caste_total_loan_amt = 0;
        this.getFund();
        this.showVoOnlyForCMRC = sessionStorage.getItem("roleId");
    };
    CMRCDashboardComponent.prototype.getAllVOCMRCId = function () {
        var _this = this;
        this.showCmrcDashbord = true;
        this.showVoDashbord = false;
        this._cmrcservice.get(this._globalURL.GET_VO_BY_CMRC_ID, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.getAllVOCMRC = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //cmrc vo shg and member count..
    CMRCDashboardComponent.prototype.getAllVoShgMemberCount = function () {
        var _this = this;
        this.showCmrcDashbord = true;
        this.showVoDashbord = false;
        this._cmrcservice.get(this._globalURL.GET_VO_SHG_MEMBER_COUNT_CMRC, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.cmrcCounts = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    CMRCDashboardComponent.prototype.getCMRCDetail = function () {
        var _this = this;
        debugger;
        this.showCmrcDashbord = true;
        this.showVoDashbord = false;
        this.globalVariable.VoId = 0;
        var finalUrl = "";
        if (sessionStorage.getItem("roleId") == "2") {
            this._globalURL.get_GET_USER_PROFILE_DETAIL = "";
            finalUrl = this._globalURL.GET_USER_PROFILE_DETAIL + (sessionStorage.getItem("roleId") == null ? "2" : sessionStorage.getItem("roleId"));
        }
        else
            finalUrl = this._globalURL.GET_USER_PROFILE_DETAIL;
        this._cmrcservice.get(finalUrl, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.cmrcDetails = res.Data;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
        var balFinalUrl = "";
        if (sessionStorage.getItem("roleId") == "2") {
            this._globalURL.get_GET_BALANCESHEET = "";
            balFinalUrl = this._globalURL.GET_BALANCESHEET + (sessionStorage.getItem("roleId") == null ? "2" : sessionStorage.getItem("roleId")) + "&frDt=" + this.lastFinanceYearOrFromDt + "&toDt=" + this.todaysOrToDt;
        }
        else
            balFinalUrl = this._globalURL.GET_BALANCESHEET + "&frDt=null&toDt=null";
        this._cmrcservice.get(balFinalUrl, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    _this.balancesheetCMRC = JSON.parse(res._body).Data;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            else {
                if (res.Status == true) {
                    _this.balancesheetCMRC = res.Data;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
        this._cmrcservice.get(sessionStorage.getItem("roleId") == "2" ? this._globalURL.GET_CMRC_FINANCE_DETAILS : this._globalURL.GET_CMRC_FINANCE_DETAILS + "?cmrcId=" + sessionStorage.getItem("cmrcId"), sessionStorage.getItem("access_token"))
            .then(function (res) {
            _this._globalURL.isLoading = false;
            if (res.Status === true)
                _this.financeDetails = res.Data;
            else {
                _this.financeDetails = null;
                _this.showErrorMessage = true;
                _this._common_message.CMRC_Finance_Details_Failed_to_load;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.showErrorMessage = true;
            _this._common_message.CMRC_Finance_Details_Failed_to_load;
            console.log("error while getting the CMRC finance details " + res);
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //GET vo in dropdown ...
    CMRCDashboardComponent.prototype.getVoIdAndName = function () {
        var _this = this;
        this.showCmrcDashbord = true;
        this.showVoDashbord = false;
        this._globalURL.isLoading = true;
        this._cmrcservice.get(this._globalURL.GET_VO_CMRCID, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.Vos = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    CMRCDashboardComponent.prototype.refreshDashboard = function () {
        this.showVoDashbord = false;
        this.showCmrcDashbord = true;
    };
    // GET ALL VO DASHBORD....
    CMRCDashboardComponent.prototype.voDashboard = function (selectedVoId) {
        sessionStorage.setItem("voId", selectedVoId);
        sessionStorage.setItem("viewForRoleId", "3");
        this._globalURL.get_GET_SHEMEWISE_SHG = selectedVoId.toString();
        this._globalURL.get_TOTAL_SHGANDMEMBER_COUNT = selectedVoId.toString();
        this._globalURL.get_GET_MARRITAL_STATUS_WISE_DATA = selectedVoId.toString();
        this._globalURL.get_GET_AGE_WISE_DATA = selectedVoId.toString();
        this._globalURL.get_GET_LOAN_PURPOSE_WISE_DATA = selectedVoId.toString();
        this._globalURL.get_GET_LOAN_CASTE_WISE_DATA = selectedVoId.toString();
        this._globalURL.get_GET_FINANCE_DETAILS = selectedVoId.toString();
        this._globalURL.get_GET_BALANCESHEET = selectedVoId.toString();
        this._globalURL.get_GET_USER_PROFILE_DETAIL = selectedVoId.toString();
        this.showVoDashbord = true;
        this.showCmrcDashbord = false;
    };
    CMRCDashboardComponent.prototype.naviagateToAccTransaction = function (glTypeId) {
        this.globalVariable.selectedGLTypeId = glTypeId;
        this._router.navigate(['/cmrc/cmrcAccTransaction']);
    };
    CMRCDashboardComponent.prototype.getFund = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this.totalApprovedAmt = 0;
        var finalUrl = "";
        if (sessionStorage.getItem("roleId") === "2")
            finalUrl = this._globalURL.GET_ALL_VO_FUND_DETAILS_FOR_CMRC + "?status=" + 2;
        else
            finalUrl = this._globalURL.GET_ALL_VO_FUND_DETAILS_FOR_CMRC + "?status=2&cmrcId=" + sessionStorage.getItem("cmrcId");
        this._cmrcservice.get(finalUrl, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                //this.reRenderDT();
                _this.fundDetails = res.Data;
                for (var item in res.Data) {
                    _this.totalApprovedAmt = _this.totalApprovedAmt + res.Data[item].ApproveAmount;
                }
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    CMRCDashboardComponent.prototype.showCMRCDashboard = function () {
        this.showCmrcDashbord = true;
        this.showVoDashbord = false;
        this.globalVariable.roleId = this.globalVariable.CMRCRoleId;
    };
    CMRCDashboardComponent.prototype.R23CmrcSummeryExportToPDF = function () {
        this._globalURL.isLoading = true;
        this.exportToPdf.R23CmrcSummeryExportToPDF(this.cmrcDetails, this.cmrcCounts, this.globalVariable.cmrcBaseCode);
        this._globalURL.isLoading = false;
    };
    CMRCDashboardComponent.prototype.R41PurposewiseLoanDistExportToPdf = function () {
        this._globalURL.isLoading = true;
        var totalData = {
            "TotalMember": this.purpose_total_mem.toString(),
            "TotalMemberPer": this.purpose_total_mem_per.toString(),
            "TotalAmount": this.purpose_total_amt.toString(),
            "TotalAmountPer": this.purpose_total_amt_per.toString()
        };
        var VoName = {
            "Name": this.voDetails.VOName,
            "Code": this.voDetails.Code,
        };
        this.exportToPdf.R41PurposewiseLoanDistExportToPdf(this.GetPurposeWiseData, totalData, VoName);
        this._globalURL.isLoading = false;
    };
    CMRCDashboardComponent.prototype.ExportBalancesheetToPdf = function () {
        this._globalURL.isLoading = true;
        this.globalVariable.CashInHand = this.balancesheetVO.cashAtBankAmount;
        this.globalVariable.CashAtBank = this.balancesheetVO.CashInHandAmount;
        // this.globalVariable.CashInHand = this.balancesheet.CashInHandAmount;
        // this.globalVariable.CashAtBank = this.balancesheet.cashAtBankAmount;
        this.globalVariable.TotalAvailableAmount = this.balancesheetVO.cashAtBankAmount + this.balancesheetVO.CashInHandAmount;
        var reportData = {
            "balancesheet": this.balancesheetVO,
            "CashInHand": this.globalVariable.CashInHand,
            "CashAtBank": this.globalVariable.CashAtBank,
            "TotalAvailableAmount": this.globalVariable.TotalAvailableAmount
        };
        var headerData = {
            "VOName": this.globalVariable.VOName,
            "Code": this.globalVariable.voBaseCode,
            "frDt": this.lastFinanceYearOrFromDt,
            "toDt": this.todaysOrToDt
        };
        var forVoName = {
            "VOName": this.voDetails.VOName,
            "Code": this.voDetails.Code,
        };
        this.exportToPdf.RExportBalancesheetToPdf(reportData, headerData, forVoName);
        this._globalURL.isLoading = false;
    };
    CMRCDashboardComponent.prototype.voProfileDetails = function () {
        this._globalURL.isLoading = true;
        debugger;
        var forVoName = {
            "Name": this.voDetails.VOName,
        };
        this.exportToPdf.voProfileDetails(this.voDetails, forVoName);
        this._globalURL.isLoading = false;
    };
    CMRCDashboardComponent.prototype.maritalStatusWiseDataForVo = function () {
        this._globalURL.isLoading = true;
        var VoName = {
            "Name": this.voDetails.VOName,
        };
        this.exportToPdf.maritalStatusWiseDataForVo(this.GetMarritalStatusData, this.voDetails, VoName);
        this._globalURL.isLoading = false;
    };
    CMRCDashboardComponent.prototype.ageWiseDataForVo = function () {
        this._globalURL.isLoading = true;
        var VoName = {
            "Name": this.voDetails.VOName,
            "Code": this.voDetails.Code,
        };
        this.exportToPdf.ageWiseDataForVo(this.GetAgeWiseData, VoName);
        this._globalURL.isLoading = false;
    };
    CMRCDashboardComponent.prototype.castWiseLoanDistributionDataForVo = function () {
        this._globalURL.isLoading = true;
        var total = {
            "CastTotalMembers": this.caste_total_mem.toString(),
            "CastTotalMemberPer": this.caste_total_mem_per.toString(),
            "CastTotalLoanConsumedMem": this.caste_total_loan_con_mem.toString(),
            "CastTotalLoanConsumedMemberPer": this.caste_total_loan_con_mem_per.toString(),
            "CastTotalLoanNotConsumedMem": this.caste_total_loan_not_con_mem.toString(),
            "CastTotalLoanNotConsumedMemPer": this.caste_total_loan_not_con_mem_per.toString(),
            "CasteTotalLoanAmt": this.caste_total_loan_amt.toString()
        };
        var VoName = {
            "Name": this.voDetails.VOName,
            "Code": this.voDetails.Code,
        };
        this.exportToPdf.castWiseLoanDistributionDataForVo(this.GetCasteWiseData, total, VoName);
        this._globalURL.isLoading = false;
    };
    CMRCDashboardComponent.prototype.R38_SchemeAndCastWiseSHGDetailPDF = function () {
        this._globalURL.isLoading = true;
        //this.schemeWiseSHGCasteData
        var forVoName = {
            "Name": this.voDetails.VOName,
            "Code": this.voDetails.Code,
            "CMRCName": this.voDetails.CMRCName,
            "ParentCode": this.voDetails.ParentCode,
        };
        this.exportToPdf.R38_SchemeAndCastWiseSHGDetails(this.schemeWiseSHGCasteData, this.casteWiseData, this.shgCount, this.memebrCount, forVoName);
        this._globalURL.isLoading = false;
    };
    CMRCDashboardComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'cmrc-dashboard',
            template: __webpack_require__("../../../../../src/app/components/cmrc/dashboard/dashboard.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_4__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_10__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_5__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_9__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_6__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_7__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_8__services_reports_exportpdf__["a" /* ExportToPDF */]])
    ], CMRCDashboardComponent);
    return CMRCDashboardComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/designation/designation.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">   \r\n    <loading-selector>\r\n    </loading-selector>\r\n  </div>\r\n  <div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n  </div>\r\n  <div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-3\">\r\n                <label class=\"heading-title\">\r\n\r\n                    <span *ngIf=\"lang.en\"> DESIGNATION DETAILS</span>\r\n                    <span *ngIf=\"lang.mr\">पद तपशील </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createDesignation\">\r\n\r\n                        <span *ngIf=\"lang.en\"> ADD NEW DESIGNATION</span>\r\n                        <span *ngIf=\"lang.mr\">नवीन पद समाविष्ट करा </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table  datatable [dtTrigger]=\"dtTrigger\"  class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">DESIGNATION ID</span>\r\n                                    <span *ngIf=\"lang.mr\">पद क्रमांक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">FOR GROUP</span>\r\n                                    <span *ngIf=\"lang.mr\">ग्रुप साठी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">DESIGNATION NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">पद </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getDesignation of getDesignations\">\r\n                                <td>{{getDesignation.Id}}</td>\r\n                                <td>{{getDesignation.ForGroup}}</td>\r\n                                <td>{{getDesignation.Name | uppercase}}</td>\r\n                                <td>{{getDesignation.CreatedBy}}</td>\r\n                                <td>{{getDesignation.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td class=\"record-action\">\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteDesignation\" (click)=\"delete(getDesignation)\">\r\n                                        <span *ngIf=\"lang.en\">DELETE</span>\r\n                                        <span *ngIf=\"lang.mr\"> काढून टाका </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"createDesignation\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">DESIGNATION FORM</span>\r\n                    <span *ngIf=\"lang.mr\"> पद फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #designationForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">FOR GROUP</span>\r\n                                        <span *ngIf=\"lang.mr\">ग्रुप साठी </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select (ngModel)=\"forGroup\" name=\"forGroup\" class=\"form-control\" id=\"forGroup\" required #forGroup=\"ngModel\">\r\n                                        <option value=\"MAVIM\">MAVIM</option>\r\n                                        <option value=\"CMRC\">CMRC</option>\r\n                                        <option value=\"VO\">VO</option>\r\n                                        <option value=\"Member\">Member</option>\r\n                                        <option value=\"SC\">SC</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"forGroup.invalid && forGroup.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        Please Select FOR GROUP\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">ENTER DESIGNATION NAME</span>\r\n                                        <span *ngIf=\"lang.mr\">पदाचे नांव </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"Name\" class=\"form-control\" id=\"Name\" name=\"Name\" #Name=\"ngModel\" required maxlength=\"50\">\r\n                                    <div *ngIf=\"Name.invalid && Name.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!Name.hasError('required')\">Designation is required !</div>\r\n                                        <!-- <div [hidden]=\"!Name.hasError('pattern')\">Designation should be only Letters</div> pattern=\"[A-Za-z]*\" -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" [disabled]=\"designationForm.invalid\" (click)=\"createDesignation(designationForm)\" data-dismiss=\"modal\"\r\n                                    class=\"btn btn-primary\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteDesignation\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">DELETE DESIGNATION </span>\r\n                    <span *ngIf=\"lang.mr\">पद काढा </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteDesignation(designationModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--Anjali....-->"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/designation/designation.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DesignationComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var DesignationComponent = (function () {
    function DesignationComponent(_cmrcservice, _router, _access_token, _globalURL, lang, _globalVariable, _common_message) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this.lang = lang;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_8_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    DesignationComponent.prototype.ngOnInit = function () {
        // this.getDesignation();
    };
    DesignationComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getDesignation();
    };
    //GET designation ...
    DesignationComponent.prototype.getDesignation = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_DESIGNATION_DETAILS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.getDesignations = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
            _this.reRenderDT();
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //craete designation....
    DesignationComponent.prototype.createDesignation = function (Data1) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.post((this._globalURL.CREATE_DESIGNATION + "?forGroup=" + Data1.value.forGroup + "&designation=" + Data1.value.Name), Data1.value, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        Data1.control.reset();
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.AddDesignationMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        _this.getDesignation();
                    }
                    else {
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.NotAddDesignationMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this._globalURL.isLoading = false;
                    }
                    //this.reRenderDT();
                }
                else {
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.NotAddDesignationMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //delete  designation....
    DesignationComponent.prototype.delete = function (data) {
        debugger;
        this.designationModel = data;
        debugger;
    };
    DesignationComponent.prototype.deleteDesignation = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_DESIGNATION + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.DeleteDesignationMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getDesignation();
                }
                else {
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.NotDeleteDesignationMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                    ;
                }
                //this.reRenderDT();
            }
            else {
                if (res.status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.AddDistrictMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getDesignation();
                }
                else {
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.NotDeleteDesignationMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                    ;
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    DesignationComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */])
    ], DesignationComponent.prototype, "dtElement", void 0);
    DesignationComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/designation/designation.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], DesignationComponent);
    return DesignationComponent;
}());

//Anjali...


/***/ }),

/***/ "../../../../../src/app/components/cmrc/district/district.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">   \r\n    <loading-selector>\r\n    </loading-selector>\r\n  </div>\r\n  <div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n  </div>\r\n  <div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-3\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">DISTRICT DETAILS </span>\r\n                    <span *ngIf=\"lang.mr\">जिल्ह्याचा तपशील </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createDistrict\">\r\n                        <span *ngIf=\"lang.en\">ADD NEW DISTRICT </span>\r\n                        <span *ngIf=\"lang.mr\"> नवीन ज़िल्हा जोडा</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table datatable [dtTrigger]=\"dtTrigger\" class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">DISTRICT ID </span>\r\n                                    <span *ngIf=\"lang.mr\">ज़िल्हा आय डी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">DISTRICT NAME </span>\r\n                                    <span *ngIf=\"lang.mr\">जिल्ह्याचे नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getDistrict of getDistricts\">\r\n                                <td>{{getDistrict.Id}}</td>\r\n                                <td>{{getDistrict.Name | uppercase}}</td>\r\n                                <td>{{getDistrict.CreatedBy}}</td>\r\n                                <td>{{getDistrict.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td class=\"record-action\">\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteDistrict\" (click)=\"delete(getDistrict)\">\r\n                                        <span *ngIf=\"lang.en\">DELETE</span>\r\n                                        <span *ngIf=\"lang.mr\"> काढून टाका </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"createDistrict\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width:300px;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">DISTRICT FORM </span>\r\n                    <span *ngIf=\"lang.mr\">ज़िल्हा फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #DistrictForm=\"ngForm\" id=\"bacgfat\" class=\"input-group\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">DISTRICT NAME </span>\r\n                                        <span *ngIf=\"lang.mr\">जिल्ह्याचे नाव </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"Name\" class=\"form-control\" id=\"Name\" name=\"Name\" #Name=\"ngModel\" required maxlength=\"50\">\r\n                                    <div *ngIf=\"Name.invalid && Name.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!Name.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Please District name is required !</span>\r\n                                            <span *ngIf=\"lang.mr\">कृपया ज़िल्हा आवश्यक आहे ! </span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!Name.hasError('pattern')\">District Name should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" [disabled]=\"DistrictForm.invalid\" (click)=\"createMasterDistrict(DistrictForm)\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteDistrict\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">DELETE DISTRICT</span>\r\n                    <span *ngIf=\"lang.mr\">जिल्हा वगळा </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteMasterDistrict(districtModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--Anjali...-->"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/district/district.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CmrcdistrictComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var CmrcdistrictComponent = (function () {
    function CmrcdistrictComponent(_cmrcservice, _router, _access_token, _globalURL, lang, _globalVariable, _common_message) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this.lang = lang;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_8_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    CmrcdistrictComponent.prototype.ngOnInit = function () {
        //this.getMasterDistrict();
    };
    CmrcdistrictComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getMasterDistrict();
    };
    //GET AREA AND ...
    CmrcdistrictComponent.prototype.getMasterDistrict = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_DISTRICT, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.getDistricts = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
            _this.reRenderDT();
        });
    };
    CmrcdistrictComponent.prototype.createMasterDistrict = function (data1) {
        var _this = this;
        this._globalURL.isLoading = true;
        var districtName = data1.value.Name;
        this.clearData = data1;
        debugger;
        // alert('designationModel');
        this._cmrcservice.post((this._globalURL.POST_DISTRICT + districtName), null, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.AddDistrictMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        _this.getMasterDistrict();
                        _this.clearData.control.reset();
                    }
                    else {
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.NotAddDistrictMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this._globalURL.isLoading = false;
                    }
                }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    CmrcdistrictComponent.prototype.delete = function (data) {
        debugger;
        this.districtModel = data;
        debugger;
    };
    CmrcdistrictComponent.prototype.deleteMasterDistrict = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_DISTRICT + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.deleteDistrictMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getMasterDistrict();
                }
                else {
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.NotDeleteDesignationMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                    ;
                }
                //   this.reRenderDT();
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    CmrcdistrictComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_2_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_2_angular_datatables__["a" /* DataTableDirective */])
    ], CmrcdistrictComponent.prototype, "dtElement", void 0);
    CmrcdistrictComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/district/district.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_4__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_7__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_6__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], CmrcdistrictComponent);
    return CmrcdistrictComponent;
}());

//Anjali..


/***/ }),

/***/ "../../../../../src/app/components/cmrc/economic_category/economic_category.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">   \r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n  </div>\r\n  <div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-5\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">ECONOMIC CATEGORY DETAILS </span>\r\n                    <span *ngIf=\"lang.mr\"> आर्थिक विभाग तपशील</span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#creategetEconomicCategoryForm\">\r\n                        <span *ngIf=\"lang.en\"> ADD ECONOMIC CATEGORY </span>\r\n                        <span *ngIf=\"lang.mr\"> आर्थिक विभाग जोडा </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table datatable [dtTrigger]=\"dtTrigger\" class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ECONOMIC CATEGORY ID </span>\r\n                                    <span *ngIf=\"lang.mr\"> आर्थिक विभाग आय डी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ECONOMIC CATEGORY NAME </span>\r\n                                    <span *ngIf=\"lang.mr\"> आर्थिक विभाग नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getEconomicCategory of getEconomicCategorys\">\r\n                                <td>{{getEconomicCategory.Id}}</td>\r\n                                <td>{{getEconomicCategory.Name | uppercase}}</td>\r\n                                <td>{{getEconomicCategory.CreatedBy}}</td>\r\n                                <td>{{getEconomicCategory.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td>\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deletegetEconomicCategoryForm\" (click)=\"delete(getEconomicCategory)\">\r\n                                        <span *ngIf=\"lang.en\">DELETE</span>\r\n                                        <span *ngIf=\"lang.mr\"> काढून टाका </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"creategetEconomicCategoryForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width:300px;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">ECONOMIC CATEGORY FORM </span>\r\n                    <span *ngIf=\"lang.mr\"> आर्थिक विभाग फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #EconomicCategoryForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">ECONOMIC CATEGORY NAME </span>\r\n                                        <span *ngIf=\"lang.mr\"> आर्थिक विभाग नाव </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"Name\" class=\"form-control\" id=\"Name\" name=\"Name\" #Name=\"ngModel\" required maxlength=\"50\">\r\n                                    <div *ngIf=\"Name.invalid && Name.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!Name.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Economic Category is required !</span>\r\n                                            <span *ngIf=\"lang.mr\"> आर्थिक विभाग आवश्यक आहे ! </span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!Name.hasError('pattern')\">EconomicCategory should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" [disabled]=\"EconomicCategoryForm.invalid\" (click)=\"createEconomicCategory(EconomicCategoryForm);\"\r\n                                    data-dismiss=\"modal\" class=\"btn btn-primary\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deletegetEconomicCategoryForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">ECONOMIC CATEGORY </span>\r\n                    <span *ngIf=\"lang.mr\"> आर्थिक विभाग </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteEconomicCategory(EconomicCategoryModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/economic_category/economic_category.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EconomiccategoryComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var EconomiccategoryComponent = (function () {
    function EconomiccategoryComponent(_cmrcservice, _router, lang, _access_token, _globalURL, _globalVariable, _common_message) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_8_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    EconomiccategoryComponent.prototype.ngOnInit = function () {
        // this.getEconomicCategory();
    };
    EconomiccategoryComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getEconomicCategory();
    };
    //GET AREA AND ...
    EconomiccategoryComponent.prototype.getEconomicCategory = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_ECONOMIC_CATEGORY_DETAILS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.getEconomicCategorys = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
            _this.reRenderDT();
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    EconomiccategoryComponent.prototype.createEconomicCategory = function (data1) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var economicCategory = data1.value.Name;
        //alert('designationModel');
        this._cmrcservice.post((this._globalURL.CREATE_ECONOMIC_CATEGORY + economicCategory), data1.value, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        data1.control.reset();
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.AddEconomicCategoryMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        _this.getEconomicCategory();
                    }
                    else {
                        _this._globalURL.isLoading = false;
                        ;
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.ErrorAddEconomicCategoryMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                    }
                }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    EconomiccategoryComponent.prototype.delete = function (data) {
        debugger;
        this.EconomicCategoryModel = data;
        debugger;
    };
    EconomiccategoryComponent.prototype.deleteEconomicCategory = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_ECONOMIC_CATEGORY + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.DeleteEconomicCaytegoryMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getEconomicCategory();
                }
                else {
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.ErrorDeleteEconomicCategoryMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                    ;
                }
            }
            else {
                if (res.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.DeleteEconomicCaytegoryMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getEconomicCategory();
                }
                else {
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.ErrorDeleteEconomicCategoryMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                    ;
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    EconomiccategoryComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */])
    ], EconomiccategoryComponent.prototype, "dtElement", void 0);
    EconomiccategoryComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/economic_category/economic_category.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], EconomiccategoryComponent);
    return EconomiccategoryComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/education/education.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">   \r\n    <loading-selector>\r\n    </loading-selector>\r\n  </div>\r\n  <div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n  </div>\r\n  <div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-3\">\r\n                <label class=\"heading-title\">\r\n\r\n                    <span *ngIf=\"lang.en\">EDUCATION DETAILS </span>\r\n                    <span *ngIf=\"lang.mr\"> शैक्षणिक तपशील </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createEducation\">\r\n                            <span *ngIf=\"lang.en\">ADD NEW EDUCATION</span>\r\n                            <span *ngIf=\"lang.mr\">नवीन शिक्षण समाविष्ट करा </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table datatable [dtTrigger]=\"dtTrigger\"  class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">EDUCATION ID</span>\r\n                                    <span *ngIf=\"lang.mr\">शैक्षणिक आय डी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">EDUCATION NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">शिक्षण </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getEducationDetail of getEducationDetails\">\r\n                                <td>{{getEducationDetail.Id}}</td>\r\n                                <td>{{getEducationDetail.Name | uppercase}}</td>\r\n                                <td>{{getEducationDetail.CreatedBy}}</td>\r\n                                <td>{{getEducationDetail.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td class=\"record-action\">\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteEducation\" (click)=\"delete(getEducationDetail)\">\r\n                                            <span *ngIf=\"lang.en\">DELETE</span>\r\n                                            <span *ngIf=\"lang.mr\"> काढून टाका  </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"createEducation\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width:300px;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title text-center\">\r\n                    <span *ngIf=\"lang.en\">EDUCATION FORM</span>\r\n                    <span *ngIf=\"lang.mr\"> शैक्षणिक फॉर्म  </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #EducationForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                            <span *ngIf=\"lang.en\">EDUCATION NAME</span>\r\n                                            <span *ngIf=\"lang.mr\">शिक्षण </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"EducationName\" class=\"form-control\" id=\"EducationName\" name=\"EducationName\" #EducationName=\"ngModel\"\r\n                                        required maxlength=\"50\">\r\n                                    <div *ngIf=\"EducationName.invalid && EducationName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!EducationName.hasError('required')\"> \r\n                                                <span *ngIf=\"lang.en\">Education is required !</span>\r\n                                                <span *ngIf=\"lang.mr\">शिक्षण हे आवश्यक आहे  ! </span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!EducationName.hasError('pattern')\">EducationName should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" [disabled]=\"EducationForm.invalid\" (click)=\"createEducation(EducationForm)\" data-dismiss=\"modal\"\r\n                                    class=\"btn btn-primary\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                        <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                        <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteEducation\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\"> \r\n                        <span *ngIf=\"lang.en\">DELETE EDUCATION DETAIL </span>\r\n                        <span *ngIf=\"lang.mr\">शैक्षणिक तपशील काढून टाका  </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                        <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                        <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteEducation(educationModel)\">\r\n                                    <span *ngIf=\"lang.en\">YES   </span>\r\n                                    <span *ngIf=\"lang.mr\">होय  </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">NO </span>\r\n                                    <span *ngIf=\"lang.mr\">नाही  </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/education/education.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EducationComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var EducationComponent = (function () {
    function EducationComponent(_cmrcservice, _router, lang, _access_token, _globalURL, _globalVariable, _common_message) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_8_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    EducationComponent.prototype.ngOnInit = function () {
        //this.getEducation();
    };
    EducationComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getEducation();
    };
    //GET AREA AND ...
    EducationComponent.prototype.getEducation = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_EDUCATION, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.getEducationDetails = res.Data;
                _this._globalURL.isLoading = false;
                // this.showMessage = true;
                // this.message = this._common_message.AddEducationMsg;
                // setInterval(() => {
                //     this.showMessage = false;
                // }, 5000);
            }
            else {
                _this._globalURL.isLoading = false;
                _this.showErrorMessage = true;
                _this.message = _this._common_message.AddEducationMsg;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
            }
            _this.reRenderDT();
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    EducationComponent.prototype.createEducation = function (data1) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var educationName = data1.value.EducationName;
        this._cmrcservice.post((this._globalURL.ADD_EDUCATION + educationName), "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        data1.control.reset();
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.AddEducationMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        _this.getEducation();
                    }
                    else {
                        _this._globalURL.isLoading = false;
                        _this.message = _this._common_message.EducationNotAddMsg;
                        _this.showErrorMessage = true;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this._globalURL.isLoading = false;
                    }
                }
                else {
                    _this.message = _this._common_message.EducationNotAddMsg;
                    _this.showErrorMessage = true;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    EducationComponent.prototype.delete = function (data) {
        debugger;
        this.educationModel = data;
        debugger;
    };
    EducationComponent.prototype.deleteEducation = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_EDUCATION + id;
        this._cmrcservice.post(final, null, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.DeleteEducationMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getEducation();
                }
                else {
                    _this.message = _this._common_message.ErrorDeleteEducationMsg;
                    _this.showErrorMessage = true;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    EducationComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */])
    ], EducationComponent.prototype, "dtElement", void 0);
    EducationComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/education/education.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], EducationComponent);
    return EducationComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/fd/fd.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n</div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-5\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">MANAGE FD FORM</span>\r\n                    <span *ngIf=\"lang.mr\">एफडी व्यवस्थापन फॉर्म </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\" style=\"margin-top: -14px;\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-3\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createDesignation\" style=\"float:left;margin-top:7px;\">\r\n                            <span *ngIf=\"lang.en\"> ADD NEW FD</span>\r\n                            <span *ngIf=\"lang.mr\">नविन एफ डी समाविष्ट करा </span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"col-md-5\">\r\n                        <ul class=\"nav navbar-nav item\" style=\"margin-left:5px;\">\r\n                            <li>\r\n                                <a routerLink='/cmrc/fd' (click)=\"getFD(1)\" routerLinkActive=\"active\">\r\n                                    <span *ngIf=\"lang.en\">RETURNABLE FD</span>\r\n                                    <span *ngIf=\"lang.mr\">परत करण्यायोग्य एफ डी </span>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a routerLink='/cmrc/fd' (click)=\"getFD(2)\" routerLinkActive=\"active\">\r\n                                    <span *ngIf=\"lang.en\">RETURNED FDs</span>\r\n                                    <span *ngIf=\"lang.mr\">परत केलेला एफ डी </span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <span *ngIf=\"FDId ==1\">\r\n                            <span *ngIf=\"lang.en\">ACTIVE FDs</span>\r\n                            <span *ngIf=\"lang.mr\"> सक्रिय एफ डी </span>\r\n                        </span>\r\n                        <span *ngIf=\"FDId ==2\">\r\n                            <span *ngIf=\"lang.en\">RETURNED FDs</span>\r\n                            <span *ngIf=\"lang.mr\">परत केलेला एफ डी </span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"box-body\" style=\"margin-top: -25px;\">\r\n                    <table datatable class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <!-- <th>FD ID</th> -->\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">VO NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">व्हीओ चे नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SHG NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">एस एच जी चे नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">MEMBER NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">सदस्याचे नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">INTEREST AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">व्याज रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TENURE</span>\r\n                                    <span *ngIf=\"lang.mr\">अवधी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">MATURITY DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">अखेरचा दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TOTAL RETURNABLE AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">परतफेड रक्कम </span>\r\n                                </th>\r\n                                <th *ngIf=\"FDId ==1\">\r\n\r\n                                    <span *ngIf=\"lang.en\">RETURN FD</span>\r\n                                    <span *ngIf=\"lang.mr\"> एफ डी परतफेड</span>\r\n                                </th>\r\n                                <!-- <th *ngIf=\"FDId ==2\">RETURN FD</th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getAllFD of getAllFDs\">\r\n                                <!-- <td>{{getAllFD.Id}}</td> -->\r\n                                <td>{{getAllFD.VOName | uppercase}}</td>\r\n                                <td>{{getAllFD.SHGName | uppercase}}</td>\r\n                                <td>{{getAllFD.MemberFullName | uppercase}}</td>\r\n                                <td>{{getAllFD.Amount | currency: 'INR' }}</td>\r\n                                <td>{{getAllFD.Interest}}</td>\r\n                                <td>{{getAllFD.Tenure}}</td>\r\n                                <td>{{getAllFD.MaturedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td>{{getAllFD.TotalReturnAmount | currency: 'INR'}}</td>\r\n                                <td *ngIf=\"FDId ==1\">\r\n                                    <span>\r\n                                        <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#updateFD\" (click)=\"delete(getAllFD)\">\r\n\r\n                                            <span *ngIf=\"lang.en\">RETURN FD</span>\r\n                                            <span *ngIf=\"lang.mr\">एफ डी परतफेड </span>\r\n                                        </button>\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <span *ngIf=\"lang.en\">TOTAL</span>\r\n                                    <span *ngIf=\"lang.mr\">एकुण </span>\r\n                                </td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>{{totalAmt}}</td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"createDesignation\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n\r\n                    <span *ngIf=\"lang.en\"> FD FORM</span>\r\n                    <span *ngIf=\"lang.mr\">एफ डी फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form #newFdForm=\"ngForm\" novalidate>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-7\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n                                            <span *ngIf=\"lang.en\"> SELECT VO</span>\r\n                                            <span *ngIf=\"lang.mr\">व्हीओ निवडा </span>\r\n                                            <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                        </label>\r\n                                        <select class=\"form-control\" (ngModel)=\"voId\" name=\"voId\" required #voId=\"ngModel\" (change)=\"getMembersByVO(voId.viewModel)\">\r\n                                            <option *ngFor=\"let vo of vos\" [value]=\"vo.Key\">{{vo.Value}}</option>\r\n                                        </select>\r\n                                        <div *ngIf=\"voId.invalid && voId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <div [hidden]=\"!voId.hasError('required')\">\r\n                                                <p> SELECT VO..!</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n                                            <span *ngIf=\"lang.en\"> SELECT MEMBER</span>\r\n                                            <span *ngIf=\"lang.mr\">सदस्य निवडा </span>\r\n                                            <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                        </label>\r\n                                        <select class=\"form-control\" (ngModel)=\"MemberId\" name=\"MemberId\" id=\"MemberId\" required #MemberId=\"ngModel\">\r\n                                            <option *ngFor=\"let member of members\" [value]=\"member.Key\">{{member.Value}}</option>\r\n                                        </select>\r\n                                        <div *ngIf=\"MemberId.invalid && MemberId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <div [hidden]=\"!MemberId.hasError('required')\">\r\n                                                <p> SELECT MEMBER..!</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n                                            <span *ngIf=\"lang.en\"> INTEREST RATE</span>\r\n                                            <span *ngIf=\"lang.mr\">व्याज दर </span>\r\n                                            <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                        </label>\r\n                                        <select (ngModel)=\"Interest\" class=\"form-control\" id=\"Interest\" name=\"Interest\" required #Interest=\"ngModel\">\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                            <option value=\"6\">6</option>\r\n                                            <option value=\"7\">7</option>\r\n                                            <option value=\"8\">8</option>\r\n                                            <option value=\"9\">9</option>\r\n                                            <option value=\"10\">10</option>\r\n                                            <option value=\"11\">11</option>\r\n                                            <option value=\"12\">12</option>\r\n                                            <option value=\"13\">13</option>\r\n                                            <option value=\"14\">14</option>\r\n                                            <option value=\"15\">15</option>\r\n                                            <option value=\"16\">16</option>\r\n                                            <option value=\"17\">17</option>\r\n                                            <option value=\"18\">18</option>\r\n                                            <option value=\"19\">19</option>\r\n                                            <option value=\"20\">20</option>\r\n                                        </select>\r\n                                        <div *ngIf=\"Interest.invalid && Interest.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <div [hidden]=\"!MemberId.hasError('required')\">\r\n                                                <p> ENTER INTEREST..!</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n                                            <span *ngIf=\"lang.en\">TENURE</span>\r\n                                            <span *ngIf=\"lang.mr\">अवधी </span>\r\n                                            <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                        </label>\r\n                                        <select (ngModel)=\"Tenure\" class=\"form-control\" id=\"Tenure\" name=\"Tenure\" required #Tenure=\"ngModel\">\r\n                                            <option value=\"6\">6</option>\r\n                                            <option value=\"7\">7</option>\r\n                                            <option value=\"8\">8</option>\r\n                                            <option value=\"9\">9</option>\r\n                                            <option value=\"10\">10</option>\r\n                                            <option value=\"11\">11</option>\r\n                                            <option value=\"12\">12</option>\r\n                                            <option value=\"13\">13</option>\r\n                                            <option value=\"14\">14</option>\r\n                                            <option value=\"15\">15</option>\r\n                                            <option value=\"16\">16</option>\r\n                                            <option value=\"17\">17</option>\r\n                                            <option value=\"18\">18</option>\r\n                                            <option value=\"19\">19</option>\r\n                                            <option value=\"20\">20</option>\r\n                                            <option value=\"21\">21</option>\r\n                                            <option value=\"22\">22</option>\r\n                                            <option value=\"23\">23</option>\r\n                                            <option value=\"24\">24</option>\r\n                                            <option value=\"25\">26</option>\r\n                                            <option value=\"27\">27</option>\r\n                                            <option value=\"28\">28</option>\r\n                                            <option value=\"29\">29</option>\r\n                                            <option value=\"30\">30</option>\r\n                                            <option value=\"31\">31</option>\r\n                                            <option value=\"33\">32</option>\r\n                                            <option value=\"34\">34</option>\r\n                                            <option value=\"35\">35</option>\r\n                                            <option value=\"36\">36</option>\r\n                                        </select>\r\n                                        <div *ngIf=\"Tenure.invalid && Tenure.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <div [hidden]=\"!Tenure.hasError('required')\">\r\n                                                <p> ENTER TENURE..!</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n                                            <span *ngIf=\"lang.en\">ENTER FD AMOUNT</span>\r\n                                            <span *ngIf=\"lang.mr\">एफ डी रक्कम भरा </span>\r\n                                            <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                        </label>\r\n                                        <input class=\"form-control\" type=\"number\" (ngModel)=\"Amount\" name=\"Amount\" required #Amount=\"ngModel\" (input)=\"convertToWords($event.target.value)\">\r\n                                        <div *ngIf=\"Amount.invalid && Amount.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <div [hidden]=\"!Amount.hasError('required')\">\r\n                                                <p> ENTER AMOUNT..!</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6 form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">PAYMENT MODE</span>\r\n                                        <span *ngIf=\"lang.mr\">रक्कम माध्यम </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" (ngModel)=\"PaymentMode\" name=\"PaymentMode\" required #PaymentMode=\"ngModel\">\r\n                                        <option [value]=1>\r\n                                            <span *ngIf=\"lang.en\">CASH IN HAND</span>\r\n                                            <span *ngIf=\"lang.mr\"> रोख रक्कम </span>\r\n                                        </option>\r\n                                        <option [value]=2>\r\n                                            <span *ngIf=\"lang.en\">CASH AT BANK</span>\r\n                                            <span *ngIf=\"lang.mr\"> बँकेतील रक्कम </span>\r\n                                        </option>\r\n                                    </select>\r\n                                    <div *ngIf=\"PaymentMode.invalid && PaymentMode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!PaymentMode.hasError('required')\">\r\n                                            <p> SELECT PAYMENT MODE..!</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6 form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">FD DATE - </span>\r\n                                        <span *ngIf=\"lang.mr\"> एफ डी दिनांक </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"CreatedDate\" name=\"CreatedDate\" #frDt [options]=\"options\">\r\n                                    </ng-datepicker>\r\n                                    \r\n                                    <!-- <input class=\"form-control\" type=\"date\" (ngModel)=\"CreatedDate\" name=\"CreatedDate\" required #CreatedDate=\"ngModel\"> -->\r\n                                    <!-- <div *ngIf=\"createdate.invalid && createdate.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <div [hidden]=\"!createdate.hasError('required')\">\r\n                                                <p>  ENTER AMOUNT..!</p>\r\n                                            </div>\r\n                                        </div> -->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-5\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\">\r\n                                    IN ENGLISH\r\n                                </div>\r\n                                <div class=\"card-body\">\r\n                                    <h5 class=\"card-title\">\r\n                                        <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px\">\r\n                                            <b>{{convertedWordsInEnglish}}</b>\r\n                                        </div>\r\n                                    </h5>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\">\r\n                                    मराठी मधे\r\n                                </div>\r\n                                <div class=\"card-body\">\r\n                                    <h5 class=\"card-title\">\r\n                                        <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px\">\r\n                                            <b>{{convertedWordsInMarathi}}</b>\r\n                                        </div>\r\n                                    </h5>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\">\r\n                                    हिंदी में\r\n                                </div>\r\n                                <div class=\"card-body\">\r\n                                    <h5 class=\"card-title\">\r\n                                        <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px\">\r\n                                            <b>{{convertedWordsInHindi}}</b>\r\n                                        </div>\r\n                                    </h5>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <div class=\"form-group\" style=\"float:right;margin-top:8px;\">\r\n                                        <button type=\"button\" data-dismiss=\"modal\" [disabled]=\"newFdForm.invalid\" class=\"btn btn-primary\" (click)=\"createFD(newFdForm,frDt)\">\r\n                                            SAVE\r\n                                            <!-- <span *ngIf=\"lang.mr\">जतन करा </span> -->\r\n                                        </button>\r\n                                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                            <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                            <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div *ngIf=\"fdModel != null\" id=\"updateFD\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <b>\r\n                        <span *ngIf=\"lang.en\">RETURN FD FORM </span>\r\n                        <span *ngIf=\"lang.mr\"> एफ डी परतफेड फॉर्म </span>\r\n                    </b>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <b>\r\n                    <span *ngIf=\"lang.en\">RETURN FD FOR </span>\r\n                    <span *ngIf=\"lang.mr\">एफ डी परतफेड साठी </span>- {{fdModel.MemberFullName | uppercase}}</b>\r\n                <br/>\r\n                <div style=\"font-size: 15px;\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <span *ngIf=\"lang.en\">PRINCIPAL AMOUNT</span>\r\n                            <span *ngIf=\"lang.mr\">मूळ रक्कम </span>:</div>\r\n                        <span class=\"col-md-4 badge\" style=\"font-size: 17px;\">{{fdModel.Amount}} /-</span>\r\n                    </div>\r\n                    <br/>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <span *ngIf=\"lang.en\">TOTAL RETURN AMOUNT</span>\r\n                            <span *ngIf=\"lang.mr\">\r\n                                एकुण परतफेड रक्कम </span>:</div>\r\n                        <span class=\"badge col-md-4\" style=\"font-size: 17px;\">{{fdModel.TotalReturnAmount - fdModel.Amount}} /-</span>\r\n                    </div>\r\n                    <br/>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <span *ngIf=\"lang.en\">TOTAL RETURNABLE AMOUNT</span>\r\n                            <span *ngIf=\"lang.mr\">एकुण परतफेड रक्कम </span>:</div>\r\n                        <span class=\"badge col-md-4\" style=\"font-size: 17px;\">{{fdModel.TotalReturnAmount}} /-</span>\r\n                    </div>\r\n                    <br/>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <span *ngIf=\"lang.en\"> INTEREST RATE</span>\r\n                            <span *ngIf=\"lang.mr\">व्याज दर </span>:</div>\r\n                        <span class=\"badge col-md-4\" style=\"font-size: 17px;\">{{fdModel.Interest}}</span>\r\n                    </div>\r\n                    <br/>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <span *ngIf=\"lang.en\"> FD MATURED DATE</span>\r\n                            <span *ngIf=\"lang.mr\">एफ डी अंतिम दिनांक </span>:</div>\r\n                    </div>\r\n                    <span class=\"badge col-md-4\" style=\"font-size: 17px;\">{{fdModel.MaturedDate | date: 'dd-MM-yyyy'}}</span>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n\r\n                                <span *ngIf=\"lang.en\"> PAYMENT MODE</span>\r\n                                <span *ngIf=\"lang.mr\">रक्कम माध्यम </span>\r\n                                <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                            </label>\r\n                            <select class=\"form-control\" [(ngModel)]=\"RetFDPaymentMode\" name=\"RetFDPaymentMode\">\r\n                                <option [value]=1>\r\n                                    <span *ngIf=\"lang.en\"> CASH IN HAND</span>\r\n                                    <span *ngIf=\"lang.mr\"> रोख रक्कम </span>\r\n                                </option>\r\n                                <option [value]=2>\r\n                                    <span *ngIf=\"lang.en\"> CASH AT BANK</span>\r\n                                    <span *ngIf=\"lang.mr\"> बँकेतील रक्कम </span>\r\n                                </option>\r\n                            </select>\r\n                            <div *ngIf=\"PaymentMode.invalid && PaymentMode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                <div [hidden]=\"!PaymentMode.hasError('required')\">\r\n                                    <span *ngIf=\"lang.en\"> select Payment Mode !</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृपया रक्कम माध्यम निवडा ! </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"form-group\">\r\n                        <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteFD(fdModel)\">\r\n                            <span *ngIf=\"lang.en\">RETURN FD</span>\r\n                            <span *ngIf=\"lang.mr\"> एफ डी परतफेड </span>\r\n\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                            <span *ngIf=\"lang.en\">CANCEL </span>\r\n                            <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/fd/fd.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FDComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
//Anjali...










var FDComponent = (function () {
    function FDComponent(_cmrcservice, _router, lang, _access_token, _globalURL, _globalVariable, _commonService, _common_message) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._commonService = _commonService;
        this._common_message = _common_message;
        this.totalAmt = 0;
        this.totalReturnableAmt = 0;
        // public CreatedDate: Date = new Date();
        // options: DatepickerOptions = {
        //     minYear: 2016,
        //     maxYear: (new Date().getFullYear() + 1),
        //     displayFormat: 'MMM D[,] YYYY',
        //     barTitleFormat: 'MMMM YYYY',
        //     dayNamesFormat: 'dd',
        //     firstCalendarDay: 0, // 0 - Sunday, 1 - Monday
        //     locale: frLocale,
        //     //minDate: new Date(Date.now()), // Minimal selectable date
        //     minDate: new Date("2016-03-03"),
        //     //maxDate: new Date(Date.now()),  // Maximal selectable date
        //     barTitleIfEmpty: 'Click to select a date'
        // };
        this.CreatedDate = new Date();
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__,
            //minDate: new Date(Date.now()), // Minimal selectable date
            minDate: new Date("2016-03-03"),
            // maxDate: new Date(Date.now()),  // Maximal selectable date
            barTitleIfEmpty: 'Click to select a date'
        };
        this.RetFDPaymentMode = 0;
        //_globalURL.isLoading = true;
        this.fdModel = null;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
        this.getAllFDs = null;
        //  this.FDId = 1;
    }
    FDComponent.prototype.ngOnInit = function () {
        this.getFD(1);
        this.getAllVo();
    };
    FDComponent.prototype.convertToWords = function (num) {
        this.convertedWordsInEnglish = this._commonService.convertDigitToWordsInEnglish(num);
        this.convertedWordsInHindi = this._commonService.convertDigitToWordsInHindi(num);
        this.convertedWordsInMarathi = this._commonService.convertDigitToWordsInMarathi(num);
    };
    FDComponent.prototype.getAllVo = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._cmrcservice.get(this._globalURL.GET_VO_BY_CMRC_ID, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    _this.vos = JSON.parse(res._body).Data;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            else {
                if (res.Status == true) {
                    _this.vos = res.Data;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //shg dropdown..
    FDComponent.prototype.getShgNameAndId = function (voID) {
        var _this = this;
        //  let id = data.voId;
        this._globalURL.isLoading = true;
        // let finalUrl = this._globalURL.GET_SHGNAME_ID_VOID + " " + id
        this._cmrcservice.get((this._globalURL.GET_SHGNAME_ID_VOID + "" + voID), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.shgs = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    FDComponent.prototype.getMembersByVO = function (voId) {
        var _this = this;
        this._globalURL.isSaveSuccessMessage = true;
        this._cmrcservice.get(this._globalURL.GET_MEM_BY_VOID + voId, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    _this.members = JSON.parse(res._body).Data;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            else {
                if (res.Status == true) {
                    _this.members = res.Data;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //GET ALL Fund Type 
    FDComponent.prototype.getFD = function (status) {
        var _this = this;
        this._globalURL.isLoading = true;
        this.FDId = null;
        this.FDId = status;
        this.totalAmt = 0;
        this.totalReturnableAmt = 0;
        this.getAllFDs = null;
        this._cmrcservice.get((this._globalURL.GET_FD + this.FDId), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.getAllFDs = res.Data;
                _this._globalURL.isLoading = false;
                for (var item in _this.getAllFDs) {
                    _this.totalAmt = _this.totalAmt + _this.getAllFDs[item].Amount;
                    _this.totalReturnableAmt = _this.totalReturnableAmt + _this.getAllFDs[item].TotalReturnAmount;
                }
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                ;
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    FDComponent.prototype.getVoIdAndName = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._cmrcservice.get(this._globalURL.GET_VO_CMRCID, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.Vos = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    FDComponent.prototype.createFD = function (data1, frDt) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        data1.value.CreatedDate = this._commonService.convertToDate(frDt);
        this._cmrcservice.post((this._globalURL.CREATE_FD), data1.value, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        data1.control.reset();
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.FDAddMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        _this.getFD(1);
                    }
                    else {
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.NotFDAddMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this._globalURL.isLoading = false;
                    }
                }
                else {
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.NotFDAddMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            else {
                if (res.Status == 1) {
                    data1.control.reset();
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.FDAddMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getFD(1);
                }
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    FDComponent.prototype.delete = function (fordeletedata) {
        this.fdModel = fordeletedata;
    };
    FDComponent.prototype.deleteFD = function (deletedata) {
        var _this = this;
        deletedata.Status = 2;
        this._globalURL.isLoading = true;
        deletedata.PaymentMode = this.RetFDPaymentMode;
        this._cmrcservice.post(this._globalURL.UPDATE_FD, deletedata, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    _this.message = _this._common_message.ReturnFDMsg;
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                    _this.getFD(1);
                }
                else {
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.FDNotReturnMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                    _this.getFD(1);
                }
            }
            else {
                if (res.Status == true) {
                    _this.message = _this._common_message.ReturnFDMsg;
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                    _this.getFD(1);
                }
                else {
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.FDNotReturnMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                    _this.getFD(1);
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this.getFD(1);
        });
    };
    FDComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/fd/fd.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_7__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_6__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], FDComponent);
    return FDComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/fund/fund.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n  <loading-selector>\r\n  </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n  <message-selector [message]=\"message\">\r\n  </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n  <error-message-selector [message]=\"message\">\r\n  </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n  <warning-message-selector [message]=\"message\">\r\n  </warning-message-selector>\r\n</div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\" style=\"padding:3px;\">\r\n      <div class=\"col-md-5\">\r\n        <label *ngIf=\"showType1\" class=\"heading-title\">\r\n          <span *ngIf=\"lang.en\"> FUND DETAILS FORM</span>\r\n          <span *ngIf=\"lang.mr\">फंड तपशील फॉर्म </span>\r\n        </label>\r\n        <label *ngIf=\"showType2\" class=\"heading-title\">\r\n          <span *ngIf=\"lang.en\"> APPROVED FUNDS</span>\r\n          <span *ngIf=\"lang.mr\">मंजूरनिधी </span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"box box-default\">\r\n        <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n          <div class=\"box-body\">\r\n            <ul class=\"nav navbar-nav item\">\r\n              <li>\r\n                <a routerLink='/cmrc/fund' (click)=\"getFund(1)\" routerLinkActive=\"active\">\r\n                  <span *ngIf=\"lang.en\"> NEW FUND REQUEST</span>\r\n                  <span *ngIf=\"lang.mr\">नवीननिधी साठी विनंती </span>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a routerLink='/cmrc/fund' (click)=\"getFund(2)\" routerLinkActive=\"active\">\r\n                  <span *ngIf=\"lang.en\"> APPROVED FUNDS</span>\r\n                  <span *ngIf=\"lang.mr\">मंजूरनिधी </span>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"box-body\">\r\n            <table datatable class=\"row-border hover table table-bordered common_table\" cellspacing=\"0\" width=\"100%\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">FUND ID</span>\r\n                    <span *ngIf=\"lang.mr\">फंड आय डी </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\"> VO</span>\r\n                    <span *ngIf=\"lang.mr\"> व्हीओ </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">REQUESTED AMOUNT</span>\r\n                    <span *ngIf=\"lang.mr\"> मागणी रक्कम </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">FUND REASON</span>\r\n                    <span *ngIf=\"lang.mr\">निधी कारण </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">REQUESTED DATE</span>\r\n                    <span *ngIf=\"lang.mr\"> मागणी दिनांक </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">APPROVED AMOUNT</span>\r\n                    <span *ngIf=\"lang.mr\">मंजूर रक्कम </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">APPROVED DATE</span>\r\n                    <span *ngIf=\"lang.mr\">मंजूर दिनांक </span>\r\n                  </th>\r\n                  <!-- <th>\r\n                    <span *ngIf=\"lang.en\">FUND TYPE</span>\r\n                    <span *ngIf=\"lang.mr\">फंड माध्यम </span>\r\n                  </th> -->\r\n                  <th *ngIf=\"fundTypeId ==2\">\r\n                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                  </th>\r\n                  <th *ngIf=\"fundTypeId ==2\">\r\n                    <span *ngIf=\"lang.en\">DOWNLOAD</span>\r\n                    <span *ngIf=\"lang.mr\"> डाऊनलोड </span>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let fundDetail of fundDetails\">\r\n                  <td>{{fundDetail.Id}}</td>\r\n                  <td>{{fundDetail.ToVOName}}</td>\r\n                  <td>{{fundDetail.RequestAmount | currency: 'INR'}}</td>\r\n                  <td>{{fundDetail.FundReason}}</td>\r\n                  <td>{{fundDetail.RequestDate| date: 'dd-MMM-yyyy'}}</td>\r\n                  <td>{{fundDetail.ApproveAmount | currency: 'INR'}}</td>\r\n                  <td>{{fundDetail.ApprovedDate| date: 'dd-MMM-yyyy'}}</td>\r\n                  <!-- <td>{{fundDetail.FundType}}</td> -->\r\n                  <td>\r\n                    <span *ngIf=\"fundDetail.Status == 1\">\r\n                      <button class=\"btn btn-primary\" (click)=\"UpdateLoanVIewDetails(fundDetail)\" data-toggle=\"modal\" data-target=\"#UpdateFund\">\r\n                        <span *ngIf=\"lang.en\">UPDATE</span>\r\n                        <span *ngIf=\"lang.mr\"> अपडेट करा </span>\r\n                      </button>\r\n                    </span>\r\n                    <span *ngIf=\"fundDetail.Status == 2\">\r\n                      <button type=\"button\" class=\"btn btn-primary\" (click)=\"showRepayment(fundDetail.Id)\">\r\n                        <span *ngIf=\"lang.en\"> SHOW REPAYMENT</span>\r\n                        <span *ngIf=\"lang.mr\"> परतफेड दर्शवा </span>\r\n                      </button>\r\n                      <!-- <input type=\"button\" class=\"btn btn-primary\" (click)=\"showRepayment(fundDetail.Id)\" value=\"SHOW REPAYMENT\"> -->\r\n                    </span>\r\n                  </td>\r\n                  <td *ngIf=\"fundTypeId ==2\">\r\n                    <a style=\"padding: 10px\" target=\"_blank\" href=\"{{fundDetail.BankReceiptPhotoURL}}\">\r\n                      <span *ngIf=\"lang.en\"> APPLICATION RECEIPT</span>\r\n                      <span *ngIf=\"lang.mr\">अर्ज पावती </span>\r\n                    </a>\r\n                    <p>\r\n                      <a style=\"padding: 10px\" target=\"_blank\" href=\"{{fundDetail.CheckReceiptPhotoURL}}\">\r\n                        <span *ngIf=\"lang.en\"> CHECK RECEIPT</span>\r\n                        <span *ngIf=\"lang.mr\">पावती तपासा </span>\r\n                      </a>\r\n                    </p>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>\r\n                    <b>\r\n                      <span *ngIf=\"lang.en\">Total</span>\r\n                      <span *ngIf=\"lang.mr\">एकुण </span>\r\n                    </b>\r\n                  </td>\r\n                  <td>-</td>\r\n                  <td>\r\n                    <b>{{totalRequestAmt | currency: 'INR'}}</b>\r\n                  </td>\r\n                  <td>\r\n                    -\r\n                  </td>\r\n                  <td>-</td>\r\n                  <td>\r\n                    <b>{{totalApprovedAmt | currency: 'INR'}}</b>\r\n                  </td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- data table end -->\r\n</section>\r\n<!-- Modal -->\r\n\r\n<div id=\"UpdateFund\" class=\"modal\" role=\"dialog\">\r\n  <div class=\"modal-dialog\" style=\"padding: 5px;width:705px; margin-top: 93px;\">\r\n    <!-- Modal content-->\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        <h4 class=\"modal-title\">\r\n          <span *ngIf=\"lang.en\"> FUND APPROVED FORM</span>\r\n          <span *ngIf=\"lang.mr\">मंजूर निधीचा फॉर्म </span>\r\n        </h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form #repaymentForm=\"ngForm\" class=\"input-group\" novalidate>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n\r\n                  <span *ngIf=\"lang.en\"> FUND REQUEST AMOUNT</span>\r\n                  <span *ngIf=\"lang.mr\">मागणी निधीचा फॉर्म </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <input type=\"text\" disabled [(ngModel)]=\"RequestAmount\" [value]=\"viewUpdateFundValues.RequestAmount\" class=\"form-control\"\r\n                  id=\"RequestAmount\" name=\"RequestAmount\" #RequestAmounthash=\"ngModel\">\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> FUND APPROVE AMOUNT</span>\r\n                  <span *ngIf=\"lang.mr\">फंड मंजूर रक्कम </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <input type=\"text\" [(ngModel)]=\"ApproveAmount\" class=\"form-control\" id=\"ApproveAmount\" required name=\"ApproveAmount\" #ApproveAmounthash=\"ngModel\"\r\n                  (input)=\"convertToWordsApp($event.target.value)\">\r\n                <div *ngIf=\"requestamt < ApproveAmount\" class=\"alert-danger comman-error-mesage\">\r\n                    Please enter amount less than requested amount !\r\n                  </div>\r\n                   <div *ngIf=\"ApproveAmounthash.invalid && ApproveAmounthash.touched\" class=\"alert-danger comman-error-mesage\">\r\n                              Please Entre Approve amount!\r\n                          </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  UPLOAD FUND APPLICATION\r\n                </label>\r\n                <input type=\"file\" ng-bind=\"bankFile\" placeholder=\"Upload Bank File\" accept=\".png,.jpeg,.jpg,.doc\">\r\n                <!-- <div *ngIf=\"IFSCCode.invalid && IFSCCode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                              Please Entre IFSC Code\r\n                          </div> -->\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  UPLOAD CHEQUE RECEIPT\r\n                </label>\r\n                <input type=\"file\" ng-bind=\"checkFile\" placeholder=\"Upload Check File\" accept=\".png,.jpeg,.jpg,.doc\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> INTEREST RATE</span>\r\n                  <span *ngIf=\"lang.mr\">व्याज दर </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <select (ngModel)=\"InterestRate\" class=\"form-control\" id=\"InterestRate\" name=\"InterestRate\" required #InterestRate=\"ngModel\">\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"5\">5</option>\r\n                  <option value=\"6\">6</option>\r\n                  <option value=\"7\">7</option>\r\n                  <option value=\"8\">8</option>\r\n                  <option value=\"9\">9</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"11\">11</option>\r\n                  <option value=\"12\">12</option>\r\n                  <option value=\"13\">13</option>\r\n                  <option value=\"14\">14</option>\r\n                  <option value=\"15\">15</option>\r\n                  <option value=\"16\">16</option>\r\n                  <option value=\"17\">17</option>\r\n                  <option value=\"18\">18</option>\r\n                  <option value=\"19\">19</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"21\">21</option>\r\n                  <option value=\"22\">22</option>\r\n                  <option value=\"23\">23</option>\r\n                  <option value=\"24\">24</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"26\">26</option>\r\n                  <option value=\"27\">27</option>\r\n                  <option value=\"28\">28</option>\r\n                  <option value=\"29\">29</option>\r\n                  <option value=\"30\">30</option>\r\n                </select>\r\n                <div *ngIf=\"InterestRate.invalid && InterestRate.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <span *ngIf=\"lang.en\"> Please Select Interest rate !</span>\r\n                  <span *ngIf=\"lang.mr\">कृपया व्याज दर निवडा ! </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\">FUND APPROVED DATE</span>\r\n                  <span *ngIf=\"lang.mr\">रक्कम मंजूर दिनांक </span>\r\n                  <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                </label>\r\n\r\n                  <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"ApprovedDate\" #frDt [options]=\"options\" name=\"ApprovedDate\">\r\n                  </ng-datepicker>\r\n                 <!-- <input type=\"date\" [(ngModel)=\"ApprovedDate\" class=\"form-control\" id=\"ApprovedDate\" required name=\"ApprovedDate\" #approvedate>  -->\r\n                <!-- <div *ngIf=\"frDt.invalid && frDt.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <div [hidden]=\"!frDt.hasError('required')\">\r\n                    <span *ngIf=\"lang.en\"> Paid Date amount is required !</span>\r\n                    <span *ngIf=\"lang.mr\">पेड तारीख रक्कम आवश्यक आहे </span>\r\n                  </div>\r\n                </div> -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"form-group\">\r\n              <div class=\"col-md-6\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> PAYMENT MODE</span>\r\n                  <span *ngIf=\"lang.mr\">रक्कम माध्यम </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <select class=\"form-control\" (ngModel)=\"PaymentMode\" name=\"PaymentMode\" #PaymentMode1=\"ngModel\">\r\n                  <option [value]=1>\r\n                    <span *ngIf=\"lang.en\"> CASH IN HAND</span>\r\n                    <span *ngIf=\"lang.mr\"> रोख रक्कम </span>\r\n                  </option>\r\n                  <option [value]=2>\r\n                    <span *ngIf=\"lang.en\"> CASH AT BANK</span>\r\n                    <span *ngIf=\"lang.mr\"> बँकेतील रक्कम </span>\r\n                  </option>\r\n                </select>\r\n                <div *ngIf=\"PaymentMode1.invalid && PaymentMode1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <span *ngIf=\"lang.en\"> Please select Payment Mode !</span>\r\n                  <span *ngIf=\"lang.mr\"> कृपया रक्कम माध्यम निवडा ! </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <div class=\"form-group\">\r\n              <button *ngIf=\"lang.en\" type=\"button\" [disabled]=\"repaymentForm.invalid\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"UpdateFundRequest(repaymentForm,frDt, $event.target)\">\r\n                SAVE\r\n              </button>\r\n              <button *ngIf=\"lang.mr\" type=\"button\" [disabled]=\"repaymentForm.invalid\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"UpdateFundRequest(repaymentForm,frDt, $event.target)\">\r\n                रद्द करा\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                <span *ngIf=\"lang.en\">CANCEL </span>\r\n                <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/fund/fund.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CMRCFundComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_FileService_file_upload_service__ = __webpack_require__("../../../../../src/app/services/FileService/file_upload.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_date_fns_locale_en__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var CMRCFundComponent = (function () {
    function CMRCFundComponent(_cmrcService, _globalURL, _access_token, _router, lang, _fileUploadService, _commonService, globalVariables, _common_message) {
        this._cmrcService = _cmrcService;
        this._globalURL = _globalURL;
        this._access_token = _access_token;
        this._router = _router;
        this.lang = lang;
        this._fileUploadService = _fileUploadService;
        this._commonService = _commonService;
        this.globalVariables = globalVariables;
        this._common_message = _common_message;
        this.showType2 = false;
        this.showType1 = true;
        this.RequestAmount = 0;
        this.ApproveAmount = 0;
        this.ApprovedDate = new Date;
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_10_date_fns_locale_en__,
            //minDate: new Date(Date.now()), // Minimal selectable date
            minDate: new Date("2016-03-03"),
            //maxDate: new Date(Date.now()),  // Maximal selectable date
            barTitleIfEmpty: 'Click to select a date'
        };
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
        this.fundDetails = null;
        this.totalRequestAmt = null;
        this.totalApprovedAmt = null;
        this.viewUpdateFundValues = null;
        this.getAllFundTypes = null;
        this.fundTypeId = 1;
        this.getDataBySelectedVoId = 0;
    }
    CMRCFundComponent.prototype.ngOnInit = function () {
        //if (!this.checkBySelectedVO)
        this.getFund(this.fundTypeId, 0);
        this.getFundType();
        this.getVOKVP();
    };
    // getVOKeyValuePair(){
    //     this._voservice.get(this._globalURL.this.GET_VOKVP_CMRC)
    // }
    CMRCFundComponent.prototype.getVOKVP = function () {
        var _this = this;
        this._cmrcService.get(this._globalURL.GET_VOKVP_CMRC, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    var data = JSON.parse(res._body);
                    _this.voKVPs = data.Data;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                    _this.voKVPs = res.Data;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    CMRCFundComponent.prototype.getFundType = function () {
        var _this = this;
        this._cmrcService.get(this._globalURL.GET_FUND_TYPE_KET_VALUE_PAIR, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.getAllFundTypes = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    CMRCFundComponent.prototype.getFundByVoId = function (voId, status) {
        var _this = this;
        this.fundDetails = null;
        this.fundTypeId = status;
        this._globalURL.isLoading = true;
        this.totalRequestAmt = 0;
        this.totalApprovedAmt = 0;
        this._cmrcService.get((this._globalURL.GET_FUND_DETAILS_BY_VO_ID + "?voId=" + voId + "&status=" + this.fundTypeId), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                for (var item in res.Data) {
                    _this.totalRequestAmt = _this.totalRequestAmt + res.Data[item].RequestAmount;
                    _this.totalApprovedAmt = _this.totalApprovedAmt + res.Data[item].ApproveAmount;
                }
                _this.fundDetails = res.Data;
                // this.fundgroups = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    CMRCFundComponent.prototype.getFund = function (status, voId) {
        var _this = this;
        debugger;
        if (status == 1) {
            this.showType1 = true;
            this.showType2 = false;
        }
        else if (status == 2) {
            this.showType2 = true;
            this.showType1 = false;
        }
        this.fundDetails = null;
        this.fundTypeId = status;
        this._globalURL.isLoading = true;
        this.totalRequestAmt = 0;
        this.totalApprovedAmt = 0;
        this.getDataBySelectedVoId = voId;
        //if (true) {
        this._cmrcService.get((this._globalURL.GET_FUND_DETAILS_BY_VO_ID + this.fundTypeId), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                for (var item in res.Data) {
                    _this.totalRequestAmt = _this.totalRequestAmt + res.Data[item].RequestAmount;
                    _this.totalApprovedAmt = _this.totalApprovedAmt + res.Data[item].ApproveAmount;
                }
                _this.fundDetails = res.Data;
                // this.fundgroups = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
        //}
        // else {
        //     this._cmrcService.get((this._globalURL.GET_FUND_DETAILS_BY_VO_ID + "?voId=" + voId + "&status=" + this.fundTypeId), sessionStorage.getItem("access_token"))
        //         .then((res) => {
        //             if (res.Status == true) {
        //                 for (var item in res.Data) {
        //                     this.totalRequestAmt = this.totalRequestAmt + res.Data[item].RequestAmount;
        //                     this.totalApprovedAmt = this.totalApprovedAmt + res.Data[item].ApproveAmount;
        //                 }
        //                 this.fundDetails = res.Data;
        //                 // this.fundgroups = res.Data;
        //                 this._globalURL.isLoading = false;
        //             }
        //             else {
        //                 this._globalURL.isLoading = false;
        //             }
        //         });
        // }
    };
    CMRCFundComponent.prototype.UpdateLoanVIewDetails = function (data) {
        this.convertToWordsReq(data.RequestAmount);
        this.viewUpdateFundValues = data;
        this.requestamt = this.viewUpdateFundValues.RequestAmount;
    };
    CMRCFundComponent.prototype.UpdateFundRequest = function (data1, frDt, metadata) {
        var _this = this;
        data1.value.ApprovedDate = this._commonService.convertToDate(frDt);
        var updateData = {
            'ToVOId': this.viewUpdateFundValues.ToVOId, 'ToVOName': this.viewUpdateFundValues.ToVOName,
            'RequestAmount': this.viewUpdateFundValues.RequestAmount, 'InterestRate': data1.value.InterestRate,
            'Tenure': data1.value.tenure, 'FundTypeId': data1.value.FundTypeId,
            'ApproveAmount': data1.value.ApproveAmount, 'Status': 2, 'Id': this.viewUpdateFundValues.Id,
            'PaymentMode': data1.value.PaymentMode,
            "ApprovedDate": data1.value.ApprovedDate
        };
        this._globalURL.isLoading = true;
        this._cmrcService.post(this._globalURL.UPDATE_FUND_FROM_CMRC_TO_VO, updateData, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status === 200) {
                    _this._globalURL.isLoading = false;
                    _this.getFund(1);
                    _this.showMessage = true;
                    _this.message = _this._common_message.FundApproveMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    //send Bank receipt
                    debugger;
                    var bankFile = metadata.form[2].files[0];
                    var bankFileFormData = new FormData();
                    bankFileFormData.append("file", bankFile);
                    bankFileFormData.append("RefId", _this.viewUpdateFundValues.Id);
                    _this._fileUploadService.post((_this._globalURL.ADD_PHOTO + "?folderName=BankReceipt" + "&type=" + _this._globalURL.CMRC_TO_VO_FUND_BANK_RECEIPT + "&RefId=" + _this.viewUpdateFundValues.Id), bankFileFormData, sessionStorage.getItem("access_token"))
                        .then(function (res) {
                        if (res.Status == undefined) {
                            if (res.status == 200) {
                                _this._globalURL.isLoading = false;
                                _this.showMessage = true;
                                _this.message = _this._common_message.PhotoUploadMsg;
                                setInterval(function () {
                                    _this.showMessage = false;
                                }, 5000);
                                data1.control.reset();
                            }
                            else {
                                _this.showWarningMessage = true;
                                _this.message = _this._common_message.WarningMsg;
                                setInterval(function () {
                                    _this.showWarningMessage = false;
                                }, 5000);
                                _this._globalURL.isLoading = false;
                            }
                        }
                    }).catch(function (res) {
                        _this._globalURL.isLoading = false;
                        _this.message = _this._common_message.CatchBlockMsg;
                        _this.showErrorMessage = true;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                    });
                    debugger;
                    var checkFile = metadata.form[3].files[0];
                    var checkFileFormData = new FormData();
                    checkFileFormData.append("file", checkFile);
                    checkFileFormData.append("RefId", _this.viewUpdateFundValues.Id);
                    _this._fileUploadService.post((_this._globalURL.ADD_PHOTO + "?folderName=BankReceipt" + "&type=" + _this._globalURL.CMRC_TO_VO_FUND_CHECK_RECEIPT + "&RefId=" + _this.viewUpdateFundValues.Id), checkFileFormData, sessionStorage.getItem("access_token"))
                        .then(function (res) {
                        if (res.Status == undefined) {
                            if (res.status == 200) {
                                _this._globalURL.isLoading = false;
                                _this.showMessage = true;
                                _this.message = _this._common_message.PhotoUploadMsg;
                                setInterval(function () {
                                    _this.showMessage = false;
                                }, 5000);
                                data1.control.reset();
                            }
                            else {
                                _this.showWarningMessage = true;
                                _this.message = _this._common_message.ErrorPhotoUploadMsg;
                                setInterval(function () {
                                    _this.showWarningMessage = false;
                                }, 5000);
                                _this._globalURL.isLoading = false;
                            }
                        }
                    }).catch(function (res) {
                        _this._globalURL.isLoading = false;
                        _this.message = _this._common_message.CatchBlockMsg;
                        _this.showErrorMessage = true;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                    });
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.message = _this._common_message.ErrorFundupdateMsg;
                    _this.showErrorMessage = true;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            }
            else {
                if (res.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.FundUpdateMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    data1.control.reset();
                    _this.getFund(1);
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.message = _this._common_message.ErrorFundupdateMsg;
                    _this.showErrorMessage = true;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    CMRCFundComponent.prototype.showRepayment = function (fundId) {
        debugger;
        this.globalVariables.SelectedFundId = fundId;
        this._router.navigate(['/cmrc/fundRepayment']);
    };
    CMRCFundComponent.prototype.convertToWordsReq = function (num) {
        this.convertedWordsInEnglishReq = this._commonService.convertDigitToWordsInEnglish(num);
        this.convertedWordsInHindiReq = this._commonService.convertDigitToWordsInHindi(num);
        this.convertedWordsInMarathiReq = this._commonService.convertDigitToWordsInMarathi(num);
    };
    CMRCFundComponent.prototype.convertToWordsApp = function (num) {
        this.convertedWordsInEnglishApp = this._commonService.convertDigitToWordsInEnglish(num);
        this.convertedWordsInHindiApp = this._commonService.convertDigitToWordsInHindi(num);
        this.convertedWordsInMarathiApp = this._commonService.convertDigitToWordsInMarathi(num);
    };
    CMRCFundComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/fund/fund.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_4__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_2__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_6__services_FileService_file_upload_service__["a" /* FileUploadService */],
            __WEBPACK_IMPORTED_MODULE_7__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_8__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], CMRCFundComponent);
    return CMRCFundComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/fund/fundrepayment.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div> \r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n<div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<section class=\"content-header\">\r\n    <section class=\"content-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n                <div class=\"col-md-5\">\r\n                    <label class=\"heading-title\">\r\n\r\n                        <span *ngIf=\"lang.en\">FUND REPAYMENT DETAILS FORM</span>\r\n                        <span *ngIf=\"lang.mr\">निधी परतफेड तपशील फॉर्म </span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n                    <table class=\"table table-bordered loan_table_common\">\r\n                        <thead>\r\n                            <tr class=\"show_loan_detail\">\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">FUND ID</span>\r\n                                    <span *ngIf=\"lang.mr\">फंड आय डी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">FUND APPROVED AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">फंड मंजूर रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">APPROVE DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">मंजूर दिनांक </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr class=\"show_loan_detail\">\r\n                                <td>\r\n                                    <b>{{fundDetails.Id}}</b>\r\n                                </td>\r\n                                <td>\r\n                                    <b>{{fundDetails.ApproveAmount | currency: 'INR'}}</b>\r\n                                </td>\r\n                                <td>\r\n                                    <b>{{fundDetails.ApprovedDate |date }}</b>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n\r\n                    <span *ngIf=\"lang.en\"> FUND REPAYMENT DETAILS FOR VO -</span>\r\n                    <span *ngIf=\"lang.mr\">व्हीओ चानिधी परतफेड तपशील </span>\r\n                    <b>{{fundDetails.ToVOName}}</b>\r\n                    <p>\r\n                        <button type=\"button\" class=\"btn btn-primary\" routerLink=\"/cmrc/fund\" style=\"margin-bottom:10px;\">\r\n                            <span *ngIf=\"lang.en\">BACK</span>\r\n                            <span *ngIf=\"lang.mr\">परत </span>\r\n                        </button>\r\n                    </p>\r\n                    <!-- <button type=\"button\" class=\"btn btn-primary\">नवीन बचतगट बनवा </button> -->\r\n\r\n                    <table class=\"table table-bordered\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>-</th>\r\n                                <th>-</th>\r\n                                <th colspan=\"2\" style=\"text-align: center;\">\r\n                                    <span *ngIf=\"lang.en\">EXPECTED REPAYMENT</span>\r\n                                    <span *ngIf=\"lang.mr\"> अपेक्षित परतफेड </span>\r\n                                </th>\r\n                                <th colspan=\"3\" style=\"text-align: center\">\r\n                                    <span *ngIf=\"lang.en\"> ACTUAL REPAYMENT</span>\r\n                                    <span *ngIf=\"lang.mr\"> वास्तविक परतफेड </span>\r\n                                </th>\r\n                            </tr>\r\n                            <tr class=\"pad_zero\">\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> INSTALLMENT NO</span>\r\n                                    <span *ngIf=\"lang.mr\"> हप्ता क्र </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> MONTH</span>\r\n                                    <span *ngIf=\"lang.mr\"> महिना </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> PRINCIPAL AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\"> मूळ रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> INTEREST AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\"> व्याज रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">PRINCIPAL AMOUNT PAID</span>\r\n                                    <span *ngIf=\"lang.mr\"> मूळ देय रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">INTEREST AMOUNT PAID</span>\r\n                                    <span *ngIf=\"lang.mr\">व्याज देय रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TOTAL AMOUNT PAID</span>\r\n                                    <span *ngIf=\"lang.mr\">देय एकूण रक्कम</span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let fundRepaymentDetail of fundRepaymentDetails; let rowIndex=index\">\r\n                                <td># {{rowIndex+1}}</td>\r\n                                <td>{{fundRepaymentDetail.PaidDate | date: 'dd-MMM-yyyy'}}</td>\r\n                                <td>{{fundRepaymentDetail.ExpectedPrincipleAmt | currency: 'INR'}}</td>\r\n                                <td>{{fundRepaymentDetail.ExpectedInterestAmt | currency: 'INR'}}</td>\r\n                                <td>{{fundRepaymentDetail.ActualPrincipleAmtPaid | currency: 'INR'}}</td>\r\n                                <td>{{fundRepaymentDetail.ActualInterestAmtPaid | currency: 'INR'}}</td>\r\n                                <td>{{fundRepaymentDetail.ActualInterestAmtPaid + fundRepaymentDetail.ActualPrincipleAmtPaid\r\n                                    | currency: 'INR'}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <span *ngIf=\"lang.en\">TOTAL </span>\r\n                                    <span *ngIf=\"lang.mr\"> एकूण </span>\r\n                                </td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>{{totalPrincipalAmtPaid | currency: 'INR'}}</td>\r\n\r\n                                <td>{{totalInterestAmtPaid | currency: 'INR'}}</td>\r\n                                <td>-</td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- Modal -->"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/fund/fundrepayment.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CMRCFundRepaymentComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








//import { Subject } from 'rxjs';

var CMRCFundRepaymentComponent = (function () {
    function CMRCFundRepaymentComponent(_cmrcService, _voservice, _globalURL, _access_token, _router, lang, _commonService, _globalVariable) {
        this._cmrcService = _cmrcService;
        this._voservice = _voservice;
        this._globalURL = _globalURL;
        this._access_token = _access_token;
        this._router = _router;
        this.lang = lang;
        this._commonService = _commonService;
        this._globalVariable = _globalVariable;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
        this.totalInterestAmtPaid = 0;
        this.fundDetails = null;
        this.fundRepaymentDetails = null;
        this.totalRequestAmt = null;
        this.totalApprovedAmt = null;
        this.fundTypeId = 1;
        this.RequestAmount = "";
    }
    CMRCFundRepaymentComponent.prototype.ngOnInit = function () {
        this.getFundRepaymentDetails(this._globalVariable.SelectedFundId);
    };
    CMRCFundRepaymentComponent.prototype.ngAfterViewInit = function () {
        //this.dtTrigger.next();
    };
    CMRCFundRepaymentComponent.prototype.getFundRepaymentDetails = function (id) {
        var _this = this;
        debugger;
        this.fundTypeId = id;
        this._globalURL.isLoading = true;
        this.totalRequestAmt = 0;
        this.totalApprovedAmt = 0;
        this.totalInterestAmtPaid = 0;
        this.totalPrincipalAmtPaid = 0;
        this._voservice.get(this._globalURL.GET_FUND_REPAYMENT_DETAILS_VO + id, sessionStorage.getItem("access_token"))
            .then(function (res) {
            debugger;
            if (res.Status == true) {
                _this.fundDetails = res.Data;
                _this.fundRepaymentDetails = res.Data.fundRepaymentModelList;
                for (var item in res.Data.fundRepaymentModelList) {
                    _this.totalInterestAmtPaid = _this.totalInterestAmtPaid + res.Data.fundRepaymentModelList[item].ActualInterestAmtPaid;
                    _this.totalPrincipalAmtPaid = _this.totalPrincipalAmtPaid + res.Data.fundRepaymentModelList[item].ActualPrincipleAmtPaid;
                }
                _this._globalURL.isLoading = false;
            }
            else {
                _this.ShowErrormsg = true;
                _this.message = "Error get fund details";
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                    _this.ShowErrormsg = false;
                }, 5000);
            }
        });
    };
    CMRCFundRepaymentComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/fund/fundrepayment.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")],
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_4__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_2__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_7__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_8__environments_GlobalVeriables__["a" /* GlobalVariable */]])
    ], CMRCFundRepaymentComponent);
    return CMRCFundRepaymentComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/fund_types/fund_types.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-3\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">FUND TYPE DETAIL </span>\r\n                    <span *ngIf=\"lang.mr\">फंड माध्यम तपशील </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createFundTypesForm\">\r\n                        <span *ngIf=\"lang.en\">ADD FUND TYPE </span>\r\n                        <span *ngIf=\"lang.mr\">फंड माध्यम समाविष्ट करा </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table datatable [dtTrigger]=\"dtTrigger\"  class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">FUND TYPE ID</span>\r\n                                    <span *ngIf=\"lang.mr\">फंड माध्यम आयडी</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">FUND TYPE</span>\r\n                                    <span *ngIf=\"lang.mr\">फंड माध्यम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getAllFund of getAllFundTypes\">\r\n                                <td>{{getAllFund.Id}}</td>\r\n                                <td>{{getAllFund.Name | uppercase}}</td>\r\n                                <td>{{getAllFund.CreatedBy}}</td>\r\n                                <td>{{getAllFund.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td>\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteFundTypes\" (click)=\"delete(getAllFund)\">\r\n                                        <span *ngIf=\"lang.en\">DELETE</span>\r\n                                        <span *ngIf=\"lang.mr\"> काढून टाका </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n\r\n<!-- create Modal -->\r\n<div id=\"createFundTypesForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width:300px;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title text-center\">\r\n                    <span *ngIf=\"lang.en\">FUND TYPE FORM </span>\r\n                    <span *ngIf=\"lang.mr\">फंड माध्यम फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #FundTypesForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">FUND TYPE </span>\r\n                                        <span *ngIf=\"lang.mr\">फंड माध्यम </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"Name\" class=\"form-control\" id=\"Name\" name=\"Name\" #Name=\"ngModel\" required maxlength=\"50\">\r\n                                    <div *ngIf=\"Name.invalid && Name.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!Name.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Fund type is required ! </span>\r\n                                            <span *ngIf=\"lang.mr\">फंड माध्यम आवश्यक आहे ! </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" [disabled]=\"FundTypesForm.invalid\" (click)=\"createFundTypes(FundTypesForm)\" data-dismiss=\"modal\"\r\n                                    class=\"btn btn-primary\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteFundTypes\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title text-center\">\r\n                    <span *ngIf=\"lang.en\">FUND TYPE DETAIL </span>\r\n                    <span *ngIf=\"lang.mr\">फंड माध्यम तपशील </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteFundTypes(fundTypesModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/fund_types/fund_types.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FundTypeComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var FundTypeComponent = (function () {
    function FundTypeComponent(_cmrcservice, _router, lang, _access_token, _globalURL, _globalVariable, _common_message) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_7_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    FundTypeComponent.prototype.ngOnInit = function () {
        this.getFundType();
    };
    FundTypeComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getFundType();
    };
    //GET ALL Fund Type 
    FundTypeComponent.prototype.getFundType = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_FUNDTYPE, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.getAllFundTypes = res.Data;
                _this._globalURL.isLoading = false;
                _this.reRenderDT();
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    FundTypeComponent.prototype.createFundTypes = function (Data) {
        var _this = this;
        this._globalURL.isLoading = true;
        var fundType = Data.value.Name;
        debugger;
        this._cmrcservice.post((this._globalURL.CREATE_FUNDTYPE + fundType), Data.value, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        Data.control.reset();
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.FundTypeCreateMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        _this.getFundType();
                    }
                    else {
                        _this._globalURL.isLoading = false;
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.ErrorFundTypeCreateMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                    }
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.ErrorFundTypeCreateMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            else {
                if (res.Status == 1) {
                    Data.control.reset();
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.FundTypeCreateMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getFundType();
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.ErrorFundTypeCreateMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    FundTypeComponent.prototype.delete = function (data) {
        debugger;
        this.fundTypesModel = data;
        debugger;
    };
    FundTypeComponent.prototype.deleteFundTypes = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_FUNDTYPE + id;
        this._cmrcservice.post(this._globalURL.DELETE_FUNDTYPE + id, data, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.FundTypeDeleteMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getFundType();
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.ErrorFundTypeDeleteMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            }
            else {
                if (res.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.FundTypeDeleteMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getFundType();
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.ErrorFundTypeDeleteMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    FundTypeComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_8_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_8_angular_datatables__["a" /* DataTableDirective */])
    ], FundTypeComponent.prototype, "dtElement", void 0);
    FundTypeComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/fund_types/fund_types.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")],
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], FundTypeComponent);
    return FundTypeComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/gender/gender.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n        <error-message-selector [message]=\"message\">\r\n        </error-message-selector>\r\n    </div>\r\n    <div *ngIf=\"showWarningMessage\">\r\n        <warning-message-selector [message]=\"message\">\r\n        </warning-message-selector>\r\n    </div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-3\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">GENDER DETAILS </span>\r\n                    <span *ngIf=\"lang.mr\"> लिंग तपशील </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createGender\">\r\n                        <span *ngIf=\"lang.en\">ADD NEW GENDER </span>\r\n                        <span *ngIf=\"lang.mr\"> नवीन लिंग समाविष्ट करा </span>\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"box-body\">\r\n                    <table datatable [dtTrigger]=\"dtTrigger\"  class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">GENDER ID</span>\r\n                                    <span *ngIf=\"lang.mr\"> लिंग आय डी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">GENDER NAME </span>\r\n                                    <span *ngIf=\"lang.mr\"> लिंग नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getGender of getGenders\">\r\n                                <td>{{getGender.Id}}</td>\r\n                                <td>{{getGender.Type | uppercase}}</td>\r\n                                <td>{{getGender.CreatedBy}}</td>\r\n                                <td>{{getGender.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td class=\"record-action\">\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteGender\" (click)=\"delete(getGender)\">\r\n                                        <span *ngIf=\"lang.en\">DELETE</span>\r\n                                        <span *ngIf=\"lang.mr\"> काढून टाका </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"createGender\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width:300px;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title text-center\">\r\n                    <span *ngIf=\"lang.en\">GENDER FORM </span>\r\n                    <span *ngIf=\"lang.mr\"> लिंग फार्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #GenderForm=\"ngForm\" (ngSubmit)=\"createGender(GenderForm)\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">GENDER NAME</span>\r\n                                        <span *ngIf=\"lang.mr\">लिंग नाव</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"GenderName\" class=\"form-control\" id=\"GenderName\" name=\"GenderName\" #GenderName=\"ngModel\" required\r\n                                        maxlength=\"50\">\r\n                                    <div *ngIf=\"GenderName.invalid && GenderName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!GenderName.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Type is Required ! </span>\r\n                                            <span *ngIf=\"lang.mr\">आवश्यक आहे !</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button (click)=\"createGender(GenderForm)\" [disabled]=\"GenderForm.invalid\" class=\"btn btn-primary\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">ADD</span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा</span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL</span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <span *ngIf=\"show\">\r\n                <div class=\"modal-backdrop in\"></div>\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteGender\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\"> DELETE GENDER</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteGender(genderModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/gender/gender.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GenderComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_Subject__ = __webpack_require__("../../../../rxjs/_esm5/Subject.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
//Anjali...










var GenderComponent = (function () {
    function GenderComponent(_cmrcservice, _router, lang, _access_token, _globalURL, _globalVariable, _common_message) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.style_Conf = "none";
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_8_rxjs_Subject__["a" /* Subject */]();
        this.red = "red";
        _globalURL.isLoading = true;
        this.display = 'none';
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    GenderComponent.prototype.ngOnInit = function () {
        this.getGender();
    };
    GenderComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
    };
    //GET AREA AND ...
    GenderComponent.prototype.getGender = function () {
        var _this = this;
        this.show = false;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_GENDER_DETAILS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.getGenders = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
            _this.reRenderDT();
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    GenderComponent.prototype.showModel = function () {
        this.show = true;
        //this.display = "block";
    };
    //public GenderForm: FormGroup;
    GenderComponent.prototype.createGender = function (Data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var gender = Data;
        this._cmrcservice.post((this._globalURL.CREATE_GENDER + Data.value.GenderName), Data.value.GenderName, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            Data.control.reset();
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.AddGenderMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        Data.control.reset();
                        _this.getGender();
                    }
                    else {
                        _this._globalURL.isLoading = false;
                        _this.message = _this._common_message.ErrorAddGenderMsg;
                        _this.showErrorMessage = true;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                    }
                }
                else {
                    if (res.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.AddGenderMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        Data.control.reset();
                        _this.getGender();
                    }
                    else {
                        _this._globalURL.isLoading = false;
                        _this.message = _this._common_message.ErrorAddGenderMsg;
                        _this.showErrorMessage = true;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                    }
                }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    GenderComponent.prototype.delete = function (data) {
        debugger;
        this.genderModel = data;
        debugger;
    };
    GenderComponent.prototype.deleteGender = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_GENDER + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.GenderDeleteMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        _this.getGender();
                    }
                    else {
                        _this._globalURL.isLoading = false;
                        _this.message = _this._common_message.ErrorGenderDeleteMsg;
                        _this.showErrorMessage = true;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                    }
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.message = _this._common_message.ErrorGenderDeleteMsg;
                    _this.showErrorMessage = true;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            else {
                if (res.status == 200) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.GenderDeleteMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getGender();
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.message = _this._common_message.ErrorGenderDeleteMsg;
                    _this.showErrorMessage = true;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    GenderComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */])
    ], GenderComponent.prototype, "dtElement", void 0);
    GenderComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/gender/gender.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], GenderComponent);
    return GenderComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/index.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\" style=\"\">\r\n    <header class=\"main-header\" style=\"position:fixed\">\r\n        <!-- Logo -->\r\n        <a class=\"logo\" style=\"background-color:#3c8dbc;height:52px;\">\r\n            <!-- mini logo for sidebar mini 50x50 pixels -->\r\n            <!-- <span class=\"logo-mini\">\r\n                <b>CMRC</b>\r\n            </span> -->\r\n            <!-- logo for regular state and mobile devices -->\r\n            <span class=\"logo-lg\">\r\n                <b>{{cmrcDetails.Name | uppercase}}</b>\r\n            </span>\r\n        </a>\r\n        <nav role=\"navigation\" class=\"navbar navbar-fixed-top\">\r\n            <div class=\"container-fluid\" style=\"padding-left:0px;padding-right:0px;\">\r\n                <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-1\">\r\n                            <a href=\"#\" class=\"sidebar-toggle\" data-toggle=\"push-menu\" role=\"button\">\r\n                                <span class=\"sr-only\">Toggle navigation</span>\r\n                            </a>\r\n                        </div>\r\n                        <div class=\"col-md-2\">\r\n                            <label class=\"company_title\">\r\n                                <span style=\"font-size: 14px\">\r\n                                    KARJAT, CMRC\r\n                                </span>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"col-md-3 col-md-offset-6\">\r\n                            <div class=\"navbar-custom-menu\">\r\n                                <ul class=\"nav navbar-nav\">\r\n                                    <li class=\"dropdown user\">\r\n                                        <a class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                                            <img src=\"dist/img/user2-160x160.jpg\" class=\"user-image\" alt=\"\">\r\n\r\n                                            <span class=\"hidden-xs\">\r\n                                                <a href=\"#\">\r\n                                                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f5/Reset_button.svg/737px-Reset_button.svg.png\" width=\"20px;\">\r\n                                                </a>\r\n                                            </span>\r\n                                        </a>\r\n                                        <ul class=\"dropdown-menu\" style=\"min-width: 118px;\">\r\n                                            <li>\r\n                                                <div class=\"text-center\">\r\n                                                    <div class=\"pull-right\">\r\n                                                        <a routerLink='/login'>\r\n                                                            <button class=\"sign_out\" style=\"margin:4px\" (click)=\"SignOut()\">SIGN OUT</button>\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n    </header>\r\n\r\n    <aside class=\"main-sidebar\">\r\n        <!-- sidebar: style can be found in sidebar.less -->\r\n        <section class=\"sidebar\">\r\n            <!-- Sidebar user panel -->\r\n            <div class=\"user-panel\">\r\n                <div class=\"pull-left image\">\r\n                    <img src=\"dist/img/user2-160x160.jpg\" class=\"img-circle\" alt=\"\">\r\n                </div>\r\n                <div class=\"pull-left info\">\r\n\r\n                    <!-- <a ><i class=\"fa fa-circle text-success\"></i> Online</a> -->\r\n                </div>\r\n            </div>\r\n\r\n            <form action=\"#\" method=\"get\" class=\"sidebar-form\">\r\n                <div class=\"input-group\" style=\"color:white;\">\r\n                    {{today | date :'short'}}\r\n                </div>\r\n            </form>\r\n\r\n\r\n            <!-- /.search form -->\r\n            <!-- sidebar menu: : style can be found in sidebar.less -->\r\n            <ul class=\"sidebar-menu\" data-widget=\"tree\">\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"dashboard\">\r\n                        <i class=\"fa fa-table\" aria-hidden=\"true\"></i>\r\n                        <span *ngIf=\"lang.en\">DASHBOARD</span>\r\n                        <span *ngIf=\"lang.mr\">डॅशबोर्ड </span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a data-toggle=\"collapse\" data-target=\"#secondlink\">\r\n                        <i class=\"fa fa-plug\" aria-hidden=\"true\"></i>\r\n                        <span class=\"ul-item\">MASTERS</span>\r\n                        <span class=\"pull-right-container\">\r\n                            <i class=\"fa fa-angle-down pull-right\"></i>\r\n                        </span>\r\n                    </a>\r\n                    <ul id=\"secondlink\" class=\"treeview-menu collapse\" style=\"overflow:auto;\">\r\n                        <li>\r\n                            <a routerLink=\"district\">\r\n                                <i class=\"fa fa-expand\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">DISTRICT</span>\r\n                                <span *ngIf=\"lang.mr\">जिल्हा </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink=\"taluka\">\r\n                                <i class=\"fa fa-circle-o-notch\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">TALUKA</span>\r\n                                <span *ngIf=\"lang.mr\">तालुका </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink=\"village\">\r\n                                <i class=\"fa fa-circle-o-notch\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">VILLAGE</span>\r\n                                <span *ngIf=\"lang.mr\">गाव</span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink=\"education\">\r\n                                <i class=\"fa fa-graduation-cap\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">EDUCATION</span>\r\n                                <span *ngIf=\"lang.mr\">शिक्षण </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink=\"gender\">\r\n                                <i class=\"fa fa-street-view\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">GENDER</span>\r\n                                <span *ngIf=\"lang.mr\">लिंग </span>\r\n                            </a>\r\n                        </li>\r\n                        <!-- <a routerLink=\"marital_Status\"><i class=\"fa fa-circle-o\"></i><span>MARITAL STATUS</span></a> -->\r\n                        <li>\r\n                            <a routerLink=\"occupation\">\r\n                                <i class=\"fa fa-briefcase\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">OCCUPATION</span>\r\n                                <span *ngIf=\"lang.mr\">व्यवसाय </span>\r\n\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink=\"maritalStatus\">\r\n                                <i class=\"fa fa-gratipay\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">MARITAL STATUS</span>\r\n                                <span *ngIf=\"lang.mr\">वैवाहिक स्थिती </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink=\"social_category\">\r\n                                <i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">CASTE</span>\r\n                                <span *ngIf=\"lang.mr\">प्रवर्ग  </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink=\"economic_category\">\r\n                                <i class=\"fa fa-code-fork\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">ECONOMIC CATEGORY</span>\r\n                                <span *ngIf=\"lang.mr\">आर्थिक वर्ग </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink=\"ration_card\">\r\n                                <i class=\"fa fa-id-card-o\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">RATION CARD</span>\r\n                                <span *ngIf=\"lang.mr\">रेशन कार्ड </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink=\"designation\">\r\n                                <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">DESIGNATION</span>\r\n                                <span *ngIf=\"lang.mr\">अधिकार </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink=\"scheme\">\r\n                                <i class=\"fa fa-check-square-o\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">SCHEME</span>\r\n                                <span *ngIf=\"lang.mr\">योजना </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink=\"area\">\r\n                                <i class=\"fa fa-area-chart\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">AREA</span>\r\n                                <span *ngIf=\"lang.mr\">क्षेत्र </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink=\"loan_reason\">\r\n                                <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">LOAN REASON</span>\r\n                                <span *ngIf=\"lang.mr\">कर्ज कारण </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink=\"fund_types\">\r\n                                <i class=\"fa fa-money\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">FUND TYPE</span>\r\n                                <span *ngIf=\"lang.mr\">फंड प्रकार </span>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a data-toggle=\"collapse\" data-target=\"#firstlink\">\r\n                        <i class=\"fa fa-plug\" aria-hidden=\"true\"></i>\r\n                        <span class=\"ul-item\">TRANSACTION</span>\r\n                        <span class=\"pull-right-container\">\r\n                            <i class=\"fa fa-angle-down pull-right\"></i>\r\n                        </span>\r\n                    </a>\r\n                    <!-- <a data-toggle=\"collapse\" data-target=\"#firstlink\">\r\n                        <i class=\"fa fa-retweet\" aria-hidden=\"true\"></i>\r\n                        <span class=\"ul-item\">TRANSACTION</span>\r\n                        <i class=\"fa fa-angle-down pull-right font_left\"></i>\r\n                    </a> -->\r\n                    <ul id=\"firstlink\" class=\"collapse  treeview-menu\" style=\"overflow:auto;\">\r\n                        <li class=\"\">\r\n                            <a routerLink=\"vo\">\r\n                                <i class=\"fa fa-female\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">MANAGE VO</span>\r\n                                <span *ngIf=\"lang.mr\"> व्हीओ व्यवस्थापित </span>\r\n                            </a>\r\n                        </li>\r\n                        <li class=\"\">\r\n                            <a routerLink=\"fund\">\r\n                                <i class=\"fa fa-columns\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">MANAGE FUND</span>\r\n                                <span *ngIf=\"lang.mr\">फंड व्यवस्थापित </span>\r\n                            </a>\r\n                        </li>\r\n                        <li class=\"\">\r\n                            <a routerLink=\"memShare\">\r\n                                <i class=\"fa fa-share-alt-square\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">MEMBER SHARE</span>\r\n                                <span *ngIf=\"lang.mr\">सदस्य हिस्सा </span>\r\n                            </a>\r\n                        </li>\r\n                        <li class=\"\">\r\n                            <a routerLink=\"fd\">\r\n                                <i class=\"fa fa-level-up\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">MANAGE FD</span>\r\n                                <span *ngIf=\"lang.mr\">एफडी व्यवस्थापन </span>\r\n                            </a>\r\n                        </li>\r\n                        <li class=\"\">\r\n                            <a routerLink=\"LedgerEntry\">\r\n                                <i class=\"fa fa-book\" aria-hidden=\"true\"></i>\r\n                                <span *ngIf=\"lang.en\">LEDGER ENTRY</span>\r\n                                <span *ngIf=\"lang.mr\">खाते पुस्तिका </span>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"reports\">\r\n                        <i class=\"fa fa-file-text-o\" aria-hidden=\"true\"></i>\r\n                        <span *ngIf=\"lang.en\">REPORT</span>\r\n                        <span *ngIf=\"lang.mr\">अहवाल </span>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </section>\r\n        <!-- /.sidebar -->\r\n    </aside>\r\n    <!-- Content Wrapper. Contains page content -->\r\n    <div class=\"content-wrapper\" style=\"margin-top:42px;\">\r\n        <!-- /.content -->\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n    <!-- /.content-wrapper -->\r\n\r\n    <!-- Control Sidebar -->\r\n\r\n    <!-- /.control-sidebar -->\r\n    <!-- Add the sidebar's background. This div must be placed\r\n         immediately after the control sidebar -->\r\n\r\n</div>\r\n<!--vo Chenge password-->\r\n<div id=\"changepasswordform\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <form class=\"form-horizontal\" #changePasswordForm=\"ngForm\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">CHANGE PASSWORD</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"CurrentPassword\" class=\"col-sm-6 control-label\">CURRENT PASSWORD</label>\r\n                        <div class=\"col-sm-6\">\r\n                            <input type=\"password\" class=\"form-control\" id=\"OldPassword\" name=\"OldPassword\" (ngModel)=\"OldPassword\" #OldPassword=\"ngModel\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"NewPassword\" class=\"col-sm-6 control-label\">NEW PASSWORD</label>\r\n                        <div class=\"col-sm-6\">\r\n                            <input type=\"password\" class=\"form-control\" id=\"NewPassword\" name=\"NewPassword\" (ngModel)=\"NewPassword\" #NewPassword=\"ngModel\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"inputConfirmPassword\" class=\"col-sm-6 control-label\">CONFIRM PASSWORD</label>\r\n                        <div class=\"col-sm-6\">\r\n                            <input type=\"password\" class=\"form-control\" id=\"ConfirmPassword\" name=\"ConfirmPassword\" (ngModel)=\"ConfirmPassword\" #ConfirmPassword=\"ngModel\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"changePassword(changePasswordForm.value);changePasswordForm.reset()\"\r\n                        data-dismiss=\"modal\">SAVE</button>\r\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">CLOSE</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/ledger/ledger.component.html":
/***/ (function(module, exports) {

module.exports = "<div style=\"padding-top: 250px; margin-left: 370px;\">\r\n<h1>LEDGER WILL BE HERE</h1>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/ledger/ledger.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LedgerComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var LedgerComponent = (function () {
    function LedgerComponent() {
    }
    LedgerComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/ledger/ledger.component.html"),
        })
    ], LedgerComponent);
    return LedgerComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/ledgerentries/ledgerentries.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n  </div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-5\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">LEDGER ENTRY FORM</span>\r\n                    <span *ngIf=\"lang.mr\">एफडी व्यवस्थापन फॉर्म </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Content Header (Page header) -->\r\n<div class=\"col-md-12\">\r\n    <button class=\"btn btn-primary pull-left\" data-target=\"#createSLEntryForm\" data-toggle=\"modal\" type=\"button\">\r\n        <span *ngIf=\"lang.en\">ADD NEW SL ENTRY </span>\r\n        <span *ngIf=\"lang.mr\"> नवीन एस एल एन्ट्री जोडा </span>\r\n    </button>\r\n</div>\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n                    <table datatable class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">FROM </span>\r\n                                    <span *ngIf=\"lang.mr\"> पासून </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TO </span>\r\n                                    <span *ngIf=\"lang.mr\">पर्यंत </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SUB LEDGER </span>\r\n                                    <span *ngIf=\"lang.mr\">सब लेजर </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">AMOUNT </span>\r\n                                    <span *ngIf=\"lang.mr\">रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TRANSACTION DATE </span>\r\n                                    <span *ngIf=\"lang.mr\">व्यवहार दिनांक </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let slEntriesDetail of slEntriesDetails\">\r\n                                <td>{{slEntriesDetail.FromName}}</td>\r\n                                <td>{{slEntriesDetail.ToName}}</td>\r\n                                <td>{{slEntriesDetail.SLTypeName}}</td>\r\n                                <td>{{slEntriesDetail.Amount | currency: 'INR'}}</td>\r\n                                <td>{{slEntriesDetail.TransactionDate | date}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n\r\n<div id=\"createSLEntryForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\"> NEW SL ENTRY FORM</span>\r\n                    <span *ngIf=\"lang.mr\"> नवीन सबलेजर एन्ट्री फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <!-- <p>नवीन बचतगट बनवा फॉर्म </p> -->\r\n                <div class=\"\">\r\n                    <form #slEntryForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">SELECT SL</span>\r\n                                        <span *ngIf=\"lang.mr\"> सबलेजर निवडा </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" (ngModel)=\"slId\" name=\"slId\" id=\"SHGName\" #slId=\"ngModel\" required>\r\n                                        <option [value]=\"21\">MAVIM TO CMRC CAPITAL FUND</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"slId.invalid && slId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\"> Sl type is required !</span>\r\n                                        <span *ngIf=\"lang.mr\"> सबलेजर माध्यम निवडा ! </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">ENTER AMOUNT</span>\r\n                                        <span *ngIf=\"lang.mr\"> रक्कम भरा </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"Amount\" name=\"Amount\" class=\"form-control\" #Amount=\"ngModel\" required>\r\n                                    <div *ngIf=\"Amount.invalid && Amount.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\"> Amount is required !</span>\r\n                                        <span *ngIf=\"lang.mr\"> रक्कम भरा ! </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">SELECT PAYMENT MODE\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" (ngModel)=\"pmode\" name=\"pmode\" #pmode=\"ngModel\" required>\r\n                                        <option [value]=\"1\">\r\n                                            <span *ngIf=\"lang.en\">CASH IN HAND</span>\r\n                                            <span *ngIf=\"lang.mr\"> रोख रक्कम </span>\r\n                                        </option>\r\n                                        <option [value]=\"2\">\r\n                                            <span *ngIf=\"lang.en\">CASH AT BANK</span>\r\n                                            <span *ngIf=\"lang.mr\"> बँकेतील रक्कम </span>\r\n                                        </option>\r\n                                    </select>\r\n                                    <div *ngIf=\"pmode.invalid && pmode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\"> Payment mode is required !</span>\r\n                                        <span *ngIf=\"lang.mr\"> देयक पद्धत आवश्यक आहे !! </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n\r\n                                        <span *ngIf=\"lang.en\">TRANSACTION DATE </span>\r\n                                        <span *ngIf=\"lang.mr\">व्यवहार दिनांक </span>\r\n                                    </label>\r\n                                    <input type=\"date\" (ngModel)=\"TransactionDate\" class=\"form-control\" id=\"TransactionDate\" required name=\"TransactionDate\"\r\n                                        #TransactionDate=\"ngModel\">\r\n                                        <div *ngIf=\"TransactionDate.invalid && TransactionDate.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <span *ngIf=\"lang.en\"> Transaction Date is required !</span>\r\n                                            <span *ngIf=\"lang.mr\">व्यवहार दिनांक आवश्यक आहे !! </span>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <!-- <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        IN ENGLISH\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">\r\n                                            <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 20px\">\r\n                                                <b>{{convertedWordsInEnglish}}</b>\r\n                                            </div>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        मराठी मधे\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">\r\n                                            <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 20px\">\r\n                                                <b>{{convertedWordsInMarathi}}</b>\r\n                                            </div>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        हिंदी में\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">\r\n                                            <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 20px\">\r\n                                                <b>{{convertedWordsInHindi}}</b>\r\n                                            </div>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div> -->\r\n                            <div class=\"modal-footer\">\r\n\r\n                                <button class=\" btn btn-primary\" style=\"margin-top:12px;margin-left:14px;\" (click)=\"saveSLEntry(slEntryForm.value);slEntryForm.reset()\"\r\n                                    data-dismiss=\"modal\" type=\"button\">\r\n                                    <span *ngIf=\"lang.en\">SAVE </span>\r\n                                    <span *ngIf=\"lang.mr\">जतन करा </span>\r\n                                </button>\r\n                                <button class=\"btn btn-default\" style=\"margin-top:12px;margin-left:14px;\" data-dismiss=\"modal\" type=\"button\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/ledgerentries/ledgerentries.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CMRCSLEntryComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_Subject__ = __webpack_require__("../../../../rxjs/_esm5/Subject.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









//import { CommonService } from '../../../services/common.service';
var CMRCSLEntryComponent = (function () {
    function CMRCSLEntryComponent(_CMRCService, _globalURL, lang, accesstoken, _router, _common_message) {
        this._CMRCService = _CMRCService;
        this._globalURL = _globalURL;
        this.lang = lang;
        this.accesstoken = accesstoken;
        this._router = _router;
        this._common_message = _common_message;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_6_rxjs_Subject__["a" /* Subject */]();
        this.showSuccMessage = false;
        this.showErrorMessage = false;
        if (sessionStorage.getItem("access_token") == "")
            _router.navigate(['../login']);
    }
    CMRCSLEntryComponent.prototype.ngOnInit = function () {
        //this.getSLEntriesDetails();
    };
    CMRCSLEntryComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getSLEntriesDetails();
    };
    CMRCSLEntryComponent.prototype.getSLEntriesDetails = function () {
        var _this = this;
        debugger;
        this._CMRCService.get(this._globalURL.GET_SL_ENTRIES_DETAILS + 2, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.slEntriesDetails = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
            _this.reRenderDT();
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    CMRCSLEntryComponent.prototype.saveSLEntry = function (Data) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._CMRCService.get((this._globalURL.SAVE_SL_ENTRY + "?slId=" + Data.value.slId + "&amount=" + Data.value.Amount + "&pmode=" + Data.value.pmode + "&TransactionDate=" + Data.value.TransactionDate), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this._globalURL.isLoading = false;
                _this.showMessage = true;
                _this.message = _this._common_message.SlEntryMsg;
                setInterval(function () {
                    _this.showMessage = false;
                }, 5000);
                Data.control.reset();
                _this.getSLEntriesDetails();
            }
            else {
                _this._globalURL.isLoading = false;
                _this.message = _this._common_message.ErrorSlEntryMsg;
                _this.showErrorMessage = true;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    CMRCSLEntryComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_5_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_5_angular_datatables__["a" /* DataTableDirective */])
    ], CMRCSLEntryComponent.prototype, "dtElement", void 0);
    CMRCSLEntryComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/ledgerentries/ledgerentries.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_7__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], CMRCSLEntryComponent);
    return CMRCSLEntryComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/loan_reason/loan_reason.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-5\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">LOAN REASON DETAILS </span>\r\n                    <span *ngIf=\"lang.mr\"> कर्ज  कारण तपशील </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createLoanResonForm\">\r\n                        <span *ngIf=\"lang.en\"> ADD NEW LOAN REASON</span>\r\n                        <span *ngIf=\"lang.mr\"> नवीन कर्ज कारण समाविष्ट करा </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table datatable [dtTrigger]=\"dtTrigger\"  class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">LOAN ID</span>\r\n                                    <span *ngIf=\"lang.mr\"> कर्ज आयडी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">LOAN REASON</span>\r\n                                    <span *ngIf=\"lang.mr\"> कर्ज कारण </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getLoanReson of getLoanResons\">\r\n                                <td>{{getLoanReson.Id}}</td>\r\n                                <td>{{getLoanReson.LoanReason | uppercase}}</td>\r\n                                <td>{{getLoanReson.CreatedBy}}</td>\r\n                                <td>{{getLoanReson.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td class=\"record-action\">\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteLoanReson\" (click)=\"delete(getLoanReson)\">\r\n                                        <span *ngIf=\"lang.en\">DELETE</span>\r\n                                        <span *ngIf=\"lang.mr\"> काढून टाका </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n\r\n<!-- create Modal -->\r\n<div id=\"createLoanResonForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width:300px;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">LOAN REASON FORM</span>\r\n                    <span *ngIf=\"lang.mr\"> कर्ज कारण फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #LoanReasonForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">LOAN REASON </span>\r\n                                        <span *ngIf=\"lang.mr\"> कर्ज कारण </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"LoanReason\" class=\"form-control\" name=\"LoanReason\" id=\"LoanReason\" #LoanReason=\"ngModel\" required\r\n                                        maxlength=\"50\">\r\n                                    <div *ngIf=\"LoanReason.invalid && LoanReason.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!LoanReason.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Loan Reason is required </span>\r\n                                            <span *ngIf=\"lang.mr\"> कर्ज कारण आवश्यक आहे ! </span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!LoanReason.hasError('pattern')\">Loan Reason should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" [disabled]=\"LoanReasonForm.invalid\" (click)=\"createLoanReson(LoanReasonForm.value)\" data-dismiss=\"modal\"\r\n                                    class=\"btn btn-primary\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteLoanReson\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">DELETE LOAN REASON </span>\r\n                    <span *ngIf=\"lang.mr\"> कर्ज कारण हटवा </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteLoanReson(LoanResonModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/loan_reason/loan_reason.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoanreasonComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var LoanreasonComponent = (function () {
    function LoanreasonComponent(_cmrcservice, _router, lang, _access_token, _globalURL, _globalVariable) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_8_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    LoanreasonComponent.prototype.ngOnInit = function () {
        this.getLoanReson();
    };
    LoanreasonComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getLoanReson();
    };
    //GET AREA AND ...
    LoanreasonComponent.prototype.getLoanReson = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_LOAN_REASON, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.getLoanResons = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
            _this.reRenderDT();
        });
    };
    LoanreasonComponent.prototype.createLoanReson = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var loanReason = data.LoanReason;
        // alert('designationModel');
        this._cmrcservice.post((this._globalURL.CREATE_LOAN_REASON + loanReason), data, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = "Record is Create succesfully";
                        setInterval(function () {
                            _this._globalURL.isSaveSuccessMessage = false;
                            _this.showMessage = false;
                        }, 5000);
                        _this.getLoanReson();
                        //this.reRenderDT();
                    }
                    else {
                        _this.ShowErrormsg = true;
                        _this.message = "Record is not create";
                        setInterval(function () {
                            _this._globalURL.isSaveSuccessMessage = false;
                            _this.ShowErrormsg = false;
                        }, 5000);
                    }
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not create";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            else {
                if (res.Status == 1) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = "Your Record is Create succesfully";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.showMessage = false;
                    }, 5000);
                    _this.getLoanReson();
                }
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    LoanreasonComponent.prototype.delete = function (data) {
        debugger;
        this.LoanResonModel = data;
        debugger;
    };
    LoanreasonComponent.prototype.deleteLoanReson = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_LOAN_REASON + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this.getLoanReson();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                    //this.reRenderDT();
                }
            }
            else {
                if (res.Status == true) {
                    _this.getLoanReson();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            _this._globalURL.isLoading = false;
            _this.showMessage = true;
            _this.message = "Record is Delete succesfully";
            setInterval(function () {
                _this.showMessage = false;
            }, 5000);
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    LoanreasonComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */])
    ], LoanreasonComponent.prototype, "dtElement", void 0);
    LoanreasonComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/loan_reason/loan_reason.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */]])
    ], LoanreasonComponent);
    return LoanreasonComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/maritalStatus/maritalStatus.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<!-- <div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div> -->\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-5\">\r\n                <label class=\"heading-title\">\r\n\r\n                    <span *ngIf=\"lang.en\">MARITAL STATUS DETAIL </span>\r\n                    <span *ngIf=\"lang.mr\"> वैवाहिक स्थिती तपशील</span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createMaritalStatusForm\">\r\n                        <span *ngIf=\"lang.en\">ADD MARITAL STATUS </span>\r\n                        <span *ngIf=\"lang.mr\"> वैवाहिक स्थिती समाविष्ट करा </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table datatable [dtTrigger]=\"dtTrigger\" class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">MARITAL STATUS ID </span>\r\n                                    <span *ngIf=\"lang.mr\"> वैवाहिक स्थिती आयडी</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">MARITAL STATUS NAME </span>\r\n                                    <span *ngIf=\"lang.mr\">वैवाहिक स्थिती नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let MaritalStatus of loadMaritalStatus\">\r\n                                <td>{{MaritalStatus.Id}}</td>\r\n                                <td>{{MaritalStatus.Name | uppercase}}</td>\r\n                                <td>{{MaritalStatus.CreatedBy}}</td>\r\n                                <td>{{MaritalStatus.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td class=\"record-action\">\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteMaritalStatus\" (click)=\"delete(MaritalStatus)\">\r\n                                        <span *ngIf=\"lang.en\">DELETE</span>\r\n                                        <span *ngIf=\"lang.mr\"> काढून टाका </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"createMaritalStatusForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width:320px;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title text-center\">\r\n                    <span *ngIf=\"lang.en\">MARITAL STATUS FORM</span>\r\n                    <span *ngIf=\"lang.mr\">वैवाहिक स्थिती फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #MaritalStatusForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">MARITAL STATUS NAME </span>\r\n                                        <span *ngIf=\"lang.mr\">वैवाहिक स्थिती नाव </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"Name\" class=\"form-control\" name=\"Name\" id=\"Name\" #Name=\"ngModel\" required maxlength=\"50\">\r\n                                    <div *ngIf=\"Name.invalid && Name.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!Name.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Marital Status is required ! </span>\r\n                                            <span *ngIf=\"lang.mr\">वैवाहिक स्थिती आवश्यक आहे ! </span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!Name.hasError('pattern')\">Marital Status should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" [disabled]=\"MaritalStatusForm.invalid\" (click)=\"createMaritalStatus(MaritalStatusForm.value)\" data-dismiss=\"modal\"\r\n                                    class=\"btn btn-primary\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteMaritalStatus\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">DELETE MARITAL STATUS </span>\r\n                    <span *ngIf=\"lang.mr\"> वैवाहिक स्थिती काढून टाका </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteMaritalStatus(MaritalStatusModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/maritalStatus/maritalStatus.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MaritalStatusComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var MaritalStatusComponent = (function () {
    function MaritalStatusComponent(_cmrcservice, _router, lang, _access_token, _globalURL, _globalVariable, _common_message) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_8_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    MaritalStatusComponent.prototype.ngOnInit = function () {
        this.getMaritalStatus();
    };
    MaritalStatusComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getMaritalStatus();
    };
    //GET AREA AND ...
    MaritalStatusComponent.prototype.getMaritalStatus = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_MARITALSTATUS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.loadMaritalStatus = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
                _this.ShowErrormsg = true;
                _this.message = "Record is not get";
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                    _this.ShowErrormsg = false;
                }, 5000);
            }
            _this.reRenderDT();
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.ShowErrormsg = true;
            setInterval(function () {
                _this.ShowErrormsg = false;
            }, 5000);
        });
    };
    MaritalStatusComponent.prototype.createMaritalStatus = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var schemeName = data.Name;
        this._cmrcservice.post((this._globalURL.CREATE_MARITALSTATUS + schemeName), data, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = "Record is Create succesfully";
                        setInterval(function () {
                            _this._globalURL.isSaveSuccessMessage = false;
                            _this.showMessage = false;
                        }, 5000);
                        _this.getMaritalStatus();
                    }
                    else {
                        _this.ShowErrormsg = true;
                        _this.message = "Record is not create";
                        setInterval(function () {
                            _this._globalURL.isSaveSuccessMessage = false;
                            _this.ShowErrormsg = false;
                        }, 5000);
                    }
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not create";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            else {
                if (res.Status == 1) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = "Record is Create succesfully";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.showMessage = false;
                    }, 5000);
                    _this.getMaritalStatus();
                }
            }
        })
            .catch(function (err) {
            _this.ShowErrormsg = true;
            _this.message = "Record is not created";
            setInterval(function () {
            }, 5000);
        });
    };
    MaritalStatusComponent.prototype.delete = function (data) {
        debugger;
        this.MaritalStatusModel = data;
        debugger;
    };
    MaritalStatusComponent.prototype.deleteMaritalStatus = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_MARRITALSTATUS + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this.getMaritalStatus();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            else {
                if (res.Status == true) {
                    _this.getMaritalStatus();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            _this._globalURL.isLoading = false;
            _this.showMessage = true;
            _this.message = "Record is Delete succesfully";
            setInterval(function () {
                _this.showMessage = false;
            }, 5000);
        })
            .catch(function (err) {
            _this.ShowErrormsg = true;
            _this.message = "Record is not deleted";
            setInterval(function () {
            }, 5000);
        });
    };
    MaritalStatusComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */])
    ], MaritalStatusComponent.prototype, "dtElement", void 0);
    MaritalStatusComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/maritalStatus/maritalStatus.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], MaritalStatusComponent);
    return MaritalStatusComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/memShare/memShare.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">   \r\n    <loading-selector>\r\n    </loading-selector>\r\n  </div>\r\n  <div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n  </div>\r\n  <!-- <div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div> -->\r\n  <!-- <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div> -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-6\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">MEMBER SHARE DETAILS FORM </span>\r\n                    <span *ngIf=\"lang.mr\"> सदस्य शेअर्स तपशील फॉर्म</span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"text\">\r\n                            <span *ngIf=\"lang.en\">SELECT VO </span>\r\n                            <span *ngIf=\"lang.mr\"> व्हीओ निवडा </span>\r\n                        </label>\r\n                        <select class=\"form-control\" (change)=\"getShgNameAndId(selectedVoId)\" #selectVo=\"ngModel\" [(ngModel)]=\"selectedVoId\" name=\"selectVo\"\r\n                            id=\"selectVo\">\r\n                            <option *ngFor=\"let Vo of Vos\" [value]=\"Vo.Key\">{{Vo.Value}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"text\">\r\n                            <span *ngIf=\"lang.en\">SELECT SHG </span>\r\n                            <span *ngIf=\"lang.mr\"> एसएचजि निवडा </span>\r\n                        </label>\r\n                        <select [(ngModel)]=\"selectedShgId\" name=\"selectedShgId\" class=\"form-control\" id=\"selectShg\">\r\n                            <option *ngFor=\"let shg of shgs\" [value]=\"shg.Key\">{{shg.Value}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createDistrict\">CREATE NEW DISTRICT</button>\r\n                    </div> -->\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"text\">\r\n                            <span *ngIf=\"lang.en\">LOAD MEMBER</span>\r\n                            <span *ngIf=\"lang.mr\"> सदस्य </span>\r\n                        </label>\r\n                        <button class=\"form-control\" type=\"button\" class=\"btn btn-primary\" (click)=\"getMemShareDetails()\">\r\n                            <span *ngIf=\"lang.en\">SEARCH</span>\r\n                            <span *ngIf=\"lang.mr\"> शोधा </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"box-body\">\r\n                    <table datatable class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">FULL NAME</span>\r\n                                    <span *ngIf=\"lang.mr\"> पूर्ण नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SHARE AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\"> शेयर रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CODE</span>\r\n                                    <span *ngIf=\"lang.mr\"> कोड </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let memShare of memShares\">\r\n                                <!-- <td>{{memShare.SHGId}}</td> -->\r\n                                <td>{{memShare.FirstName + \" \" + memShare.MiddleName + \" \" + memShare.LastName | uppercase}}</td>\r\n                                <td>{{memShare.ShareAmount | currency: 'INR'}}</td>\r\n                                <td>{{memShare.Code}}</td>\r\n                                <td class=\"record-action\">\r\n                                    <button title=\"View Details\" class=\"Lastbutton\" data-toggle=\"modal\" class=\"btn btn-primary\" data-target=\"#returnMemShare\"\r\n                                        (click)=\"delete(memShare)\">\r\n                                        <span *ngIf=\"lang.en\">RETURN</span>\r\n                                        <span *ngIf=\"lang.mr\"> परत </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<div id=\"returnMemShare\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">MEMBER SHARE </span>\r\n                    <span *ngIf=\"lang.mr\"> सदस्य शेअर्स </span>\r\n                </h4>\r\n            </div>\r\n            <div style=\"margin-left: 30px;font-size: 20px;\">\r\n                <label>AMOUNT: {{memberShareModel.ShareAmount}}</label>\r\n                <br/>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>ARE YOU SURE YOU WANT TO RETURN THE SHARE AMOUNT OF</p>\r\n                <p>\r\n                    <b>{{memberShareModel.FirstName + \" \" + memberShareModel.MiddleName + \" \" + memberShareModel.LastName |\r\n                        uppercase}}\r\n                    </b>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"returnMemberShare(memberShareModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/memShare/memShare.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MemShareComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
//Anjali..







var MemShareComponent = (function () {
    // public voId: any;
    function MemShareComponent(_cmrcservice, _router, lang, _access_token, _globalURL, _globalVariable, _cmrcService) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._cmrcService = _cmrcService;
        //Get member details ...
        this.shgId = this.selectedShgId;
        this.voId = this.selectedVoId;
        // this.selectedVoId = ;
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
        this.memberShareModel = null;
    }
    MemShareComponent.prototype.ngOnInit = function () {
        this.getVoIdAndName();
    };
    MemShareComponent.prototype.ngAfterViewInit = function () {
        //this.dtTrigger.next();
        this.getMemShareDetails();
    };
    MemShareComponent.prototype.getMemShareDetails = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this.memShares = null;
        this._cmrcservice.get((this._globalURL.GET_SHARE_AMOUNT + "?voId=" + this.selectedVoId + "&shgId=" + this.selectedShgId), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.memShares = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.ShowErrormsg = true;
                _this.message = "member details is not get";
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                    _this.ShowErrormsg = false;
                }, 5000);
            }
            //this.reRenderDT();
        });
    };
    //GET vo in dropdown ...
    MemShareComponent.prototype.getVoIdAndName = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_VO_CMRCID, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.Vos = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.ShowErrormsg = true;
                _this.message = "Vo is not get";
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                    _this.ShowErrormsg = false;
                }, 5000);
            }
        });
    };
    //get shg dropdown..
    MemShareComponent.prototype.getShgNameAndId = function (voID) {
        var _this = this;
        //  let id = data.voId;
        this._globalURL.isLoading = true;
        debugger;
        // let finalUrl = this._globalURL.GET_SHGNAME_ID_VOID + " " + id
        this._cmrcservice.get((this._globalURL.GET_SHGNAME_ID_VOID + "" + voID), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.shgs = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    MemShareComponent.prototype.delete = function (data) {
        debugger;
        this.memberShareModel = data;
        debugger;
    };
    MemShareComponent.prototype.returnMemberShare = function (data) {
        var _this = this;
        data.Status = 2;
        this._globalURL.isLoading = true;
        debugger;
        //let id = data.Id;
        var final = this._globalURL.RETURN_SHARE_AMOUNT + "?memberId=" + data.Id + "&shareAmount=" + data.ShareAmount + "&Status=" + data.Status;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined) {
                if (res.status == 200) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = "Record is Delete succesfully";
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getMemShareDetails();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                    _this.getMemShareDetails();
                }
            }
            else {
                if (res.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = "Record is Delete succesfully";
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getMemShareDetails();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                    _this.getMemShareDetails();
                }
            }
        })
            .catch(function (err) {
            // alert("sooory");
            setInterval(function () {
            }, 5000);
            _this.getMemShareDetails();
        });
    };
    MemShareComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/memShare/memShare.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */]])
    ], MemShareComponent);
    return MemShareComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/member/member.component.html":
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "../../../../../src/app/components/cmrc/member/member.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CMRCMemberComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var CMRCMemberComponent = (function () {
    function CMRCMemberComponent(lang) {
        this.lang = lang;
    }
    CMRCMemberComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/member/member.component.html"),
        })
        // export class CMRCMemberComponent{
        //    constructor(
        //        public l
        //    ){
        //    }
        // }
        ,
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__environments_language_config__["a" /* LangulageConf */]])
    ], CMRCMemberComponent);
    return CMRCMemberComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/minority/minority.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">   \r\n    <loading-selector>\r\n    </loading-selector>\r\n  </div>\r\n  <div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n  </div>\r\n  <!-- <div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div> -->\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-3\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">MINIORITY DETAIL </span>\r\n                    <span *ngIf=\"lang.mr\"> अल्पसंख्याक तपशील</span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- <ol class=\"breadcrumb\">\r\n        <li>\r\n            <a href=\"#\">\r\n                <i class=\"fa fa-dashboard\"></i> Home </a>\r\n        </li>\r\n        <li class=\"active\">minority Detail</li>\r\n    </ol> -->\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createMinorityForm\">ADD MINORITY</button>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table datatable [dtTrigger]=\"dtTrigger\" class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SCHEME ID </span>\r\n                                    <span *ngIf=\"lang.mr\">योजना आय डी</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SCHEME NAME </span>\r\n                                    <span *ngIf=\"lang.mr\">योजना नाव</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getMinority of getMinoritys\">\r\n                                <td>{{getMinority.Id}}</td>\r\n                                <td>{{getMinority.Name | uppercase}}</td>\r\n                                <td>{{getMinority.CreatedBy}}</td>\r\n                                <td>{{getMinority.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td class=\"record-action\">\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteMinorityForm\" (click)=\"delete(getMinority)\">DELETE</button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"createMinorityForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">MINIORITY FORM </span>\r\n                    <span *ngIf=\"lang.mr\"> अल्पसंख्यांक फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #MinorityForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">MINIORITY </span>\r\n                                        <span *ngIf=\"lang.mr\"> अल्पसंख्यांक </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"Name\" class=\"form-control\" name=\"minorityName\" id=\"minorityName\" #Name=\"ngModel\" required maxlength=\"50\"\r\n                                        pattern=\"[A-Za-z]*\">\r\n                                    <div *ngIf=\"Name.invalid && Name.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!Name.hasError('required')\"> minority Name is required !</div>\r\n                                        <div [hidden]=\"!Name.hasError('pattern')\">minority Name should be only Letters</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" [disabled]=\"MinorityForm.invalid\" (click)=\"createMinority(MinorityForm.value);MinorityForm.reset()\"\r\n                                    data-dismiss=\"modal\" class=\"btn btn-primary\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteMinorityForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">MINIORITY FORM </span>\r\n                    <span *ngIf=\"lang.mr\"> अल्पसंख्यांक फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deletegetMinoritys(MinorityModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/minority/minority.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MinorityComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var MinorityComponent = (function () {
    function MinorityComponent(_cmrcservice, _router, lang, _access_token, _globalURL, _globalVariable) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_7_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    MinorityComponent.prototype.ngOnInit = function () {
        this.getMinority();
    };
    MinorityComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getMinority();
    };
    //GET AREA AND ...
    MinorityComponent.prototype.getMinority = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_MINORITY, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.getMinoritys = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.ShowErrormsg = true;
                _this.message = "Record is not delete";
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                    _this.ShowErrormsg = false;
                }, 5000);
            }
            _this.reRenderDT();
        });
    };
    MinorityComponent.prototype.createMinority = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        //  let schemeName = data.Name;       
        this._cmrcservice.post((this._globalURL.ADD_MINORITY + data.minorityName), null, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.ShowErrormsg = true;
                        _this.message = "Record is Create succesfully";
                        setInterval(function () {
                            _this._globalURL.isSaveSuccessMessage = false;
                            _this.showMessage = false;
                        }, 5000);
                        _this.getMinority();
                    }
                    else {
                        _this.ShowErrormsg = true;
                        _this.message = "Record is not delete";
                        setInterval(function () {
                            _this._globalURL.isSaveSuccessMessage = false;
                            _this.ShowErrormsg = false;
                        }, 5000);
                    }
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            else {
                if (res.Status == 1) {
                    _this._globalURL.isLoading = false;
                    _this.ShowErrormsg = true;
                    _this.message = "Record is Create succesfully";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.showMessage = false;
                    }, 5000);
                    _this.getMinority();
                }
            }
        })
            .catch(function (err) {
            _this.ShowErrormsg = true;
            _this.message = "Record is not created";
            setInterval(function () {
            }, 5000);
        });
    };
    MinorityComponent.prototype.delete = function (data) {
        debugger;
        this.MinorityModel = data;
        debugger;
    };
    MinorityComponent.prototype.deletegetMinoritys = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_MINORITY + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this.getMinority();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            else {
                if (res.Status == true) {
                    _this.getMinority();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            _this._globalURL.isLoading = false;
            _this.showMessage = true;
            _this.message = "Record is Delete succesfully";
            setInterval(function () {
                _this.showMessage = false;
            }, 5000);
        })
            .catch(function (err) {
            _this.ShowErrormsg = true;
            _this.message = "Record is not created";
            setInterval(function () {
            }, 5000);
        });
    };
    MinorityComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_8_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_8_angular_datatables__["a" /* DataTableDirective */])
    ], MinorityComponent.prototype, "dtElement", void 0);
    MinorityComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/minority/minority.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */]])
    ], MinorityComponent);
    return MinorityComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/occupation/occupation.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">   \r\n    <loading-selector>\r\n    </loading-selector>\r\n  </div>\r\n  <div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n  </div>\r\n  <div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-3\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">OCCUPATION DETAIL </span>\r\n                    <span *ngIf=\"lang.mr\"> व्यवसाय तपशील</span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createOccupation\">\r\n                        <span *ngIf=\"lang.en\"> ADD NEW OCCUPATION </span>\r\n                        <span *ngIf=\"lang.mr\"> नवीन व्यवसाय समाविष्ट करा </span>\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"box-body\">\r\n                    <table datatable [dtTrigger]=\"dtTrigger\" class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">OCCUPATION ID </span>\r\n                                    <span *ngIf=\"lang.mr\"> व्यवसाय आय डी</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">OCCUPATION NAME </span>\r\n                                    <span *ngIf=\"lang.mr\"> व्यवसाय </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getOccupation of getOccupations\">\r\n                                <td>{{getOccupation.Id}}</td>\r\n                                <td>{{getOccupation.Occupation | uppercase}}</td>\r\n                                <td>{{getOccupation.CreatedBy}}</td>\r\n                                <td>{{getOccupation.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td class=\"record-action\">\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteOccupationForm\" (click)=\"delete(getOccupation)\">\r\n                                        <span *ngIf=\"lang.en\">DELETE</span>\r\n                                        <span *ngIf=\"lang.mr\"> काढून टाका </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"createOccupation\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width:300px;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title text-center\">\r\n                    <span *ngIf=\"lang.en\">OCCUPATION FORM </span>\r\n                    <span *ngIf=\"lang.mr\"> व्यवसाय फॉर्म</span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #OccupationForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">OCCUPATION NAME </span>\r\n                                        <span *ngIf=\"lang.mr\"> व्यवसाय नाव</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"Occupation\" class=\"form-control\" id=\"Occupation\" name=\"Occupation\" #Occupation=\"ngModel\" required\r\n                                        maxlength=\"50\">\r\n                                    <div *ngIf=\"Occupation.invalid && Occupation.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!Occupation.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Occupation is required ! </span>\r\n                                            <span *ngIf=\"lang.mr\"> व्यवसाय आवश्यक आहे !</span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!Occupation.hasError('pattern')\">Occupation Name should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" [disabled]=\"OccupationForm.invalid\" (click)=\"createOccupation(OccupationForm.value)\" data-dismiss=\"modal\"\r\n                                    class=\"btn btn-primary\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteOccupationForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">OCCUPATION </span>\r\n                    <span *ngIf=\"lang.mr\"> व्यवसाय </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteOccupation(occupationModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/occupation/occupation.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OccupationComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var OccupationComponent = (function () {
    function OccupationComponent(_cmrcservice, _router, lang, _access_token, _globalURL, _globalVariable) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_8_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    OccupationComponent.prototype.ngOnInit = function () {
        this.getOccupation();
    };
    OccupationComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getOccupation();
    };
    //GET AREA AND ...
    OccupationComponent.prototype.getOccupation = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_OCCUPATION_DETAILS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.getOccupations = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.ShowErrormsg = true;
                _this.message = "Occupation is not get";
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                    _this.ShowErrormsg = false;
                }, 5000);
            }
            _this.reRenderDT();
        });
    };
    OccupationComponent.prototype.createOccupation = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var occupation = data.Occupation;
        this._cmrcservice.post((this._globalURL.CREATE_OCCUPATION + occupation), data, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = "Record is Create succesfully";
                        setInterval(function () {
                            _this._globalURL.isSaveSuccessMessage = false;
                            _this.showMessage = false;
                        }, 5000);
                        _this.getOccupation();
                    }
                    else {
                        _this.ShowErrormsg = true;
                        _this.message = "occupation is not create";
                        setInterval(function () {
                            _this._globalURL.isSaveSuccessMessage = false;
                            _this.ShowErrormsg = false;
                        }, 5000);
                    }
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not create";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            else {
                if (res.Status == 1) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = "Record is Create succesfully";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.showMessage = false;
                    }, 5000);
                    _this.getOccupation();
                }
            }
        })
            .catch(function (err) {
            _this.ShowErrormsg = true;
            _this.message = "Record is not created";
            setInterval(function () {
            }, 5000);
        });
    };
    OccupationComponent.prototype.delete = function (data) {
        debugger;
        this.occupationModel = data;
        debugger;
    };
    OccupationComponent.prototype.deleteOccupation = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_OCCUPATION + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this.getOccupation();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            else {
                if (res.Status == true) {
                    _this.getOccupation();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            _this._globalURL.isLoading = false;
            _this.showMessage = true;
            _this.message = "Record is Delete succesfully";
            setInterval(function () {
                _this.showMessage = false;
            }, 5000);
        })
            .catch(function (err) {
            _this.ShowErrormsg = true;
            _this.message = "Record is not delete";
            setInterval(function () {
            }, 5000);
        });
    };
    OccupationComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */])
    ], OccupationComponent.prototype, "dtElement", void 0);
    OccupationComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/occupation/occupation.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */]])
    ], OccupationComponent);
    return OccupationComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/ration_card/ration_card.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-3\">\r\n                <label class=\"heading-title\">\r\n\r\n                    <span *ngIf=\"lang.en\">RATION CARD DETAIL </span>\r\n                    <span *ngIf=\"lang.mr\"> रेशन कार्ड तपशील </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createRationCardForm\">\r\n\r\n                        <span *ngIf=\"lang.en\"> ADD RATION CARD </span>\r\n                        <span *ngIf=\"lang.mr\"> नविन रेशन कार्ड समाविष्ट करा </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table datatable [dtTrigger]=\"dtTrigger\" class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">RATION CARD ID </span>\r\n                                    <span *ngIf=\"lang.mr\">रेशन आय डी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">RATION CARD NAME </span>\r\n                                    <span *ngIf=\"lang.mr\"> रेशन कार्ड नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getRationCardDetail of getRationCardDetails\">\r\n                                <td>{{getRationCardDetail.Id}}</td>\r\n                                <td>{{getRationCardDetail.Name | uppercase}}</td>\r\n                                <td>{{getRationCardDetail.CreatedBy}}</td>\r\n                                <td>{{getRationCardDetail.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td clas=\"record-action\">\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteRationCardForm\" (click)=\"delete(getRationCardDetail)\">\r\n                                        <span *ngIf=\"lang.en\">DELETE</span>\r\n                                        <span *ngIf=\"lang.mr\"> काढून टाका </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"createRationCardForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width:300px;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">OCCUPATION FORM </span>\r\n                    <span *ngIf=\"lang.mr\"> रेशन कार्ड फॉर्म</span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #RationCardForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">RATION CARD DETAIL </span>\r\n                                        <span *ngIf=\"lang.mr\"> रेशन कार्ड नाव </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"RationCardName\" class=\"form-control\" id=\"RationCardName\" name=\"RationCardName\" #RationCardName=\"ngModel\"\r\n                                        required maxlength=\"50\">\r\n                                    <div *ngIf=\"RationCardName.invalid && RationCardName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!RationCardName.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">RATION is required ! </span>\r\n                                            <span *ngIf=\"lang.mr\"> रेशन कार्ड आवश्यक आहे ! </span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!RationCardName.hasError('pattern')\">RationCard should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" [disabled]=\"RationCardForm.invalid\" (click)=\"createRationCard(RationCardForm.value)\" data-dismiss=\"modal\"\r\n                                    class=\"btn btn-primary\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteRationCardForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">RATION CARD </span>\r\n                    <span *ngIf=\"lang.mr\"> रेशन कार्ड </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteRationCard(RationCardModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/ration_card/ration_card.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RationcardComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var RationcardComponent = (function () {
    function RationcardComponent(_cmrcservice, _router, lang, _access_token, _globalURL, _globalVariable, _common_message) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_7_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    RationcardComponent.prototype.ngOnInit = function () {
        this.getRationCard();
    };
    RationcardComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getRationCard();
    };
    //GET AREA AND ...
    RationcardComponent.prototype.getRationCard = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_RETION_CARD_DETAILS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            _this.reRenderDT();
            if (res.Status == true) {
                _this.getRationCardDetails = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.ShowErrormsg = true;
                _this.message = "Record is not get";
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                    _this.ShowErrormsg = false;
                }, 5000);
            }
        }).catch(function (res) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    RationcardComponent.prototype.createRationCard = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var rationCard = data.RationCardName;
        this._cmrcservice.post((this._globalURL.CREATE_RETION_CARD + rationCard), data, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.AddRationCardMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        _this.getRationCard();
                    }
                    else {
                        _this._globalURL.isLoading = false;
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.ErrorAddRationCardMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this.getRationCard();
                    }
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.ErrorAddRationCardMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            else {
                if (res.status == 200) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.AddRationCardMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getRationCard();
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.ErrorAddRationCardMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    RationcardComponent.prototype.delete = function (data) {
        debugger;
        this.RationCardModel = data;
        debugger;
    };
    RationcardComponent.prototype.deleteRationCard = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELET_RETION_CARD + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.DeleteRationCardMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getRationCard();
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.ErrorDeleteRationCardMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this.getRationCard();
                }
            }
            else {
                if (res.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.DeleteRationCardMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getRationCard();
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.ErrorDeleteRationCardMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this.getRationCard();
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    RationcardComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_8_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_8_angular_datatables__["a" /* DataTableDirective */])
    ], RationcardComponent.prototype, "dtElement", void 0);
    RationcardComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/ration_card/ration_card.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], RationcardComponent);
    return RationcardComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/reports/memberperformance/memberperformance.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <label style=\"font-size:19px\">MEMBER LOAN PERFORMANCE DETAILS</label>\r\n        </div>\r\n    </div>\r\n</section>\r\n<section class=\"content\" style=\"padding:3px\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"well well-lg row\">\r\n                <span class=\"col-md-3\">\r\n                    <label>SELECT VO</label>\r\n                    <select #voId class=\"form-control\" (change)=\"LoanMembersLoanPerformance(voId.value, 0,0)\">\r\n                        <option></option>\r\n                        <option *ngFor=\"let Vo of VOKVP\" [value]=\"Vo.Key\">{{Vo.Value}}</option>\r\n                    </select>\r\n                </span>\r\n                <span class=\"col-md-3\">\r\n                    <label>TOTAL MEMBERS LOAN CONSUMED: {{memberLoanPerformanceData.TotalMemberLoanConsumed}}</label>\r\n                </span>\r\n                <span class=\"col-md-3\">\r\n                    <span class=\"col-md-6\">\r\n                        <label>TOTAL MEMBERS IN GRADE A : {{memberLoanPerformanceData.TotalMembersInGradeA}}</label>\r\n                    </span>\r\n                    <span class=\"col-md-6\">\r\n                        <label>TOTAL MEMBERS IN GRADE B : {{memberLoanPerformanceData.TotalMembersInGradeB}}</label>\r\n                    </span>\r\n                </span>\r\n                <span class=\"col-md-3\">\r\n                    <span class=\"col-md-6\">\r\n                        <label>TOTAL MEMBERS IN GRADE A % : {{memberLoanPerformanceData.TotalMembersInGradeAPer}}</label>\r\n                    </span>\r\n                    <span class=\"col-md-6\">\r\n                        <label>TOTAL MEMBERS IN GRADE B % : {{memberLoanPerformanceData.TotalMembersInGradeBPer}}</label>\r\n                    </span>\r\n                </span>\r\n                <span class=\"\">\r\n                    <button class=\"btn btn-primary\" (click)=\"ExportMemberPerformance()\">\r\n                        <span>\r\n                            <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                        </span>EXPORT PDF</button>\r\n                </span>\r\n            </div>\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n                    <table class=\"row-border hover\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>SHG NAME</th>\r\n                                <th>MEMBER NAME</th>\r\n                                <th>GRADE</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let loanMember of MemberLoanDetails\">\r\n                                <td>\r\n                                    {{loanMember.SHGName}}\r\n                                </td>\r\n                                <td>\r\n                                    {{loanMember.MemberName}}\r\n                                </td>\r\n                                <td>\r\n                                    {{loanMember.Grade}}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/reports/memberperformance/memberperfromance.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MemberPerformanceComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var MemberPerformanceComponent = (function () {
    function MemberPerformanceComponent(_cmrcservice, _router, _access_token, globalVariable, _globalURL, exportToPDF) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this._access_token = _access_token;
        this.globalVariable = globalVariable;
        this._globalURL = _globalURL;
        this.exportToPDF = exportToPDF;
        _globalURL.isLoading = false;
        this.memberLoanPerformanceData = null;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../../login']);
        }
    }
    MemberPerformanceComponent.prototype.ngOnInit = function () {
        this.getVoIdAndName();
    };
    MemberPerformanceComponent.prototype.getVoIdAndName = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._cmrcservice.get(this._globalURL.GET_VO_CMRCID, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.VOKVP = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    MemberPerformanceComponent.prototype.LoanMembersLoanPerformance = function (voId, fromDt, toDt) {
        var _this = this;
        this._globalURL.isLoading = true;
        fromDt = fromDt == 0 ? null : fromDt;
        toDt = toDt == 0 ? null : toDt;
        this._cmrcservice.get((this._globalURL.MEMBER_LOAN_PERFORMANCE + "?voId=" + voId + "&fromDt=" + fromDt + "&toDt=" + toDt + "&Grade=0"), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                debugger;
                _this.memberLoanPerformanceData = res.Data;
                _this.MemberLoanDetails = _this.memberLoanPerformanceData.LoanMemberData;
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            console.log(res);
            _this._globalURL.isLoading = false;
        });
    };
    MemberPerformanceComponent.prototype.ExportMemberPerformance = function () {
        this._globalURL.isLoading = true;
        var headerData = {
            "VOName": this.globalVariable.VOName,
            "Code": this.globalVariable.voBaseCode,
        };
        this.exportToPDF.ExportMemberPerformance(this.memberLoanPerformanceData, headerData);
        this._globalURL.isLoading = false;
    };
    MemberPerformanceComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/reports/memberperformance/memberperformance.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_5__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_4__services_reports_exportpdf__["a" /* ExportToPDF */]])
    ], MemberPerformanceComponent);
    return MemberPerformanceComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/reports/members_report.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n        <loading-selector>\r\n      </loading-selector>\r\n  </div>\r\n\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-3\">\r\n                <label  class=\"heading-title\">\r\n                    <span *ngIf=\"status==1\">ACTIVE MEMBERS</span>\r\n                    <span *ngIf=\"status==2\">WITHDRAWAL MEMBERS</span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-1\">\r\n                            <button routerLink=\"/cmrc/reports\" style=\"font-size: 14\" class=\"btn btn-primary\">BACK</button>\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <label>SELECT MEMBER TYPE</label>\r\n                            <select class=\"form control\" (change)=\"getAllActiveCmrcMembers(selectedMemStatus.value);\" #selectedMemStatus>\r\n                                <option [value]=\"1\">ACTIVE MEMBERS</option>\r\n                                <option [value]=\"2\">WITHDRAWL MEMBERS</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col-md-2 col-md-offset-6 \">\r\n                            <button class=\"btn btn-primary\" style=\"float:right;\" (click)=\"R16_MemberProfileAtCmrcLevel()\">\r\n                                <span>\r\n                                    <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                                </span>\r\n                                PDF\r\n                            </button>\r\n                            <!-- <button class=\"btn btn-primary\" (click)=\"ActivrOrWithdrolMemExcel()\">EXCEL</button>                      -->\r\n                        </div>\r\n                    </div>\r\n                    <table datatable class=\"display nowrap\" cellspacing=\"0\" width=\"100%\" style=\"margin-top:10px\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th hidden></th>\r\n                                <th>SHG NAME</th>\r\n                                <th>MEMBER CODE</th>\r\n                                <th>FULL NAME</th>\r\n                                <th>DESIGNATIONNAME</th>\r\n                                <th>CONTACT NUMBER</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>SHG JOINING DATE</th>\r\n                                <!-- <th>ACTION</th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let allActiveCmrcMember of allActiveCmrcMembers\">\r\n                                <td hidden>{{allActiveCmrcMember.Id}}</td>\r\n                                <td>{{allActiveCmrcMember.SHGName | uppercase}}</td>\r\n                                <td>{{allActiveCmrcMember.Code}}</td>\r\n                                <td>{{allActiveCmrcMember.FirstName | uppercase}} {{allActiveCmrcMember.MiddleName | uppercase}}\r\n                                    {{allActiveCmrcMember.LastName | uppercase}}</td>\r\n                                <td>{{allActiveCmrcMember.DesignationName | uppercase}}</td>\r\n                                <td>{{allActiveCmrcMember.MobileNumber}}</td>\r\n                                <td>{{allActiveCmrcMember.Caste}}</td>\r\n                                <td>{{allActiveCmrcMember.DateOfJoin | date: 'dd-MM-yyyy' }}</td>\r\n                                <!-- <td>\r\n                                        <button title=\"View Details\" class=\"Lastbutton\" data-toggle=\"modal\" data-target=\"#viewActiveMemberDetailForm\" (click)=\"viewSHGDetail(allActiveCmrcMember)\">\r\n                                            <span class=\"material-icons\">visibility</span>\r\n                                        </button>\r\n                                    </td> -->\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/reports/members_report.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ActiveAndWithdrawlMembersComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_reports_exportexcel__ = __webpack_require__("../../../../../src/app/services/reports/exportexcel.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







//import { AllCmrcActiveMemberModel } from './all_active_members.model.component';
var ActiveAndWithdrawlMembersComponent = (function () {
    function ActiveAndWithdrawlMembersComponent(_cmrcservice, _router, _access_token, _globalURL, exportToExcel, exportToPDF) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this.exportToExcel = exportToExcel;
        this.exportToPDF = exportToPDF;
        this.viewData = null;
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
        //this.showActiveMembers = true;
        // this.showWithdrawlMembers = false;
    }
    ActiveAndWithdrawlMembersComponent.prototype.ngOnInit = function () {
        this.status = 1;
        this.getAllActiveCmrcMembers(this.status);
    };
    //GET ALL CMRC MEMBERS....//
    ActiveAndWithdrawlMembersComponent.prototype.getAllActiveCmrcMembers = function (status) {
        var _this = this;
        debugger;
        this.status = status;
        //  this.showActiveMembers = true;        
        this._globalURL.isLoading = true;
        this.allActiveCmrcMembers = null;
        this._cmrcservice.get(this._globalURL.GET_ALL_MEMBERS_BY_CMRCID + status, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.allActiveCmrcMembers = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    ActiveAndWithdrawlMembersComponent.prototype.viewSHGDetail = function (data) {
        debugger;
        this.viewData = data;
    };
    ActiveAndWithdrawlMembersComponent.prototype.R16_MemberProfileAtCmrcLevel = function () {
        this._globalURL.isLoading = true;
        this.exportToPDF.R16_MemberProfileAtCmrcLevel(this.allActiveCmrcMembers, this.status == 1 ? "ACTIVE" : "WITHDRAWAL");
        this._globalURL.isLoading = false;
    };
    ActiveAndWithdrawlMembersComponent.prototype.ActivrOrWithdrolMemExcel = function () {
        debugger;
        this._globalURL.isLoading = true;
        this.exportToExcel.ActivrOrWithdrolMemExcel(this.allActiveCmrcMembers, this.status == 1 ? "ACTIVE" : "WITHDRAWAL");
        this._globalURL.isLoading = false;
    };
    ActiveAndWithdrawlMembersComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/reports/members_report.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_6__services_reports_exportexcel__["a" /* ExportToExcel */],
            __WEBPACK_IMPORTED_MODULE_5__services_reports_exportpdf__["a" /* ExportToPDF */]])
    ], ActiveAndWithdrawlMembersComponent);
    return ActiveAndWithdrawlMembersComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/reports/reports.component.html":
/***/ (function(module, exports) {

module.exports = "<section class=\"content\">\r\n    <div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n        <loading-selector>\r\n        </loading-selector>\r\n    </div>\r\n\r\n    <div class=\"col-md-12 box-body vo-detail\" style=\"margin-top:15px;\">\r\n        <div class=\"container\">\r\n            <h3 style=\"margin-top:0px\"> MEMBER REPORT</h3>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div class=\"cmrc_report report_tab\" routerLink='../reports/members-report'>\r\n                <h3>ACTIVE/ WITHDRAWAL MEMBER REPORT</h3>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-8\">\r\n            <div class=\"\">\r\n                <!-- <h3>MORE MEMBER REPORTS WILL BE HERE...</h3> -->\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <!-- <div class=\"col-md-12 box-body box_section\" style=\"margin-top:15px;\">\r\n        <div class=\"col-md-4\">\r\n            <div class=\"cmrc_report report_tab\" routerLink='../reports/members-by-vo'>\r\n                <h3>SHG REPORT</h3>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div class=\"cmrc_report report_tab\" data-toggle=\"modal\" data-target=\"#SelectIndividualMembersForm\" (click)=\"getAllMEmbersByVo()\">\r\n                <h3>SHOW INDIVIDUAL MEMBER DETAILS</h3>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div class=\"cmrc_report report_tab\" routerLink='../reports/reports-members-count-summary'>\r\n                <h3>SHOW ALL MEMBERS COUNT SUMMARY</h3>\r\n            </div>\r\n        </div>\r\n\r\n    </div> -->\r\n\r\n    <div class=\"col-md-12 box-body vo-detail\" style=\"margin-top:15px;\">\r\n        <div class=\"container\">\r\n            <h3 style=\"margin-top:0px;\">SHG REPORT</h3>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div class=\"cmrc_report report_tab\" routerLink='../reports/shg-by-vo'>\r\n                <h3>AGE WISE GROUP DETAILS</h3>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div class=\"cmrc_report report_tab\" routerLink='../reports/scheme-wise-shg'>\r\n                <h3>SCHEME WISE SHG DETAILS</h3>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div class=\"cmrc_report report_tab\">\r\n                <button (click)=\"R154_SHGInVillagePDF()\" class=\"village-btn\">\r\n                    VILLAGE PDF</button>\r\n                <!-- <button (click)=\"VillageWiseShgExcel()\" class=\"village-btn\" >VILLAGE EXCEL</button>    -->\r\n            </div>\r\n        </div>\r\n        <!-- <div class=\"col-md-4\">\r\n            <div class=\"cmrc_report report_tab\" >\r\n                         \r\n            </div>\r\n        </div> -->\r\n        <!-- <div class=\"col-md-4\">\r\n            <div class=\"cmrc_report report_tab\" routerLink='../reports/reports-members-count-summary'>\r\n                <h3>DEMO</h3>\r\n            </div>\r\n        </div> -->\r\n        <div class=\"col-md-4 \">\r\n            <div class=\"cmrc_report report_tab\" routerLink='../reports/shg-report'>\r\n                <h3>SHG REPORT</h3>\r\n            </div>\r\n        </div>\r\n        <!-- <div class=\"col-md-4\" style=\"margin-top:10px;\">\r\n            <button (click)=\"R154_SHGInVillagePDF()\">\r\n\r\n                <div class=\"cmrc_report report_tab\">\r\n                    <h3>NO.OF VILLAGE IN SHG</h3>\r\n                </div>\r\n\r\n            </button>\r\n        </div> -->\r\n    </div>\r\n\r\n    <div class=\"col-md-12 box-body vo-detail\" style=\"margin-top:15px;\">\r\n        <div class=\"container\">\r\n            <h3 style=\"margin-top:0px\"> LOAN REPORT</h3>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div class=\"cmrc_report report_tab\" routerLink='../reports/member-performance'>\r\n                <h3>MEMBER LOAN PERFORMANCE REPORT</h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-8\">\r\n            <div class=\"\">\r\n                <!-- <h3>MORE LOAN REPORTS WILL BE HERE...</h3> -->\r\n            </div>\r\n        </div>\r\n\r\n        <!-- <div class=\"col-md-4\">\r\n            <div class=\"cmrc_report\" routerLink='../reports/all-withdrawl-members'>\r\n                <h3>SHOW ALL WITHDRAWL MEMBERS</h3>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div class=\"cmrc_report report_tab\" data-toggle=\"modal\" data-target=\"#SelectShgForm\" (click)=\"getAllMEmbersByShg()\">\r\n                \r\n                <h3>SHOW ALL MEMBERS BY SHG</h3>\r\n            </div>\r\n        </div> -->\r\n    </div>\r\n\r\n</section>\r\n<!-- SELECT SHG MODAL -->\r\n<div id=\"SelectShgForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-sm\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">SHG FORM</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #shgForm=\"ngForm\" class=\"input-group\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">SELECT SHG\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" id=\"selectshgidName\" name=\"selectshgidName\" (change)=\"selectedSHG(selectedShgId)\" [(ngModel)]=\"selectedShgId\">\r\n                                        <option *ngFor=\"let getShgNameAndId of _getShgNameAndId\" [value]=\"getShgNameAndId.Key\">{{getShgNameAndId.Value}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" routerLink='../reports/all-members-By-Shg'>SELECT</button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">CANCEL</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- SELECT SHG BY VO MADEL -->\r\n<div id=\"selectShgByVo\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-sm\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">AGE WISE GROUP DETAILS</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #voForm1=\"ngForm\" class=\"input-group\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">SELECT VO\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" id=\"selectedId1\" name=\"selectedId1\" (ngModel)=\"selectedId1\" (change)=\"ForVoId(selectedId1.viewModel)\"\r\n                                        #selectedId1=\"ngModel\">\r\n                                        <option *ngFor=\"let getVoNameAndId of _getVoNameAndId\" [value]=\"getVoNameAndId.Key\">{{getVoNameAndId.Value}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" routerLink='../reports/SHG_By_Vo'>SELECT</button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">CANCEL</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- SCHEME WISE GROUP DETAILS -->\r\n<div id=\"selectScheme\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-sm\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">SCHEME WISE GROUP DETAILS</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #voForm1=\"ngForm\" class=\"input-group\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">SELECT SCHEME\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" (ngModel)=\"SchemeId\" name=\"SchemeId\" required #SchemeId=\"ngModel\">\r\n\r\n                                        <option *ngFor=\"let scheme of schemes\" [value]=\"scheme.Key\">{{scheme.Value}}</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"SchemeId.invalid && SchemeId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        Please Select Scheme !\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\">SELECT</button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">CANCEL</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<!-- SELECT INDIVIDUAL MODAL -->\r\n<div id=\"SelectIndividualMembersForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-sm\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">INDIVIDUAL MEMBER FORM</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #voForm=\"ngForm\" class=\"input-group\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">SELECT VO\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" id=\"selectVo\" name=\"selectVo\" (ngModel)=\"selectedId\" #selectedId=\"ngModel\">\r\n                                        <option *ngFor=\"let getVoNameAndId of _getVoNameAndId\" [value]=\"getVoNameAndId.Key\">{{getVoNameAndId.Value}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">SELECT SHG\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" id=\"selectShg\" name=\"selectShg\" (change)=\"getAllShgByVo()\" (ngModel)=\"selectShg\" #selectShg=\"ngModel\">\r\n                                        <option *ngFor=\"let getAllIndividualShgByVoId of getALLShgNameAndId\" [value]=\"getAllIndividualShgByVoId.Key\">{{getAllIndividualShgByVoId.Value}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" routerLink='../reports/reports-individual-member-detail'>SELECT</button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">CANCEL</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/reports/reports.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CmrcReportComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_reports_exportexcel__ = __webpack_require__("../../../../../src/app/services/reports/exportexcel.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var CmrcReportComponent = (function () {
    function CmrcReportComponent(_cmrcservice, _router, _access_token, _globalVariable, exportToExcel, _globalURL, exportToPDF) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this._access_token = _access_token;
        this._globalVariable = _globalVariable;
        this.exportToExcel = exportToExcel;
        this._globalURL = _globalURL;
        this.exportToPDF = exportToPDF;
        _globalURL.isLoading = true;
        this.selectedVOId = null;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    CmrcReportComponent.prototype.ngOnInit = function () {
        this.getAllShgNameAndVoid();
        this.getSchemeKVP();
        this.SHGInVillagePDF();
    };
    //shg form
    CmrcReportComponent.prototype.getAllMEmbersByShg = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_SHG_NAME_AND_ID, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this._getShgNameAndId = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    CmrcReportComponent.prototype.getSchemeKVP = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._cmrcservice.get(this._globalURL.GET_SCHEME_KVP, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.schemes = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
        });
    };
    CmrcReportComponent.prototype.ForVoId = function (id) {
        debugger;
        // alert("hello");
        this._globalVariable.VoIdForAgeWiseGroupdetails = id;
        //this._router.navigate(['../cmrc/reports/SHG_By_Vo']);    
    };
    CmrcReportComponent.prototype.selectedSHG = function (selectedShgId) {
        this._globalURL.setSelectedSHG = selectedShgId;
    };
    //indevisual shg form
    //public selectedVOId : any;
    CmrcReportComponent.prototype.getAllShgNameAndVoid = function () {
        //debugger;
        var _this = this;
        //this._globalURL.GET_SHG_NAME_AND_ID_VOID = this._globalURL.GET_SHG_NAME_AND_ID_VOID + "4";
        this._cmrcservice.get(this._globalURL.GET_VO_BY_CMRC_ID, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.getALLVoNameAndId = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    CmrcReportComponent.prototype.getAllShgByVo = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._cmrcservice.get((this._globalURL.GET_SHG_NAME_AND_ID_VOID + "" + this.selectedVOId), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.getALLShgNameAndId = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    CmrcReportComponent.prototype.SHGInVillagePDF = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._cmrcservice.get(this._globalURL.GET_SHG_COUNT_BY_VILLAGE_ID + 0, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.shginvillage = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    CmrcReportComponent.prototype.R154_SHGInVillagePDF = function () {
        this._globalURL.isLoading = true;
        this.exportToPDF.R4SHGInVillageExporttoPdf(this.shginvillage, this._globalVariable.cmrcBaseCode);
        this._globalURL.isLoading = false;
    };
    CmrcReportComponent.prototype.VillageWiseShgExcel = function () {
        debugger;
        this._globalURL.isLoading = true;
        this.exportToExcel.VillageWiseShgExcel(this.shginvillage);
        this._globalURL.isLoading = false;
    };
    CmrcReportComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/reports/reports.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_7__services_reports_exportexcel__["a" /* ExportToExcel */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_6__services_reports_exportpdf__["a" /* ExportToPDF */]])
    ], CmrcReportComponent);
    return CmrcReportComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/reports/scheme_wise_shg_component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-3\">\r\n                <label  class=\"heading-title\">\r\n                    SCHEME WISE SHG DETAILS\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n                    <div>\r\n                        <button class=\"btn btn-primary\" routerLink=\"/cmrc/reports\" style=\"font-size: 14\">\r\n                            BACK </button>\r\n                        <button class=\"btn btn-primary\" style=\"float:right;\" (click)=\"R8_AgeWiseSchemeDetailPDF()\">\r\n                            <span>\r\n                                <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                            </span>PDF</button>\r\n                    </div>\r\n                    <!-- <button class=\"btn btn-primary\" (click)=\"schemeWiseShgExcel()\">EXCEL</button> -->\r\n                    <div class=\"form-group\">\r\n                        <label for=\"text\">SELECT SCHEME\r\n                            <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                        </label>\r\n                        <select class=\"form-control\" (ngModel)=\"SchemeId\" name=\"SchemeId\" (change)=\"viewSHGDetail(SchemeId.viewModel)\" required #SchemeId=\"ngModel\">\r\n                            <option *ngFor=\"let scheme of schemes\" [value]=\"scheme.Key\">{{scheme.Value}}</option>\r\n                        </select>\r\n                        <div *ngIf=\"SchemeId.invalid && SchemeId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                            Please Select Scheme !\r\n                        </div>\r\n                        <button class=\"btn btn-primary\" (click)=\"viewSHGDetail(0)\" style=\"margin-top:10px;\">CLEAR AND SHOW ALL</button>\r\n                    </div>\r\n\r\n                    <table datatable class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th hidden></th>\r\n                                <th>SCHEME CODE</th>\r\n                                <th>SCHEME NAME</th>\r\n                                <th>SHG NAME</th>\r\n                                <th>START DATE</th>\r\n                                <!-- <th>CONTACT NUMBER</th>\r\n                                                    <th>CATEGORY</th>\r\n                                                    <th>SHG DATE OF JOINING</th> -->\r\n                                <!-- <th>ACTION</th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let item of shgDetails\">\r\n                                <td hidden>{{item.Id}}</td>\r\n                                <td>{{item.SchemeId}}</td>\r\n                                <td>{{item.SchemeName}}</td>\r\n                                <td>{{item.Name}}</td>\r\n                                <td>{{item.SchemeDate}}</td>\r\n                                <!-- <td>{{AllCmrcVoMember.MobileNumber}}</td>\r\n                                                    <td>{{AllCmrcVoMember.Caste}}</td>\r\n                                                    <td>{{AllCmrcVoMember.DateOfJoin}}</td> -->\r\n                                <!-- <td>\r\n                                        <button title=\"View Details\" class=\"Lastbutton\" data-toggle=\"modal\">\r\n                                            <span class=\"material-icons\">visibility</span>\r\n                                        </button> \r\n                                    </td>-->\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/reports/scheme_wise_shg_component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return scheme_wise_shg_Component; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_reports_exportexcel__ = __webpack_require__("../../../../../src/app/services/reports/exportexcel.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var scheme_wise_shg_Component = (function () {
    function scheme_wise_shg_Component(_cmrcservice, _router, _access_token, _common_message, exportToExcel, _globalVariable, _globalURL, exportToPDF) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this._access_token = _access_token;
        this._common_message = _common_message;
        this.exportToExcel = exportToExcel;
        this._globalVariable = _globalVariable;
        this._globalURL = _globalURL;
        this.exportToPDF = exportToPDF;
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    scheme_wise_shg_Component.prototype.ngOnInit = function () {
        this.getSchemeKVP();
        this.viewSHGDetail(0);
    };
    //Get Scheme value pair
    scheme_wise_shg_Component.prototype.getSchemeKVP = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._cmrcservice.get(this._globalURL.GET_SCHEME_KVP, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.schemes = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
        });
    };
    scheme_wise_shg_Component.prototype.viewSHGDetail = function (id) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._cmrcservice.get(this._globalURL.GET_SHG_BY_SCHEME + id, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.shgDetails = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
                _this.message = _this._common_message.WarningMsg;
                _this.showErrorMessage = true;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    scheme_wise_shg_Component.prototype.R8_AgeWiseSchemeDetailPDF = function () {
        this._globalURL.isLoading = true;
        this.exportToPDF.R8_AgeWiseSchemeDetails(this.shgDetails);
        this._globalURL.isLoading = false;
    };
    scheme_wise_shg_Component.prototype.schemeWiseShgExcel = function () {
        this.exportToExcel.schemeWiseShgExcel(this.shgDetails);
    };
    scheme_wise_shg_Component = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/reports/scheme_wise_shg_component.html"),
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_5__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_8__services_reports_exportexcel__["a" /* ExportToExcel */],
            __WEBPACK_IMPORTED_MODULE_6__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_7__services_reports_exportpdf__["a" /* ExportToPDF */]])
    ], scheme_wise_shg_Component);
    return scheme_wise_shg_Component;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/reports/shg_report.component.html":
/***/ (function(module, exports) {

module.exports = "<section class=\"content\">\r\n    <div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n        <loading-selector>\r\n        </loading-selector>\r\n    </div>\r\n    <section class=\"content-header\">\r\n        <div *ngIf=\"shgByCmrcId\" class=\"heading-title\">\r\n            <h3>SHG DETAILS BY CMRC</h3>\r\n        </div>\r\n        <div *ngIf=\"shgByVoId\" class=\"heading-title\">\r\n            <h3>SHG DETAILS BY VO</h3>\r\n        </div>\r\n    </section>\r\n    <!-- <section class=\"content-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\" style=\"padding:3px;\">\r\n                <div class=\"col-md-3\">\r\n                    <label  class=\"heading-title\">\r\n                        <span  *ngIf=\"shgByCmrcId\">SHG DETAILS BY CMRC</span>\r\n                        <span *ngIf=\"shgByVoId\"> SHG DETAILS BY VO</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section> -->\r\n    <section class=\"content\" style=\"margin-top: -19px;\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"box box-default\">\r\n                    <div class=\"box-body\">\r\n                        <div class=\"form-group\" style=\"margin-bottom:44px;\">\r\n                            <div class=\"col-md-2\">\r\n                                <button type=\"btn\" class=\"btn btn-primary\" routerLink=\"/cmrc/reports\" style=\"font-size: 14\">\r\n                                    BACK </button>\r\n                            </div>\r\n                            <label class=\"control-label col-md-2\"> SELECT VO</label>\r\n                            <div class=\"col-md-3\">\r\n\r\n                                <select class=\"form-control\" #selectVo=\"ngModel\" (change)=\"getShgsByVo(selectedVoId)\" [(ngModel)]=\"selectedVoId\" name=\"selectVo\"\r\n                                    id=\"selectVo\">\r\n                                    <option *ngFor=\"let Vo of Vos\" [value]=\"Vo.Key\">{{Vo.Value}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <!-- <label class=\"control-label col-md-1\"> SELECT SHG</label>\r\n                        <div class=\"col-md-3\">\r\n                            <select [(ngModel)]=\"selectedShgId\" name=\"selectedShgId\" class=\"form-control\" id=\"selectShg\">\r\n                                <option *ngFor=\"let shg of shgsKvp\" [value]=\"shg.Key\">{{shg.Value}}</option>\r\n                            </select>\r\n                        </div> -->\r\n                        </div>\r\n                        <div *ngIf=\"shgByCmrcId\">\r\n                            <div class=\"col-md-2 col-md-offset-3\">\r\n                                <button class=\"btn btn-primary\" (click)=\"R33_shgByCmrcDetailsExportToPdf()\" style=\"margin-left: 88px;\">\r\n                                    <span>\r\n                                        <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                                    </span> PDF </button>\r\n                            </div>\r\n                            <!-- <button class=\"btn btn-primary\" (click)=\"shgByCmrcExcel()\">EXCEL</button> -->\r\n                            <table datatable class=\"display nowrap\" cellspacing=\"0\" width=\"100%;\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th hidden></th>\r\n                                        <th>SHG NAME</th>\r\n                                        <th>CODE</th>\r\n                                        <th>VO NAME</th>\r\n                                        <th>CMRC NAME</th>\r\n                                        <th>DISTRICT</th>\r\n                                        <th>TALUKA</th>\r\n                                        <th>VILLAGE NAME</th>\r\n                                        <th>ACTION</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let ShgByCmrc of ShgsByCmrc\">\r\n                                        <td hidden>{{ShgByCmrc.Id}}</td>\r\n                                        <td>{{ShgByCmrc.Name}}</td>\r\n                                        <td>{{ShgByCmrc.Code}}</td>\r\n                                        <td>{{ShgByCmrc.VOName}}</td>\r\n                                        <td>{{ShgByCmrc.CMRCName}}</td>\r\n                                        <td>{{ShgByCmrc.District}}</td>\r\n                                        <td>{{ShgByCmrc.Taluka}}</td>\r\n                                        <td>{{ShgByCmrc.VillageName}}</td>\r\n                                        <td>\r\n                                            <button class=\"btn btn-primary\" (click)=\"R34_ShgViewExportTopdf(ShgByCmrc)\">\r\n                                                <span>\r\n                                                    <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                                                </span> PDF</button>\r\n                                        </td>\r\n                                    </tr>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"shgByVoId\">\r\n                            <div class=\" TableHeaderInsideAll_Buttons btn_pad_non\" style=\"margin-left: 576px;\">\r\n                                <button class=\"pull-right btn btn-primary\" (click)=\"R34_shgByVoExportTopdf()\">\r\n                                    <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\"> PDF </button>\r\n                                <!-- <button style=\"font-size: 14\" (click)=\"R166_memberExportTopdf()\" class=\"btn btn-primary\" style=\"margin-left: 330px;\">TOPDF</button> -->\r\n                            </div>\r\n                            <!-- <button class=\"btn btn-primary\" (click)=\"shgByVoExcel()\">EXCEL</button> -->\r\n                            <table datatable class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th hidden></th>\r\n                                        <th>SHG NAME</th>\r\n                                        <th>CODE</th>\r\n                                        <th>VO NAME</th>\r\n                                        <th>CMRC NAME</th>\r\n                                        <th>DISTRICT</th>\r\n                                        <th>TALUKA</th>\r\n                                        <th>VILLAGE NAME</th>\r\n                                        <th>ACTION</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let Shg of Shgs\">\r\n                                        <td hidden>{{Shg.Id}}</td>\r\n                                        <td>{{Shg.Name}}</td>\r\n                                        <td>{{Shg.Code}}</td>\r\n                                        <td>{{Shg.VOName}}</td>\r\n                                        <td>{{Shg.CMRCName}}</td>\r\n                                        <td>{{Shg.District}}</td>\r\n                                        <td>{{Shg.Taluka}}</td>\r\n                                        <td>{{Shg.VillageName}}</td>\r\n                                        <td>\r\n                                            <button class=\"btn btn-primary\" (click)=\"R34_ShgByVoViewExportTopdf(Shg)\">\r\n                                                <span>\r\n                                                    <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                                                </span> PDF </button>\r\n                                        </td>\r\n                                    </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/reports/shg_report.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SHGReportsComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_reports_exportexcel__ = __webpack_require__("../../../../../src/app/services/reports/exportexcel.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var SHGReportsComponent = (function () {
    function SHGReportsComponent(_cmrcservice, _router, _access_token, exportToPDF, exportToExcel, _globalURL) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this._access_token = _access_token;
        this.exportToPDF = exportToPDF;
        this.exportToExcel = exportToExcel;
        this._globalURL = _globalURL;
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
        this.shgByCmrcId = true;
        this.shgByVoId = false;
    }
    SHGReportsComponent.prototype.ngOnInit = function () {
        // this.voId;
        this.getShgsByCmrc();
        this.getVoIdAndName();
    };
    SHGReportsComponent.prototype.getVoIdAndName = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_VO_CMRCID, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.Vos = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                    // this.ShowErrormsg = false;
                }, 5000);
            }
        });
    };
    SHGReportsComponent.prototype.getShgsByCmrc = function () {
        var _this = this;
        this.shgByCmrcId = true;
        this.shgByVoId = false;
        debugger;
        this._globalURL.isLoading = true;
        this._cmrcservice.get(this._globalURL.GET_SHG_BYCMRC, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.ShgsByCmrc = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                }, 5000);
            }
        });
    };
    SHGReportsComponent.prototype.getShgsByVo = function (voId) {
        var _this = this;
        this.shgByVoId = true;
        this.shgByCmrcId = false;
        debugger;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_SHGS_BYVO + voId, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.Shgs = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                }, 5000);
            }
        });
    };
    SHGReportsComponent.prototype.getShgNameAndId = function (voID) {
        var _this = this;
        //  let id = data.voId;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get((this._globalURL.GET_SHGNAME_ID_VOID + "" + voID), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.shgsKvp = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    SHGReportsComponent.prototype.R33_shgByCmrcDetailsExportToPdf = function () {
        this._globalURL.isLoading = true;
        this.exportToPDF.R33_shgByCmrcDetailsExportToPdf(this.ShgsByCmrc);
        this._globalURL.isLoading = false;
    };
    SHGReportsComponent.prototype.R34_shgByVoExportTopdf = function () {
        this._globalURL.isLoading = true;
        debugger;
        this.exportToPDF.R34_shgByVoExportTopdf(this.Shgs);
        this._globalURL.isLoading = false;
    };
    SHGReportsComponent.prototype.R34_ShgViewExportTopdf = function (data) {
        this._globalURL.isLoading = true;
        this.exportToPDF.R34_ShgViewExportTopdf(data);
        this._globalURL.isLoading = false;
    };
    SHGReportsComponent.prototype.R34_ShgByVoViewExportTopdf = function (data) {
        this._globalURL.isLoading = true;
        debugger;
        this.exportToPDF.R34_ShgByVoViewExportTopdf(data);
        this._globalURL.isLoading = false;
    };
    SHGReportsComponent.prototype.shgByCmrcExcel = function () {
        this._globalURL.isLoading = true;
        this.exportToExcel.shgByCmrcExcel(this.ShgsByCmrc);
        this._globalURL.isLoading = false;
    };
    SHGReportsComponent.prototype.shgByVoExcel = function () {
        debugger;
        this._globalURL.isLoading = true;
        this.exportToExcel.shgByVoExcel(this.Shgs);
    };
    SHGReportsComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/reports/shg_report.component.html"),
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_5__services_reports_exportpdf__["a" /* ExportToPDF */],
            __WEBPACK_IMPORTED_MODULE_6__services_reports_exportexcel__["a" /* ExportToExcel */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */]])
    ], SHGReportsComponent);
    return SHGReportsComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/reports/shgbyvo.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-3\">\r\n                <label class=\"heading-title\">\r\n                    AGE WISE SHG GROUP DETAILS\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n                    <div>\r\n                        <button class=\"btn btn-primary\" routerLink=\"/cmrc/reports\" style=\"font-size: 14\">\r\n                            BACK </button>\r\n\r\n                        <button class=\"btn btn-primary\" style=\"float:right;\" (click)=\"R148_AgeWiseGroupDetailPDF()\">\r\n                            <span>\r\n                                <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                            </span> PDF\r\n                        </button>\r\n                        <!-- <button class=\"btn btn-primary\" (click)=\"ageWiseGroupDetailsExcel()\">EXCEL</button> -->\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"text\">SELECT VO\r\n                            <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                        </label>\r\n                        <select class=\"form-control\" id=\"selectedId1\" name=\"selectedId1\" (ngModel)=\"selectedId1\" (change)=\"viewSHGDetail(selectedId1.viewModel)\"\r\n                            #selectedId1=\"ngModel\">\r\n                            <option *ngFor=\"let getVoNameAndId of _getVoNameAndId\" [value]=\"getVoNameAndId.Key\">{{getVoNameAndId.Value}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <table datatable class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th hidden></th>\r\n                                <th>SHG CODE</th>\r\n                                <th>SHG NAME</th>\r\n                                <th>VO NAME</th>\r\n                                <th>VILLAGE NAME</th>\r\n                                <!-- <th>CONTACT NUMBER</th>\r\n                                            <th>CATEGORY</th>\r\n                                            <th>SHG DATE OF JOINING</th> -->\r\n                                <!-- <th>ACTION</th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let item of shgDetails\">\r\n                                <td hidden>{{item.Id}}</td>\r\n                                <td>{{item.Code}}</td>\r\n                                <td>{{item.Name}}</td>\r\n                                <td>{{item.VOName}}</td>\r\n                                <td>{{item.VillageName}}</td>\r\n                                <!-- <td>{{AllCmrcVoMember.MobileNumber}}</td>\r\n                                            <td>{{AllCmrcVoMember.Caste}}</td>\r\n                                            <td>{{AllCmrcVoMember.DateOfJoin}}</td> -->\r\n                                <!-- <td>\r\n                                    <button title=\"View Details\" class=\"Lastbutton\" data-toggle=\"modal\">\r\n                                        <span class=\"material-icons\">visibility</span>\r\n                                    </button>\r\n                                </td> -->\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/reports/shgbyvo.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SHGByVoComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_reports_exportexcel__ = __webpack_require__("../../../../../src/app/services/reports/exportexcel.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var SHGByVoComponent = (function () {
    function SHGByVoComponent(_cmrcservice, _router, _access_token, _common_message, _globalVariable, exportToExcel, _globalURL, exportToPDF) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this._access_token = _access_token;
        this._common_message = _common_message;
        this._globalVariable = _globalVariable;
        this.exportToExcel = exportToExcel;
        this._globalURL = _globalURL;
        this.exportToPDF = exportToPDF;
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    SHGByVoComponent.prototype.ngOnInit = function () {
        this.getAllMEmbersByVo();
    };
    SHGByVoComponent.prototype.viewSHGDetail = function (id) {
        var _this = this;
        debugger;
        this.shgDetails = null;
        this._globalURL.isLoading = true;
        // this._commonService.checkUserSession(sessionStorage.getItem("access_token"));
        //this._globalVariable.VoIdForAgeWiseGroupdetails==>IMP have to impement dynamic value
        this._cmrcservice.get(this._globalURL.GET_SHG_BY_VOID + id, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.shgDetails = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
                _this.message = _this._common_message.WarningMsg;
                _this.showErrorMessage = true;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    SHGByVoComponent.prototype.getAllMEmbersByVo = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_VO_BY_CMRC_ID, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this._getVoNameAndId = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    SHGByVoComponent.prototype.R148_AgeWiseGroupDetailPDF = function () {
        // alert("Download Pdf..");
        this._globalURL.isLoading = true;
        this.exportToPDF.R7_AgeWiseGroupDetails(this.shgDetails);
        this._globalURL.isLoading = false;
    };
    SHGByVoComponent.prototype.ageWiseGroupDetailsExcel = function () {
        this.exportToExcel.ageWiseGroupDetailsExcel(this.shgDetails);
    };
    SHGByVoComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/reports/shgbyvo.component.html"),
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_5__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_6__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_8__services_reports_exportexcel__["a" /* ExportToExcel */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_7__services_reports_exportpdf__["a" /* ExportToPDF */]])
    ], SHGByVoComponent);
    return SHGByVoComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/scheme/scheme.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-3\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">SCHEME DETAILS</span>\r\n                    <span *ngIf=\"lang.mr\"> योजना तपशील </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createSchemaForm\">\r\n                        <span *ngIf=\"lang.en\">ADD NEW SCHEME</span>\r\n                        <span *ngIf=\"lang.mr\"> नवीन योजना समाविष्ट करा </span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table datatable [dtTrigger]=\"dtTrigger\" class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SCHEME ID</span>\r\n                                    <span *ngIf=\"lang.mr\"> योजना आय डी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SCHEME</span>\r\n                                    <span *ngIf=\"lang.mr\"> योजना</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getScheme of getSchemes\">\r\n                                <td>{{getScheme.Id}}</td>\r\n                                <td>{{getScheme.Name | uppercase}}</td>\r\n                                <td>{{getScheme.CreatedBy}}</td>\r\n                                <td>{{getScheme.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td>\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteSchemaForm\" (click)=\"delete(getScheme)\">\r\n                                        <span *ngIf=\"lang.en\">DELETE</span>\r\n                                        <span *ngIf=\"lang.mr\"> काढून टाका </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"createSchemaForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width:300px;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n\r\n                    <span *ngIf=\"lang.en\">SCHEME FORM</span>\r\n                    <span *ngIf=\"lang.mr\"> योजना फॉर्म</span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #SchemeForm=\"ngForm\" class=\"input-group\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">SCHEME</span>\r\n                                        <span *ngIf=\"lang.mr\"> योजना</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"Name\" class=\"form-control\" name=\"Name\" id=\"Name\" required maxlength=\"50\" #Name=\"ngModel\">\r\n                                    <div *ngIf=\"Name.invalid && Name.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!Name.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Scheme is Require !</span>\r\n                                            <span *ngIf=\"lang.mr\"> योजना आवश्यक आहे !</span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!Name.hasError('pattern')\">Scheme Name should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" [disabled]=\"SchemeForm.invalid\" (click)=\"createScheme(SchemeForm.value)\" data-dismiss=\"modal\" class=\"btn btn-primary\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteSchemaForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">SCHEME</span>\r\n                    <span *ngIf=\"lang.mr\"> योजना</span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteScheme(SchemeModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/scheme/scheme.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SchemeComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var SchemeComponent = (function () {
    function SchemeComponent(_cmrcservice, _router, lang, _access_token, _globalURL, _globalVariable, _common_message) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_8_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    SchemeComponent.prototype.ngOnInit = function () {
        this.getScheme();
    };
    SchemeComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getScheme();
    };
    //GET AREA AND ...
    SchemeComponent.prototype.getScheme = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_SCHEME_DETAILS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.getSchemes = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
                _this.message = _this._common_message.CatchBlockMsg;
                _this.showErrorMessage = true;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
            }
            _this.reRenderDT();
        });
    };
    SchemeComponent.prototype.createScheme = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var schemeName = data.Name;
        this._cmrcservice.post((this._globalURL.CREATE_SCHEME + schemeName), data, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.AddSchemeMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        _this.getScheme();
                    }
                    else {
                        _this._globalURL.isLoading = false;
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.ErrorAddSchemeMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this.getScheme();
                    }
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.ErrorAddSchemeMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            else {
                if (res.status == 200) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.AddSchemeMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getScheme();
                }
            }
        }).catch(function (err) {
            _this.ShowErrormsg = true;
            _this.message = "Record is not created";
            setInterval(function () {
            }, 5000);
        });
    };
    SchemeComponent.prototype.delete = function (data) {
        debugger;
        this.SchemeModel = data;
        debugger;
    };
    SchemeComponent.prototype.deleteScheme = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_SCHEME + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.DeleteSchemeMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        _this.getScheme();
                    }
                    else {
                        _this._globalURL.isLoading = false;
                        _this.message = _this._common_message.ErrorDeleteSchemeMsg;
                        _this.showErrorMessage = true;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                    }
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.message = _this._common_message.ErrorDeleteSchemeMsg;
                    _this.showErrorMessage = true;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            else {
                if (res.status == 200) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.DeleteSchemeMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getScheme();
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.message = _this._common_message.ErrorDeleteSchemeMsg;
                    _this.showErrorMessage = true;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    SchemeComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */])
    ], SchemeComponent.prototype, "dtElement", void 0);
    SchemeComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/scheme/scheme.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")],
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], SchemeComponent);
    return SchemeComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/social_category/social_category.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-5\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">SOCIAL CATEGORY DETAILS</span>\r\n                    <span *ngIf=\"lang.mr\"> सामाजिक वर्ग तपशील </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createSocialCategoryForm\">\r\n                        <span *ngIf=\"lang.en\"> ADD NEW SOCIAL CATEGORY</span>\r\n                        <span *ngIf=\"lang.mr\"> नवीन सामाजिक वर्ग जोडा </span>\r\n                    </button>\r\n                </div>\r\n\r\n                <div class=\"box-body\">\r\n                    <table datatable [dtTrigger]=\"dtTrigger\" class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SOCIAL CATEGORY ID</span>\r\n                                    <span *ngIf=\"lang.mr\"> सामाजिक वर्ग आयडी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SOCIAL CATEGORY </span>\r\n                                    <span *ngIf=\"lang.mr\"> सामाजिक वर्ग </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getSocialCategory of getSocialCategorys\">\r\n                                <td>{{getSocialCategory.Id}}</td>\r\n                                <td>{{getSocialCategory.Name | uppercase}}</td>\r\n                                <td>{{getSocialCategory.CreatedBy}}</td>\r\n                                <td>{{getSocialCategory.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td>\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteSocialCategoryForm\" (click)=\"delete(getSocialCategory)\">\r\n                                        <span *ngIf=\"lang.en\">DELETE</span>\r\n                                        <span *ngIf=\"lang.mr\"> काढून टाका </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"createSocialCategoryForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width:300px;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title text-center\">\r\n                    <span *ngIf=\"lang.en\">SOCIAL CATEGORY FORM </span>\r\n                    <span *ngIf=\"lang.mr\"> सामाजिक वर्ग फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #SocialCategoryForm=\"ngForm\" class=\"input-group\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">SOCIAL CATEGORY </span>\r\n                                        <span *ngIf=\"lang.mr\"> सामाजिक वर्ग </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"Name\" class=\"form-control\" id=\"Name\" name=\"Name\" #Name=\"ngModel\" required maxlength=\"50\">\r\n                                    <div *ngIf=\"Name.invalid && Name.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!Name.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Social Category is Required ! </span>\r\n                                            <span *ngIf=\"lang.mr\"> सामाजिक वर्ग निवडणे आवश्यक आहे !</span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!Name.hasError('pattern')\">social category Name should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" [disabled]=\"SocialCategoryForm.invalid\" id=\"click-button2\" (click)=\"createSocialCategory(SocialCategoryForm.value)\"\r\n                                    data-dismiss=\"modal\" class=\"btn btn-primary\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteSocialCategoryForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title text-center\">\r\n                    <span *ngIf=\"lang.en\">SOCIAL CATEGORY FORM </span>\r\n                    <span *ngIf=\"lang.mr\"> सामाजिक वर्ग फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteSocialCategory(SocialCategoryModel)\">\r\n                                <span *ngIf=\"lang.en\">YES </span>\r\n                                <span *ngIf=\"lang.mr\">होय </span>\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                <span *ngIf=\"lang.en\">NO </span>\r\n                                <span *ngIf=\"lang.mr\">नाही </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/social_category/social_category.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SocialcategoryComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var SocialcategoryComponent = (function () {
    function SocialcategoryComponent(_cmrcservice, _router, lang, _access_token, _globalURL, _globalVariable, _common_message) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_8_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    SocialcategoryComponent.prototype.ngOnInit = function () {
        this.getSocialCategory();
    };
    SocialcategoryComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getSocialCategory();
    };
    //GET AREA AND ...
    SocialcategoryComponent.prototype.getSocialCategory = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_SOCIAL_CATEGORY, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.getSocialCategorys = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
            _this.reRenderDT();
        });
    };
    SocialcategoryComponent.prototype.createSocialCategory = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var socialCategory = data.Name;
        this._cmrcservice.post((this._globalURL.CREATE_SOCIAL_CATEGORY + socialCategory), data, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = "Record is Create succesfully";
                        setInterval(function () {
                            _this._globalURL.isSaveSuccessMessage = false;
                            _this.showMessage = false;
                        }, 5000);
                        _this.getSocialCategory();
                    }
                    else {
                        _this.ShowErrormsg = true;
                        _this.message = "Record is not created";
                        setInterval(function () {
                            _this._globalURL.isSaveSuccessMessage = false;
                            _this.ShowErrormsg = false;
                        }, 5000);
                    }
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not created";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            else {
                if (res.Status == 1) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = "Record is Create succesfully";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.showMessage = false;
                    }, 5000);
                    _this.getSocialCategory();
                }
            }
        })
            .catch(function (err) {
            _this.ShowErrormsg = true;
            _this.message = "Record is not created";
            setInterval(function () {
            }, 5000);
        });
    };
    SocialcategoryComponent.prototype.delete = function (data) {
        debugger;
        this.SocialCategoryModel = data;
        debugger;
    };
    SocialcategoryComponent.prototype.deleteSocialCategory = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_SOCIAL_CATEGORY + id;
        this._cmrcservice.post(final, null, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this.getSocialCategory();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            else {
                if (res.Status == true) {
                    _this.getSocialCategory();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            _this.getSocialCategory();
            _this._globalURL.isLoading = false;
            _this.showMessage = true;
            _this.message = "Record is Delete succesfully";
            setInterval(function () {
                _this.showMessage = false;
            }, 5000);
        })
            .catch(function (err) {
            _this.ShowErrormsg = true;
            _this.message = "Record is not deleted";
            setInterval(function () {
            }, 5000);
        });
    };
    SocialcategoryComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */])
    ], SocialcategoryComponent.prototype, "dtElement", void 0);
    SocialcategoryComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/social_category/social_category.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], SocialcategoryComponent);
    return SocialcategoryComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/taluka/taluka.component.html":
/***/ (function(module, exports) {

module.exports = " <div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">   \r\n    <loading-selector>\r\n    </loading-selector>\r\n</div> \r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-3\">\r\n                <label  class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">TALUKA DETAILS</span>\r\n                    <span *ngIf=\"lang.mr\">तालुका तपशील </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createTalukaForm\">\r\n                        <span *ngIf=\"lang.en\">ADD NEW TALUKA </span>\r\n                        <span *ngIf=\"lang.mr\"> नवीन तालुका जोडा</span>\r\n                    </button>\r\n                    <label for=\"text\" style=\"margin-left:40px;\">\r\n                        <span *ngIf=\"lang.en\">Select District</span>\r\n                        <span *ngIf=\"lang.mr\">ज़िल्हा निवडा </span>\r\n                    </label>\r\n                    <select class=\"form control\"  (ngModel)=\"selectedDistId\" (change)=\"getTalukaByDistrict(selectedDistId.viewModel)\" id=\"selectedDistId\"\r\n                        name=\"selectedDistId\" #selectedDistId=\"ngModel\">\r\n                        <option *ngFor=\"let districtGroup of districtGroups\" [value]=\"districtGroup.Id\">{{districtGroup.Name}}</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"box-body\" *ngIf=\"ShowTaluka\">\r\n                    <table  datatable [dtTrigger]=\"dtTrigger\" class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TALUKA ID </span>\r\n                                    <span *ngIf=\"lang.mr\"> तालुका आय डी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TALUKA</span>\r\n                                    <span *ngIf=\"lang.mr\">तालुका </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getTaluka of getTalukas\">\r\n                                <td>{{getTaluka.Id}}</td>\r\n                                <td>{{getTaluka.Name | uppercase}}</td>\r\n                                <td>{{getTaluka.CreatedBy}}</td>\r\n                                <td>{{getTaluka.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                <td style=\"padding:3px;text-align:center\">\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteTaluka\" (click)=\"delete(getTaluka)\">\r\n                                            <span *ngIf=\"lang.en\">DELETE</span>\r\n                                            <span *ngIf=\"lang.mr\"> काढून टाका  </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n                <div class=\"box-body\" *ngIf=\"ShowTalukaByDistrict\">\r\n                    <table datatable class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TALUKA ID </span>\r\n                                    <span *ngIf=\"lang.mr\"> तालुका आय डी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TALUKA</span>\r\n                                    <span *ngIf=\"lang.mr\">तालुका </span>\r\n                                </th>\r\n                                <!-- <th>CREATED BY</th>\r\n                                    <th>CREATED DATE</th> -->\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let Talukas of TalukasByDistrict\">\r\n                                <td>{{Talukas.Key}}</td>\r\n                                <td>{{Talukas.Value | uppercase}}</td>\r\n                                <!-- <td>{{Talukas.CreatedBy}}</td>\r\n                                    <td>{{Talukas.CreatedDate | date: 'dd-MM-yyyy'}}</td> -->\r\n                                <td style=\"text-align:center;margin:3px;\">\r\n                                    <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteTalukaByDistrict\" (click)=\"deleteTalukaByDistrict(Talukas)\">\r\n                                            <span *ngIf=\"lang.en\">DELETE</span>\r\n                                            <span *ngIf=\"lang.mr\"> काढून टाका  </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- create Modal -->\r\n<div id=\"createTalukaForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width:392px;\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">TALUKA FORM</span>\r\n                    <span *ngIf=\"lang.mr\"> तालुका फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #talukaForm=\"ngForm\" id=\"bacgfat\" class=\"input-group\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">Select District</span>\r\n                                        <span *ngIf=\"lang.mr\">ज़िल्हा निवडा </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"from-control\" class=\"form-control\" (ngModel)=\"selectedDistrictId\" id=\"DistrictId\" name=\"DistrictId\" #selectedDistrictId=\"ngModel\">                                       \r\n                                        <option *ngFor=\"let districtGroup of districtGroups\" [value]=\"districtGroup.Id\">{{districtGroup.Name}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\"> Taluka Name</span>\r\n                                        <span *ngIf=\"lang.mr\">तालुका </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"TalukaName\" class=\"form-control\" id=\"TalukaName\" name=\"TalukaName\" #TalukaName=\"ngModel\" required\r\n                                        maxlength=\"50\">\r\n                                    <div *ngIf=\"TalukaName.invalid && TalukaName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!TalukaName.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Please Taluka name is required !</span>\r\n                                            <span *ngIf=\"lang.mr\">कृपया तालुका आवश्यक आहे ! </span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!TalukaName.hasError('pattern')\">Taluka Name should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"createTaluka(talukaForm.value)\">\r\n                                    <span *ngIf=\"lang.en\">ADD </span>\r\n                                    <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- delete Modal content-->\r\n<div id=\"deleteTaluka\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\"> \r\n                        <span *ngIf=\"lang.en\"> TALUKA</span>\r\n                        <span *ngIf=\"lang.mr\">तालुका </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                    <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                    <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <div class=\"form-group\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteTaluka(talukaModel)\">\r\n                        <span *ngIf=\"lang.en\">YES </span>\r\n                        <span *ngIf=\"lang.mr\">होय  </span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                        <span *ngIf=\"lang.en\">NO </span>\r\n                        <span *ngIf=\"lang.mr\">नाही </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--Delete taluka by district-->\r\n<!-- <div id=\"deleteTalukaByDistrict\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\"> \r\n                        <span *ngIf=\"lang.en\">TALUKA DETAILS</span>\r\n                        <span *ngIf=\"lang.mr\">तालुका तपशील </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>\r\n                        <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                        <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                </p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <div class=\"form-group\">\r\n                    <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteTalukasByDistrict(talukaByDistrictModel)\">\r\n                        <span *ngIf=\"lang.en\">YES </span>\r\n                        <span *ngIf=\"lang.mr\">होय  </span>\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                        <span *ngIf=\"lang.en\">NO </span>\r\n                        <span *ngIf=\"lang.mr\">नाही </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/taluka/taluka.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TalukaComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
//Anjali..










//import { setInterval } from 'timers';
var TalukaComponent = (function () {
    function TalukaComponent(_cmrcservice, _router, _access_token, _globalURL, lang, _globalVariable, _common_message) {
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this.lang = lang;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_8_rxjs__["Subject"]();
        _globalURL.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
        this.ShowTaluka = true;
        this.ShowTalukaByDistrict = false;
    }
    TalukaComponent.prototype.ngOnInit = function () {
        this.getTaluka();
        this.getCmrcDistrict();
    };
    TalukaComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getTaluka();
    };
    //get Taluka
    TalukaComponent.prototype.getTaluka = function () {
        var _this = this;
        this.ShowTaluka = true;
        this.ShowTalukaByDistrict = false;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_TALUKA, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.getTalukas = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
            _this.reRenderDT();
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //get taluka By District Id
    TalukaComponent.prototype.getTalukaByDistrict = function (data) {
        var _this = this;
        this.ShowTaluka = false;
        this.ShowTalukaByDistrict = true;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_TALUKA_BY_DISTRICT + data, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.TalukasByDistrict = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //get all District...
    TalukaComponent.prototype.getCmrcDistrict = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._cmrcservice.get(this._globalURL.GET_DISTRICT, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.districtGroups = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //Create Taluka...
    TalukaComponent.prototype.createTaluka = function (data) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        var finalUrl = this._globalURL.CREATE_NEW_TALUKA + data.TalukaName + "&disId=" + data.DistrictId;
        this._cmrcservice.post(finalUrl, null, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        _this._globalURL.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.AddTalukaMsg;
                        setInterval(function () {
                            _this.showMessage = false;
                        }, 5000);
                        _this.getTaluka();
                    }
                    else {
                        _this._globalURL.isLoading = false;
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.ErrorAddTalukaMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                    }
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.ErrorAddTalukaMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            else {
                if (res.Status == 1) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.AddTalukaMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getTaluka();
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.ErrorAddTalukaMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //delete Taluka
    TalukaComponent.prototype.delete = function (data) {
        debugger;
        this.talukaModel = data;
        debugger;
    };
    TalukaComponent.prototype.deleteTaluka = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalURL.DELETE_TALUKA + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined) {
                if (res.status == 200) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = "Record is Delete succesfully";
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getTaluka();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            else {
                if (res.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = "Record is Delete succesfully";
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getTaluka();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //Delete Taluka by selected district
    TalukaComponent.prototype.deleteTalukaByDistrict = function (data) {
        debugger;
        this.talukaByDistrictModel = data;
        debugger;
    };
    TalukaComponent.prototype.deleteTalukasByDistrict = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        var id = data.Key;
        var final = this._globalURL.DELETE_TALUKA + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined) {
                if (res.status == 200) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = "Record is Delete succesfully";
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getTaluka();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            else {
                if (res.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = "Record is Delete succesfully";
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getTaluka();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not delete";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
        })
            .catch(function (err) {
            // alert("sooory");
            setInterval(function () {
            }, 5000);
        });
    };
    TalukaComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_7_angular_datatables__["a" /* DataTableDirective */])
    ], TalukaComponent.prototype, "dtElement", void 0);
    TalukaComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/taluka/taluka.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], TalukaComponent);
    return TalukaComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/village/village.component.html":
/***/ (function(module, exports) {

module.exports = " <div class=\"modal-backdrop in\" *ngIf=\"_globalUrl.isLoading\">   \r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <section class=\"content-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\" style=\"padding:3px;\">\r\n                <div class=\"col-md-3\">\r\n                    <label  class=\"heading-title\">\r\n                        <span *ngIf=\"lang.en\">VILLAGE DETAILS</span>                    \r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <section class=\"content\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"box box-default\">\r\n                    <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createVillageForm\">\r\n                            <span *ngIf=\"lang.en\">ADD NEW VILLAGE</span>\r\n                            <!-- <span *ngIf=\"lang.mr\"> नवीन योजना समाविष्ट करा </span> -->\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                        <table datatable [dtTrigger]=\"dtTrigger\" class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">VILLAGE ID</span>\r\n                                        <!-- <span *ngIf=\"lang.mr\"> योजना आय डी </span> -->\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">VILLAGE NAME</span>\r\n                                        <span *ngIf=\"lang.mr\"> योजना</span>\r\n                                    </th>\r\n                                    <!-- <th>\r\n                                        <span *ngIf=\"lang.en\">DISTRICT</span>\r\n                                        <span *ngIf=\"lang.mr\">स्थापक </span>\r\n                                    </th> -->\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">CREATED BY</span>\r\n                                        <!-- <span *ngIf=\"lang.mr\"> स्थापना दिवस </span> -->\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">CREATED DATE</span>\r\n                                        <span *ngIf=\"lang.mr\"> स्थापना दिवस </span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">ACTION</span>\r\n                                        <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let Village of Villages\">\r\n                                    <td>{{Village.Id}}</td>\r\n                                    <td>{{Village.Name | uppercase}}</td>\r\n                                    <!-- <td>{{Village.District | uppercase}}</td> -->\r\n                                    <td>{{Village.CreatedBy | uppercase}}</td>\r\n                                    <td>{{Village.CreatedDate | date: 'dd-MM-yyyy'}}</td>\r\n                                    <td>\r\n                                        <button title=\"View Details\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteVillageForm\" (click)=\"delete(Village)\">\r\n                                            <span *ngIf=\"lang.en\">DELETE</span>\r\n                                            <!-- <span *ngIf=\"lang.mr\"> काढून टाका </span> -->\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- data table end -->\r\n    </section>\r\n    <!-- create Modal -->\r\n    <div id=\"createVillageForm\" class=\"modal\" role=\"dialog\">\r\n        <div class=\"modal-dialog\" style=\"width:300px;\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">\r\n\r\n                        <span *ngIf=\"lang.en\">VILLAGE FORM</span>\r\n                        <!-- <span *ngIf=\"lang.mr\"> योजना फॉर्म</span> -->\r\n                    </h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"\">\r\n                        <form #VillageForm=\"ngForm\" class=\"input-group\" novalidate>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n                                            <span *ngIf=\"lang.en\">VILLAGE</span>\r\n                                            <!-- <span *ngIf=\"lang.mr\"> योजना</span> -->\r\n                                            <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                        </label>\r\n                                        <input type=\"text\" (ngModel)=\"Name\" class=\"form-control\" name=\"Name\"  required maxlength=\"50\"\r\n                                            #Name=\"ngModel\">\r\n                                        <div *ngIf=\"Name.invalid && Name.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <div [hidden]=\"!Name.hasError('required')\">\r\n                                                <span *ngIf=\"lang.en\">Village is Require !</span>\r\n                                                <!-- <span *ngIf=\"lang.mr\"> योजना आवश्यक आहे !</span> -->\r\n                                            </div>\r\n                                            <!-- <div [hidden]=\"!Name.hasError('pattern')\">Scheme Name should be only Letters</div> -->\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <div class=\"form-group\">\r\n                                    <button type=\"button\" [disabled]=\"VillageForm.invalid\" (click)=\"createVillage(VillageForm)\" data-dismiss=\"modal\" class=\"btn btn-primary\">\r\n                                        <span *ngIf=\"lang.en\">ADD </span>\r\n                                        <!-- <span *ngIf=\"lang.mr\">समाविष्ट करा </span> -->\r\n                                    </button>\r\n                                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                        <span *ngIf=\"lang.en\">CANCEL </span>\r\n                                        <!-- <span *ngIf=\"lang.mr\">रद्द करा </span> -->\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- delete Modal content-->\r\n    <div id=\"deleteVillageForm\" class=\"modal\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">\r\n                        <span *ngIf=\"lang.en\">VILLAGE</span>\r\n                        <!-- <span *ngIf=\"lang.mr\"> योजना</span> -->\r\n                    </h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <p>\r\n                        <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                        <!-- <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span> -->\r\n                    </p>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"\">\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteVillage(VillageModel)\">\r\n                                    <span *ngIf=\"lang.en\">YES </span>\r\n                                    <span *ngIf=\"lang.mr\">होय  </span>\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    <span *ngIf=\"lang.en\">NO </span>\r\n                                    <span *ngIf=\"lang.mr\">नाही </span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/village/village.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VillageComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var VillageComponent = (function () {
    function VillageComponent(_globalUrl, _cmrcservice, _access_token, _router, lang, _common_message) {
        this._globalUrl = _globalUrl;
        this._cmrcservice = _cmrcservice;
        this._access_token = _access_token;
        this._router = _router;
        this.lang = lang;
        this._common_message = _common_message;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_7_rxjs__["Subject"]();
        _globalUrl.isLoading = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    VillageComponent.prototype.ngOnInit = function () {
        this.getVillage();
    };
    VillageComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getVillage();
    };
    //get village
    VillageComponent.prototype.getVillage = function () {
        var _this = this;
        debugger;
        this._globalUrl.isLoading = true;
        this._cmrcservice.get(this._globalUrl.GET_VILLAGE, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.Villages = res.Data;
                _this._globalUrl.isLoading = false;
            }
            else {
                _this.ShowErrormsg = true;
                _this.message = "Record is not get";
                setInterval(function () {
                    _this._globalUrl.isSaveSuccessMessage = false;
                    _this.ShowErrormsg = false;
                }, 5000);
            }
            _this.reRenderDT();
        });
    };
    //crceate village 
    VillageComponent.prototype.createVillage = function (Data) {
        var _this = this;
        debugger;
        // let villageName = data;
        this._globalUrl.isLoading = true;
        this._cmrcservice.post((this._globalUrl.CREATE_VILLAGE + Data.value.Name), null, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined)
                if (res.status == 200) {
                    var data_ = JSON.parse(res._body);
                    if (data_.Status == true) {
                        Data.control.reset();
                        _this._globalUrl.isLoading = false;
                        _this.showMessage = true;
                        _this.message = _this._common_message.AddVillageMsg;
                        setInterval(function () {
                            _this._globalUrl.isSaveSuccessMessage = false;
                            _this.showMessage = false;
                        }, 5000);
                        _this.getVillage();
                    }
                    else {
                        _this._globalUrl.isLoading = false;
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.ErrorAddVillageMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                    }
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Village is not created";
                    setInterval(function () {
                        _this._globalUrl.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            else {
                if (res.Status == 1) {
                    _this._globalUrl.isLoading = false;
                    _this.showMessage = true;
                    _this.message = "Your Record is Create succesfully";
                    setInterval(function () {
                        _this._globalUrl.isSaveSuccessMessage = false;
                        _this.showMessage = false;
                    }, 5000);
                    _this.getVillage();
                }
            }
        })
            .catch(function (err) {
            _this.ShowErrormsg = true;
            _this.message = "Record is not created";
            setInterval(function () {
            }, 5000);
        });
    };
    VillageComponent.prototype.delete = function (data) {
        debugger;
        this.VillageModel = data;
        debugger;
    };
    VillageComponent.prototype.deleteVillage = function (data) {
        var _this = this;
        this._globalUrl.isLoading = true;
        debugger;
        var id = data.Id;
        var final = this._globalUrl.DELETE_VILLAGE + id;
        this._cmrcservice.post(final, "data", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this._globalUrl.isLoading = false;
                    _this._common_message.DeleteVillageMsg;
                    _this.getVillage();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Village is not delete";
                    setInterval(function () {
                        _this._globalUrl.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            else {
                if (res.Status == true) {
                    _this.getVillage();
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Village is not delete";
                    setInterval(function () {
                        _this._globalUrl.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            _this._globalUrl.isLoading = false;
            _this.showMessage = true;
            _this.message = "Village is Delete succesfully";
            setInterval(function () {
                _this.showMessage = false;
            }, 5000);
        })
            .catch(function (err) {
            _this.ShowErrormsg = true;
            _this.message = "Village is not created";
            setInterval(function () {
            }, 5000);
        });
    };
    VillageComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_6_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_6_angular_datatables__["a" /* DataTableDirective */])
    ], VillageComponent.prototype, "dtElement", void 0);
    VillageComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/village/village.component.html"),
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_2__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_5__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], VillageComponent);
    return VillageComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/vo/vo.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"_globalURL.isLoading\">\r\n  <loading-selector>\r\n  </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n  <message-selector [message]=\"message\">\r\n  </message-selector>\r\n</div>\r\n<div *ngIf=\"ShowErrormsg\">\r\n  <error-message-selector [message]=\"message\">\r\n  </error-message-selector>\r\n</div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n      <div class=\"col-md-3\">\r\n        <label class=\"heading-title\">\r\n          <span *ngIf=\"lang.en\">VO DETAILS FORM</span>\r\n          <span *ngIf=\"lang.mr\">व्हीओ तपशील फॉर्म </span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"box box-default\">\r\n        <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n          <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createVoForm\" (click)=\"getNextCode(3)\">\r\n            <span *ngIf=\"lang.en\">CREATE NEW VO</span>\r\n            <span *ngIf=\"lang.mr\"> नवीन व्हीओ तयार करा </span>\r\n          </button>\r\n           <button title=\"View details\" class=\"btn btn-primary\" (click)=\"R36_VoExportTopdf()\" style=\"float:right\">\r\n            <span>\r\n              <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n            </span>\r\n            PDF\r\n          </button>\r\n          <!-- <button class=\"btn btn-primary\" (click)=\"listOfVoExcel()\">EXCEL</button> -->\r\n        </div>\r\n\r\n        <div class=\"box-body\">\r\n          <table datatable [dtTrigger]=\"dtTrigger\" class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">VO CODE</span>\r\n                  <span *ngIf=\"lang.mr\"> व्हीओ कोड </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">VO NAME</span>\r\n                  <span *ngIf=\"lang.mr\"> व्हीओ चे नांव </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">VILLAGE NAME</span>\r\n                  <span *ngIf=\"lang.mr\"> गावाचे नांव </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">ADDRESS</span>\r\n                  <span *ngIf=\"lang.mr\"> पत्ता </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">TALUKA</span>\r\n                  <span *ngIf=\"lang.mr\"> तालुका</span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">ACTION</span>\r\n                  <span *ngIf=\"lang.mr\"> कृती </span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"manage_data\">\r\n              <tr *ngFor=\"let vo of vodetails\">\r\n                <td>{{vo.Code}}</td>\r\n                <td>{{vo.VOName | uppercase }}</td>\r\n                <td>{{vo.Village}}</td>\r\n                <td>{{vo.AddressLine1}}</td>\r\n                <td>{{vo.Taluka}}</td>\r\n                <td class=\"record-action\" style=\"width:20%\">\r\n                  <button title=\"View Details\" class=\"Lastbutton \" data-toggle=\"modal\" class=\"btn btn-primary\" data-target=\"#viewVODetailForm\"\r\n                          (click)=\"viewSHGDetail(vo)\">\r\n                    <span *ngIf=\"lang.en\">VIEW</span>\r\n                    <span *ngIf=\"lang.mr\">पहा </span>\r\n                  </button>\r\n                  <button title=\"View details\" class=\"btn btn-primary\" (click)=\"R36_VoViewExportTopdf(vo)\">\r\n                    <span>\r\n                      <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                    </span>\r\n                    PDF\r\n\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- data table end -->\r\n</section>\r\n<!-- Modal -->\r\n<div id=\"createVoForm\" class=\"modal\" role=\"dialog\">\r\n  <div class=\"modal-dialog\">\r\n    <!-- Modal content-->\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        <h4 class=\"modal-title\">\r\n          <span *ngIf=\"lang.en\">NEW VO FORM</span>\r\n          <span *ngIf=\"lang.mr\">नवीन व्हीओ फॉर्म </span>\r\n        </h4>\r\n        <h5>\r\n          <span *ngIf=\"lang.en\">NEW VO CODE -</span>\r\n          <span *ngIf=\"lang.mr\">नवीन व्हीओ कोड - </span>\r\n          <b> {{nextCode}}</b>\r\n        </h5>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"\">\r\n          <form #VOForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">USERNAME</span>\r\n                    <span *ngIf=\"lang.mr\">युसरनेम</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input class=\"form-control\" type=\"text\" (ngModel)=\"userName\" (change)=\"checkUserName(userName)\" required minlength=\"8\" name=\"userName\"\r\n                         #userName=\"ngModel\">\r\n                  <div *ngIf=\"userName.errors && (userName.dirty || userName.touched)\" class=\"alert-danger comman-error-mesage\">\r\n                    <div [hidden]=\"!userName.errors.required\">\r\n                      <span *ngIf=\"lang.en\">Error! Please Enter User Name!</span>\r\n                      <span *ngIf=\"lang.mr\">चूक!युजरचे नाव भरा! </span>\r\n                    </div>\r\n                    <div [hidden]=\"!userName.errors.minlength\">\r\n                      <span *ngIf=\"lang.en\">Error! User name should be minimum 8 characters!</span>\r\n                      <span *ngIf=\"lang.mr\">चूक!युजरचे नाव कमीत कमी 8 अक्षरी पाहिजे! </span>\r\n                    </div>\r\n                    <div [hidden]=\"!userName.errors.maxlength\">\r\n                      <span *ngIf=\"lang.en\">Error! User name cannot be more than 10 characters long!</span>\r\n                      <span *ngIf=\"lang.mr\">चूक!युजर नाव १० अक्षरा पेक्षा जास्त नसावे! </span>\r\n                    </div>\r\n                  </div>\r\n                  <div *ngIf=\"validusername\" class=\"alert-danger comman-error-mesage\">\r\n                    <div [hidden]=\"!validusername\">\r\n                      <span *ngIf=\"lang.en\">Error! User name is already taken, please enter new.</span>\r\n                      <span *ngIf=\"lang.mr\">चूक!युजर नाव अगोदर घेतलेले आहे , कृपया दुसरे निवडा. </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">PASSWORD</span>\r\n                    <span *ngIf=\"lang.mr\">पासवर्ड </span>\r\n                    <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                  </label>\r\n                  <input type=\"password\" (ngModel)=\"Password\" class=\"form-control\" id=\"Password\" name=\"Password\" #Password=\"ngModel\">\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">VO NAME</span>\r\n                    <span *ngIf=\"lang.mr\">व्हीओ चे नांव </span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"text\" (ngModel)=\"VOName\" class=\"form-control\" id=\"VOName\" name=\"VOName\" #VOName=\"ngModel\" required maxlength=\"50\">\r\n                  <div *ngIf=\"VOName.invalid && VOName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <div [hidden]=\"!VOName.hasError('required')\">\r\n                      <span *ngIf=\"lang.en\"> VO Name Is Required!</span>\r\n                      <span *ngIf=\"lang.mr\">व्हीओ चे नांव आवश्यक आहे </span>\r\n                    </div>\r\n                    <!-- <div [hidden]=\"!VOName.hasError('pattern')\">VOName should be only Letters</div> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">FUND TYPE</span>\r\n                    <span *ngIf=\"lang.mr\">फंड माध्यम </span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <select (ngModel)=\"getAllFundTypes\" class=\"form-control\" name=\"FundTypeId\" required #FundTypeId=\"ngModel\">\r\n                    <option *ngFor=\"let getAllFundType of getAllFundTypes\" [value]=\"getAllFundType.Key\">{{getAllFundType.Value}}</option>\r\n                  </select>\r\n                  <div *ngIf=\"FundTypeId.invalid && FundTypeId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Select Fundtype!</span>\r\n                    <span *ngIf=\"lang.mr\">कृपयानिधी माध्यम आवश्यक आहे! </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">ADDRESS</span>\r\n                    <span *ngIf=\"lang.mr\">पत्ता </span>\r\n                  </label>\r\n                  <input type=\"text\" (ngModel)=\"AddressLine1\" class=\"form-control\" id=\"AddressLine1\" name=\"AddressLine1\" required #AddressLine1=\"ngModel\">\r\n                  <div *ngIf=\"AddressLine1.invalid && AddressLine1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <div [hidden]=\"!AddressLine1.hasError('required')\">\r\n                      <span *ngIf=\"lang.en\">Please Select Address!</span>\r\n                      <span *ngIf=\"lang.mr\">कृपया पत्ता आवश्यक आहे! </span>\r\n                    </div>\r\n                    <!-- <div [hidden]=\"!AddressLine1.hasError('pattern')\">AddressLine should be only Letters</div> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">AREA</span>\r\n                    <span *ngIf=\"lang.mr\">क्षेत्र </span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <select (ngModel)=\"Area\" name=\"Area\" class=\"form-control\" id=\"\" required #Area=\"ngModel\">\r\n\r\n                    <option value=\"Rural\">\r\n                      <span *ngIf=\"lang.en\">RURAL</span>\r\n                      <span *ngIf=\"lang.mr\">ग्रामीण </span>\r\n                    </option>\r\n                    <option value=\"Urban\">\r\n                      <span *ngIf=\"lang.en\">URBAN</span>\r\n                      <span *ngIf=\"lang.mr\">शहरी </span>\r\n                    </option>\r\n                  </select>\r\n                  <div *ngIf=\"Area.invalid && Area.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Select Area!</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया क्षेत्र निवडा! </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">VILLAGE NAME</span>\r\n                    <span *ngIf=\"lang.mr\">गावाचे नांव </span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <select class=\"form-control\" name=\"VillageId\" id=\"village\" (ngModel)=\"village\" required #village=\"ngModel\">\r\n                    <option *ngFor=\"let village of villagess\" [value]=\"village.Key\">{{village.Value}}</option>\r\n                  </select>\r\n                  <div *ngIf=\"village.invalid && village.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\"> Please Select Village Name!</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया जिल्हा निवडा</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">DISTRICT</span>\r\n                    <span *ngIf=\"lang.mr\">जिल्हा </span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <select (ngModel)=\"District\" name=\"District\" class=\"form-control\" id=\"\" #District=\"ngModel\" required>\r\n                    <option [value]=\"2\">\r\n                      <span *ngIf=\"lang.en\">RAIGAD</span>\r\n                      <span *ngIf=\"lang.mr\">रायगड </span>\r\n                    </option>\r\n                  </select>\r\n                  <div *ngIf=\"District.invalid && District.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\"> Please Select District!</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया जिल्हा निवडा</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">TALUKA</span>\r\n                    <span *ngIf=\"lang.mr\">तालुका </span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <select (ngModel)=\"Taluka\" name=\"Taluka\" class=\"form-control\" id=\"sel1\" #Taluka=\"ngModel\" required>\r\n                    <option value=\"Alibag\">ALIBAG</option>\r\n                    <option value=\"Mahad\">MAHAD</option>\r\n                    <option value=\"Karjat\">KARAJT</option>\r\n                  </select>\r\n                  <div *ngIf=\"Taluka.invalid && Taluka.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\"> Please Select Taluka!</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया तालुका निवडा</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">PINCODE</span>\r\n                    <span *ngIf=\"lang.mr\">पिनकोड </span>\r\n                  </label>\r\n                  <input type=\"number\" (ngModel)=\"PinCode\" class=\"form-control\" id=\"PinCode\" #PinCode=\"ngModel\" required name=\"PinCode\">\r\n                  <div *ngIf=\"PinCode.invalid && PinCode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <div [hidden]=\"!PinCode.hasError('required')\">\r\n                      <span *ngIf=\"lang.en\">Please Enter Pincode!</span>\r\n                      <span *ngIf=\"lang.mr\">कृपया पिनकोड आवश्यक आहे! </span>\r\n                    </div>\r\n                    <!-- <div [hidden]=\"!PinCode.hasError('pattern')\">PinCode should be only Letters</div> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">PAN NUMBER </span>\r\n                    <span *ngIf=\"lang.mr\">पॅन नंबर </span>\r\n                  </label>\r\n                  <input type=\"text\" (ngModel)=\"PanCardNumber\" class=\"form-control\" id=\"PanCardNumber\" name=\"PanCardNumber\" required #PanCardNumber=\"ngModel\">\r\n                  <div *ngIf=\"PanCardNumber.invalid && PanCardNumber.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <div [hidden]=\"!PanCardNumber.hasError('required')\">\r\n                      <span *ngIf=\"lang.en\">Please Enter Pan Number is required!</span>\r\n                      <span *ngIf=\"lang.mr\">कृपया पॅन नंबर आवश्यक आहे! </span>\r\n                    </div>\r\n                    <!-- <div [hidden]=\"!PinCode.hasError('pattern')\">PinCode should be only Letters</div> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">VO FORMATION DATE</span>\r\n                    <span *ngIf=\"lang.mr\"> व्हीओ स्थापना दिनांक </span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>                  \r\n                  <!-- <ng-datepicker class=\"dt-picker-format\" style=\"z-index: -11\"  (ngModel)=\"FormationDate\" #toDt [options]=\"options\">\r\n                  </ng-datepicker> -->\r\n                  <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"FormationDate\" #frDt [options]=\"options\" name=\"FormationDate\">\r\n                    </ng-datepicker>\r\n                   <div *ngIf=\"frDt.invalid && frDt.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Enter Formation Date!</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया व्हीओ स्थापना दिनांक आवश्यक आहे! </span>\r\n                  </div> \r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\"> MEETING DATE</span>\r\n                    <span *ngIf=\"lang.mr\"> मीटिंग दिनांक </span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <select (ngModel)=\"MeetingDate\" class=\"form-control\" id=\"MeetingDate\" name=\"MeetingDate\" required #MeetingDate=\"ngModel\">\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"11\">11</option>\r\n                    <option value=\"12\">12</option>\r\n                    <option value=\"13\">13</option>\r\n                    <option value=\"14\">14</option>\r\n                    <option value=\"15\">15</option>\r\n                    <option value=\"16\">16</option>\r\n                    <option value=\"17\">17</option>\r\n                    <option value=\"18\">18</option>\r\n                    <option value=\"19\">19</option>\r\n                    <option value=\"20\">20</option>\r\n                    <option value=\"21\">21</option>\r\n                    <option value=\"22\">22</option>\r\n                    <option value=\"23\">23</option>\r\n                    <option value=\"24\">24</option>\r\n                    <option value=\"25\">25</option>\r\n                    <option value=\"26\">26</option>\r\n                    <option value=\"27\">27</option>\r\n                    <option value=\"28\">28</option>\r\n                    <option value=\"29\">29</option>\r\n                    <option value=\"30\">30</option>\r\n                    <option value=\"31\">31</option>\r\n                  </select>\r\n                  <div *ngIf=\"MeetingDate.invalid && MeetingDate.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Select Meeting date!</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया मीटिंग दिनांक निवडा! </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">BANK NAME</span>\r\n                    <span *ngIf=\"lang.mr\">बँकेचे नांव </span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"text\" (ngModel)=\"BankName\" class=\"form-control\" id=\"BankName\" name=\"BankName\" #BankName=\"ngModel\" required maxlength=\"50\">\r\n                  <div *ngIf=\"BankName.invalid && BankName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <div [hidden]=\"!BankName.hasError('required')\">\r\n                      <span *ngIf=\"lang.en\">Please Enter Bank Name!</span>\r\n                      <span *ngIf=\"lang.mr\">कृपया बँकेचे नांव आवश्यक आहे! </span>\r\n                    </div>\r\n                    <!-- <div [hidden]=\"!BankName.hasError('pattern')\">BankName should be only Letters</div> -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"from-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">BANK AC NO</span>\r\n                    <span *ngIf=\"lang.mr\">\r\n                      बँक खाते क्रमांक\r\n                    </span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"number\" [(ngModel)]=\"BankAccountNumber\" class=\"form-control\" id=\"BankAccountNumber\" name=\"BankAccountNumber\"\r\n                         required #BankAccountNumberhash=\"ngModel\">\r\n                  <div *ngIf=\"BankAccountNumberhash.invalid && BankAccountNumberhash.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Enter Bank Account!</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया बँक खाते क्रमांक आवश्यक आहे! </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"from-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">CONFIRM BANK AC NO</span>\r\n                    <span *ngIf=\"lang.mr\">बँक खाते क्रमांक </span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"text\" [(ngModel)]=\"BankAccountNumber_\" class=\"form-control\" id=\"BankAccountNumber_\" name=\"BankAccountNumber_\"\r\n                         required #BankAccountNumberhash_=\"ngModel\">\r\n                  <div *ngIf=\"BankAccountNumberhash_.invalid && BankAccountNumberhash_.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Enter Confirm Bank Account!</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया बँक खाते क्रमांक आवश्यक आहे! </span>\r\n                  </div>\r\n                  <div *ngIf=\"BankAccountNumber!= BankAccountNumber_\" class=\"alert-danger comman-error-mesage\">\r\n                    Confirm Account Number dose not match with Bank Account Number!\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">BRANCH NAME</span>\r\n                    <span *ngIf=\"lang.mr\">शाखांचे नांव</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"text\" (ngModel)=\"BranchName\" class=\"form-control\" id=\"BranchName\" name=\"BranchName\" required #BranchName=\"ngModel\">\r\n                  <div *ngIf=\"BranchName.invalid && BranchName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Enter Branch Name!</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया बँक खाते क्रमांक आवश्यक आहे! </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">IFSC CODE </span>\r\n                    <span *ngIf=\"lang.mr\">आय.एफ.एस.सी </span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"text\" (ngModel)=\"IFSCCode\" class=\"form-control\" id=\"IFSCCode\" name=\"IFSCCode\" required #IFSCCode=\"ngModel\">\r\n                  <div *ngIf=\"IFSCCode.invalid && IFSCCode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Enter IFSC Code!</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया आय.एफ.एस.सी आवश्यक आहे! </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">BANK ADDRESS</span>\r\n                    <span *ngIf=\"lang.mr\">बँक पत्ता </span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"text\" (ngModel)=\"BankAddress\" class=\"form-control\" id=\"BankAddress\" name=\"BankAddress\" required #BankAddress=\"ngModel\">\r\n                  <div *ngIf=\"BankAddress.invalid && BankAddress.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Bank Address is required!</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया बँक पत्ता आवश्यक आहे! </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <div class=\"form-group\">\r\n                <button type=\"button\" class=\"btn btn-primary\" *ngIf=\"disabled\" [disabled]=\"VOForm.invalid\" (click)=\"createVO(VOForm.value,frDt)\" data-dismiss=\"modal\">\r\n                  <span *ngIf=\"lang.en\">ADD </span>\r\n                  <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                  <span *ngIf=\"lang.en\">CANCEL </span>\r\n                  <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- View Detail VO -->\r\n<div class=\"modal\" id=\"viewVODetailForm\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"viewVODetailForm\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\" style=\"width:1160px\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <h4 class=\"modal-title\" id=\"myModalLabel\">\r\n          <span *ngIf=\"lang.en\"> VIEW VO DETAILS </span>\r\n          <span *ngIf=\"lang.mr\">व्हीओ चा तपशील पहा </span>\r\n        </h4>\r\n      </div>\r\n      <form role=\"form\">\r\n        <div class=\"modal-body\">\r\n          <div>\r\n            <h3>\r\n              <span *ngIf=\"lang.en\"> PERSONAL DETAILS </span>\r\n              <span *ngIf=\"lang.mr\"> वैक्तिक माहिती </span>\r\n            </h3>\r\n          </div>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\"> VO CODE </span>\r\n                  <span *ngIf=\"lang.mr\"> व्हीओ कोड </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\"> VO FUND TYPE </span>\r\n                  <span *ngIf=\"lang.mr\"> व्हीओनिधी माध्यम </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\"> VO NAME </span>\r\n                  <span *ngIf=\"lang.mr\">व्हीओ चे नांव </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">LOGIN USER NAME </span>\r\n                  <span *ngIf=\"lang.mr\">लॉगिन नाव </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">LOGIN PASSWORD </span>\r\n                  <span *ngIf=\"lang.mr\">लॉगिन पासवर्ड </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">MEETING DATE </span>\r\n                  <span *ngIf=\"lang.mr\">मीटिंग दिनांक </span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{{viewData.Code}}</td>\r\n                <td>{{viewData.FundTypeName | uppercase}}</td>\r\n                <td>{{viewData.VOName | uppercase}}</td>\r\n                <td>{{viewData.UserName}}</td>\r\n                <td>{{viewData.Password}}</td>\r\n                <td>{{viewData.MeetingDate}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div>\r\n            <h3>\r\n              <span *ngIf=\"lang.en\">ADDRESS DETAIL </span>\r\n              <span *ngIf=\"lang.mr\"> पत्ता तपशील </span>\r\n            </h3>\r\n          </div>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">ADDRESS</span>\r\n                  <span *ngIf=\"lang.mr\">पत्ता </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">VILLAGE NAME</span>\r\n                  <span *ngIf=\"lang.mr\">गावाचे नांव </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">TALUKA</span>\r\n                  <span *ngIf=\"lang.mr\">तालुका </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">DISTRICT</span>\r\n                  <span *ngIf=\"lang.mr\">जिल्हा </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">PINCODE</span>\r\n                  <span *ngIf=\"lang.mr\">पिनकोड </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">AREA</span>\r\n                  <span *ngIf=\"lang.mr\">क्षेत्र </span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{{viewData.AddressLine1 | uppercase}}</td>\r\n                <td>{{viewData.Village | uppercase}}</td>\r\n                <td>{{viewData.Taluka | uppercase}}</td>\r\n                <td>{{viewData.District | uppercase}}</td>\r\n                <td>{{viewData.PinCode | uppercase}}</td>\r\n                <td>{{viewData.Area | uppercase}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div>\r\n            <h3>\r\n              <span *ngIf=\"lang.en\">BANK DETAIL</span>\r\n              <span *ngIf=\"lang.mr\">बँकेचा तपशील </span>\r\n            </h3>\r\n          </div>\r\n          <table class=\"table table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">PAN CARD NUMBER</span>\r\n                  <span *ngIf=\"lang.mr\"> पॅन कार्ड नंबर </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">VO FORMATION DATE</span>\r\n                  <span *ngIf=\"lang.mr\"> व्हीओ स्थापना दिनांक </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">BANK AC NO</span>\r\n                  <span *ngIf=\"lang.mr\">\r\n                    बँक खाते क्रमांक\r\n                  </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">IFSC CODE </span>\r\n                  <span *ngIf=\"lang.mr\">आय.एफ.एस.सी </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">BANK NAME</span>\r\n                  <span *ngIf=\"lang.mr\">बँकेचे नांव </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">BRANCH NAME</span>\r\n                  <span *ngIf=\"lang.mr\">शाखा नांव </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">BANK ADDRESS</span>\r\n                  <span *ngIf=\"lang.mr\">बँक पत्ता </span>\r\n                </th>\r\n                <!-- <th>SHG FORMATION DATE</th>                                    -->\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>{{viewData.PanCardNumber | uppercase}}</td>\r\n                <td>{{viewData.FormationDate | date :'dd-MMM-yyyy'}}</td>\r\n                <td>{{viewData.BankAccountNumber}}</td>\r\n                <td>{{viewData.IFSCCode | uppercase}}</td>\r\n                <td>{{viewData.BankName | uppercase}}</td>\r\n                <td>{{viewData.BranchName | uppercase}}</td>\r\n                <td>{{viewData.BankAddress | uppercase}}</td>\r\n                <!-- <td>{{shgDetails.DateOfFormation | date :'dd-MMM-yyyy' }}</td>                                    -->\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n      </form>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" id=\"click-button2\" data-dismiss=\"modal\">CLOSE</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/cmrc/vo/vo.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VoComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__vo_model_component__ = __webpack_require__("../../../../../src/app/components/cmrc/vo/vo.model.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_angular_datatables__ = __webpack_require__("../../../../angular-datatables/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__services_reports_exportexcel__ = __webpack_require__("../../../../../src/app/services/reports/exportexcel.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs__ = __webpack_require__("../../../../rxjs/Rx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_rxjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_rxjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14_date_fns_locale_en__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




//import { GlobalAssets } from '../../../environments/Global';











//import {MyDatePickerModule} from 'mydatepicker';
//import { Subject } from 'rxjs';
//import {prototype} from 'jspdf';
var VoComponent = (function () {
    function VoComponent(_cmrcService, _commonService, voModel, _globalURL, _globalVariable, _access_token, exportToExcel, exportToPDF, _voService, _router, lang, globalVariables) {
        this._cmrcService = _cmrcService;
        this._commonService = _commonService;
        this.voModel = voModel;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._access_token = _access_token;
        this.exportToExcel = exportToExcel;
        this.exportToPDF = exportToPDF;
        this._voService = _voService;
        this._router = _router;
        this.lang = lang;
        this.globalVariables = globalVariables;
        this.validusername = false;
        this.disabled = true;
        this.dtTrigger = new __WEBPACK_IMPORTED_MODULE_13_rxjs__["Subject"]();
        //public FormationDate : Date = new Date();
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_14_date_fns_locale_en__,
            //minDate: new Date(Date.now()), // Minimal selectable date
            minDate: new Date("2016-03-03"),
            // maxDate: new Date(Date.now()),  // Maximal selectable date
            barTitleIfEmpty: 'Click to select a date'
        };
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    VoComponent.prototype.ngOnInit = function () {
        this.viewData = {};
    };
    VoComponent.prototype.ngAfterViewInit = function () {
        this.dtTrigger.next();
        this.getVillageKVP();
        this.getVODetails();
        this.getFundType();
    };
    VoComponent.prototype.getNextCode = function (code) {
        var _this = this;
        this._commonService.get(this._globalURL.GET_NEXT_CODE + code + "&parentCode=" + this.globalVariables.cmrcBaseCode)
            .then(function (res) {
            if (res.Status == true) {
                _this.nextCode = res.Data;
                _this.getFundType();
            }
        });
    };
    VoComponent.prototype.checkUserName = function (userName) {
        var _this = this;
        debugger;
        this._voService.get(this._globalURL.GET_CHECK_USERNAME + userName.value, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.validusername = true;
                _this.disabled = false;
                // this.VOForm.valid;
                // this.buttonDisabled = false;
            }
            else {
                _this.validusername = false;
                _this.disabled = true;
                // this.VOForm.invalid;
                // this.buttonDisabled = true;
            }
            // this.showWarningMessage = true;
            // this.message = this._common_message.WarningMsg;
            // setInterval(() => {
            //     this.showWarningMessage = false;
            // }, 5000);
            // this._globalURL.isLoading = false;
        })
            .catch(function (err) {
        });
    };
    VoComponent.prototype.getFundType = function () {
        var _this = this;
        this._cmrcService.get(this._globalURL.GET_FUND_TYPE_KET_VALUE_PAIR, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.getAllFundTypes = res.Data;
            }
        });
    };
    VoComponent.prototype.getVODetails = function () {
        var _this = this;
        this._cmrcService.get(this._globalURL.GET_VO_BY_CMRC, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                //this.reRenderDT();
                _this.vodetails = res.Data;
            }
            _this._globalURL.isLoading = false;
            _this.reRenderDT();
        })
            .catch(function (err) {
            _this.ShowErrormsg = true;
            _this.message = "Record is not created";
            setInterval(function () {
                _this.ShowErrormsg = false;
                _this._globalURL.isLoading = false;
            }, 5000);
        });
    };
    // if(UserName <= 3){
    // this.showerror;
    // }   
    VoComponent.prototype.viewSHGDetail = function (data) {
        this.viewData = data;
    };
    VoComponent.prototype.createVO = function (data, frDt) {
        var _this = this;
        debugger;
        var voname = data.VOName;
        data.Code = this.nextCode;
        data.ParentCode = this.globalVariables.cmrcBaseCode;
        this._globalURL.isLoading = true;
        data.FormationDate = this._commonService.convertToDate(frDt);
        this._cmrcService.post(this._globalURL.POST_CREATE_VO, data, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == undefined) {
                if (res.status === 200) {
                    var data = JSON.parse(res._body);
                    _this._globalURL.isLoading = false;
                    _this.getVODetails();
                    _this.showMessage = true;
                    _this.message = "New VO - " + voname + " created Successfully";
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Record is not create";
                    setInterval(function () {
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            else {
                if (res.Data === "Success") {
                    var data = JSON.parse(res._body);
                    _this._globalURL.isLoading = false;
                    _this.getVODetails();
                    _this.showMessage = true;
                    _this.message = "New VO - " + data.VOName + "Addedd Successfully";
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                }
            }
        })
            .catch(function (err) {
            _this.ShowErrormsg = true;
            _this.message = "Record is not created";
            setInterval(function () {
            }, 5000);
        });
        // let UserName = data.checkUserName;
        // this._cmrcService.get(this._globalURL.GET_CHECK_USERNAME + data.UserName, sessionStorage.getItem("access_token"))
        //     .then((res) => {
        //         if (res.Status == true) {
        //             this.checkUserName = res.Data;
        //             if (res.UserName <= 3) {
        //                 this.showerror;
        //             }
        //             else {
        //                 alert("error");
        //             }
        //         }
        //         else {
        //             alert("error");
        //         }
        //         this._globalURL.isLoading = false;
        //     })
        //     .catch((err) => {
        //         alert("sooory");
        //     })
    };
    VoComponent.prototype.getVillageKVP = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._cmrcService.get(this._globalURL.KVPGET_VILLAGE, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.villagess = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
                _this.message = _this._common_message.WarningMsg;
                _this.showErrorMessage = true;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //Download pdf Anjali 
    VoComponent.prototype.R36_VoExportTopdf = function () {
        this._globalURL.isLoading = true;
        var topData = {
            "cmrcBaseCode": this._globalVariable.cmrcBaseCode,
        };
        this.exportToPDF.R36_VoExportTopdf(this.vodetails, topData);
        this._globalURL.isLoading = false;
    };
    VoComponent.prototype.R36_VoViewExportTopdf = function (data) {
        this._globalURL.isLoading = true;
        this.exportToPDF.R36_VoViewExportTopdf(data);
        this._globalURL.isLoading = false;
    };
    VoComponent.prototype.listOfVoExcel = function () {
        this.exportToExcel.listOfVoExcel(this.vodetails);
    };
    VoComponent.prototype.reRenderDT = function () {
        var _this = this;
        this.dtElement.dtInstance.then(function (dtInstance) {
            dtInstance.destroy();
            _this.dtTrigger.next();
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_8_angular_datatables__["a" /* DataTableDirective */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_8_angular_datatables__["a" /* DataTableDirective */])
    ], VoComponent.prototype, "dtElement", void 0);
    VoComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/cmrc/vo/vo.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_7__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_4__vo_model_component__["a" /* VOMasterModel */],
            __WEBPACK_IMPORTED_MODULE_5__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_9__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_12__services_reports_exportexcel__["a" /* ExportToExcel */],
            __WEBPACK_IMPORTED_MODULE_11__services_reports_exportpdf__["a" /* ExportToPDF */],
            __WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_2__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_10__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_9__environments_GlobalVeriables__["a" /* GlobalVariable */]])
    ], VoComponent);
    return VoComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/cmrc/vo/vo.model.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VOMasterModel; });
var VOMasterModel = (function () {
    function VOMasterModel() {
        this.Id = 0;
        this.VOCode = '';
        this.VOName = '';
        this.Block = '';
        this.Area = '';
        this.Address = '';
        this.Village = '';
        this.Taluka = '';
        this.District = '';
        this.PinCode = '';
        this.PanNumber = '';
        this.FormationDate = '';
        this.BankAccountNumber = '';
        this.BankName = '';
        this.BranchName = '';
        this.IFSCCode = '';
        this.BankAddress = '';
    }
    return VOMasterModel;
}());



/***/ }),

/***/ "../../../../../src/app/components/common.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return LoadingComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return MessageComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ErrorMessageComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return WarningMessageComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

//import{} from '../../'
var LoadingComponent = (function () {
    function LoadingComponent() {
    }
    LoadingComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'loading-selector',
            template: "<div  class=\"loader-wp text-center\">\n    <div class=\"loader-innern    <img src=\"/assets/pdf/loadwait.gif\" class=\"image-set\" style=\"position: fixed;top:50%;height:120px;margin:0 auto;left:47%;width:124px;z-index:99999\">\n    </div>    \n</div>"
        }),
        __metadata("design:paramtypes", [])
    ], LoadingComponent);
    return LoadingComponent;
}());

var MessageComponent = (function () {
    function MessageComponent() {
    }
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", String)
    ], MessageComponent.prototype, "message", void 0);
    MessageComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'message-selector',
            styles: [__webpack_require__("../../../../../src/app/components/app.css")],
            template: "<div class=\"Registration_Success\">\n                <p class=\"SuccessMessage\">\n                <i class=\"fa fa-check-square-o\" aria-hidden=\"true\"></i> {{message}}\n                </p>\n               </div>"
        }),
        __metadata("design:paramtypes", [])
    ], MessageComponent);
    return MessageComponent;
}());

var ErrorMessageComponent = (function () {
    function ErrorMessageComponent() {
    }
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", String)
    ], ErrorMessageComponent.prototype, "message", void 0);
    ErrorMessageComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'error-message-selector',
            styles: [__webpack_require__("../../../../../src/app/components/app.css")],
            template: "<div class=\"Error-Message \">\n                <p class=\"Error_message\">\n                    {{message}}\n                </p>\n               </div>"
        }),
        __metadata("design:paramtypes", [])
    ], ErrorMessageComponent);
    return ErrorMessageComponent;
}());

var WarningMessageComponent = (function () {
    function WarningMessageComponent() {
    }
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", String)
    ], WarningMessageComponent.prototype, "message", void 0);
    WarningMessageComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'warning-message-selector',
            styles: [__webpack_require__("../../../../../src/app/components/app.css")],
            template: "<div class=\"Warning-Message\">\n                <p class=\"Warning_message\">\n                    {{message}}\n                </p>\n               </div>"
        }),
        __metadata("design:paramtypes", [])
    ], WarningMessageComponent);
    return WarningMessageComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/DISTRICT.BaseComponent.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DISTRICTBaseComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var DISTRICTBaseComponent = (function () {
    function DISTRICTBaseComponent(_voService, _globalURL, lang, router) {
        this._voService = _voService;
        this._globalURL = _globalURL;
        this.lang = lang;
        this.router = router;
        this.today = new Date();
    }
    ;
    DISTRICTBaseComponent.prototype.ngOnInit = function () {
    };
    DISTRICTBaseComponent.prototype.setLang = function (lang_) {
        debugger;
        if (lang_ === "en") {
            this.lang.en = true;
            this.lang.mr = false;
        }
        if (lang_ === "mr") {
            this.lang.mr = true;
            this.lang.en = false;
        }
    };
    DISTRICTBaseComponent.prototype.SignOut = function () {
        debugger;
        // sessionStorage.setItem("roleId", null);
    };
    DISTRICTBaseComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/district/index.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_3__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */]])
    ], DISTRICTBaseComponent);
    return DISTRICTBaseComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/dashboard/dashboard.component.html":
/***/ (function(module, exports) {

module.exports = "<section class=\"content-header\">\r\n  <div class=\"col-md-12\" style=\"padding:3px;\">\r\n    <div class=\"col-md-2\">\r\n      <label style=\"font-size:15px\" style=\"float: right\">\r\n        <span> SELECT CMRC</span>\r\n      </label>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n      <select [disabled]=\"isCMRCDashboard\"  class=\"form-control\" (ngModel)=\"cmrcId\" #cmrcId=\"ngModel\" (change)=\"showCMRCDashboard(cmrcId.value)\" id=\"selectCmrc\"\r\n        name=\"selectCmrc\">\r\n        <!-- <option [selected]=\"showCmrcDashbord\"></option> -->\r\n        <option *ngFor=\"let Cmrc of Cmrcs\" [value]=\"Cmrc.Key\">{{Cmrc.Value}}</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n      <button class=\"btn btn-primary\" [disabled]=\"!isCMRCDashboard\" (click)=\"refreshDashboard(2)\">CHANGE CMRC</button>\r\n    </div>\r\n    <div class=\"col-md-2\" style=\"font-size:15px\">\r\n      SELECT VO\r\n    </div>\r\n    <div class=\"col-md-2\">\r\n      <select [disabled]=\"!isCMRCDashboard && isVODashboard\" class=\"form-control\" (ngModel)=\"voId\" #voId=\"ngModel\" id=\"selectVo\" name=\"selectVo\" (change)=\"showVODashboard(voId.value)\">\r\n        <!-- <option [selected]=\"showCmrcDashbord\"></option> -->\r\n        <option *ngFor=\"let Vo of Vos\" [value]=\"Vo.Key\">{{Vo.Value}}</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"col-md-1\">\r\n      <button class=\"btn btn-primary\" [disabled]=\"!isVODashboard\" (click)=\"refreshDashboard(3)\">CHANGE VO</button>\r\n    </div>\r\n  </div>\r\n</section>\r\n<section class=\"content\" style=\"margin-top:40px;\" *ngIf=\"isDistrictDashboard\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-4\">\r\n      <div class=\"box-body box_section\">\r\n        <table class=\"table\" style=\"width:100%\">\r\n          <thead>\r\n            <tr *ngFor=\"let count of shgcount\" style=\"border:1px solid #fff\">\r\n              <th class=\"finance-heading-name\">\r\n                <div class=\"dashboard-finance-details\">\r\n                  <h5>\r\n                    <b>\r\n                      <span>\r\n                        TOTAL\r\n                        <span class=\"text-center\" style=\"margin-top:0px\">{{count.Type | uppercase}} </span>\r\n                      </span>\r\n                    </b>\r\n                  </h5>\r\n                </div>\r\n              </th>\r\n              <th class=\"finance-heading-value\">\r\n                <div class=\"dashboard-finance-details\">\r\n                  <h5>\r\n                    <b>{{count.Count}}</b>\r\n                  </h5>\r\n                </div>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" style=\"margin-top:10px;\">\r\n    <div class=\"col-sm-4\">\r\n      <div class=\"box-body box_section\">\r\n        <table class=\"table\" style=\"width:100%\">\r\n          <tr class=\"dashboard-finance-details\" style=\"border:1px solid #fff\">\r\n            <th>CMRC NAME</th>\r\n            <th>VO COUNT</th>\r\n            <th>SHG COUNT</th>\r\n            <th>MEMBER COUNT</th>\r\n          </tr>\r\n          <tr *ngFor=\"let item of vomembercount\">\r\n            <td>{{item.Name}}</td>\r\n            <td class=\"dashboard-finance-details\" *ngFor=\"let items of item.DashboardCountModel\">{{items.Count}}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<div *ngIf=\"isCMRCDashboard\">\r\n  <cmrc-dashboard></cmrc-dashboard>\r\n</div>\r\n\r\n<div *ngIf=\"isVODashboard\">\r\n  <vo-dashboard></vo-dashboard>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/district/dashboard/dashboard.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DistrictDashboardComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var DistrictDashboardComponent = (function () {
    function DistrictDashboardComponent(_voservice, _access_token, _common_message, _globalURL, _router, lang, globalvariable, commonService, _cmrcservice, exportToPDF) {
        this._voservice = _voservice;
        this._access_token = _access_token;
        this._common_message = _common_message;
        this._globalURL = _globalURL;
        this._router = _router;
        this.lang = lang;
        this.globalvariable = globalvariable;
        this.commonService = commonService;
        this._cmrcservice = _cmrcservice;
        this.exportToPDF = exportToPDF;
        this.showVoOnlyForCMRC = false;
        this.isDistrictDashboard = true;
        this.isCMRCDashboard = false;
        this.isVODashboard = false;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
        this.showCmrcDashbord = false;
        this.showDistrictDashbord = false;
    }
    DistrictDashboardComponent.prototype.ngOnInit = function () {
        this.getCMRCDashboardKVP();
        this.getDistrictCmrcvoshgcount();
        this.getDistrictVoMembercount();
        this.getAllVoShgMemberCount();
    };
    DistrictDashboardComponent.prototype.getCMRCDashboardKVP = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._cmrcservice.get(this._globalURL.GET_KVP_DISTRICT_CMRC_DASHBOARD, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.Cmrcs = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    DistrictDashboardComponent.prototype.getDistrictCmrcvoshgcount = function () {
        var _this = this;
        this.showCmrcDashbord = false;
        this.showDistrictDashbord = true;
        this._cmrcservice.get(this._globalURL.GET_DISTRICT_CMRCVO_SHGMEMBER_COUNT, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.shgcount = res.Data;
            }
            else {
                alert("else");
            }
        })
            .catch(function (err) {
        });
    };
    DistrictDashboardComponent.prototype.getDistrictVoMembercount = function () {
        var _this = this;
        this.showCmrcDashbord = false;
        this.showDistrictDashbord = true;
        this._cmrcservice.get(this._globalURL.GET_DISTRICT_VO_MEMBER_COUNT, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.vomembercount = res.Data;
            }
            else {
                alert("else");
            }
        })
            .catch(function (err) {
        });
    };
    DistrictDashboardComponent.prototype.getVoCountByCmrcId = function (cmrcId) {
    };
    DistrictDashboardComponent.prototype.showVODashboard = function (selectedVoId) {
        sessionStorage.setItem("viewForRoleId", "3");
        sessionStorage.setItem("voId", selectedVoId.toString());
        this._globalURL.get_GET_SHEMEWISE_SHG = selectedVoId.toString();
        this._globalURL.get_TOTAL_SHGANDMEMBER_COUNT = selectedVoId.toString();
        this._globalURL.get_GET_MARRITAL_STATUS_WISE_DATA = selectedVoId.toString();
        this._globalURL.get_GET_AGE_WISE_DATA = selectedVoId.toString();
        this._globalURL.get_GET_LOAN_PURPOSE_WISE_DATA = selectedVoId.toString();
        this._globalURL.get_GET_LOAN_CASTE_WISE_DATA = selectedVoId.toString();
        this._globalURL.get_GET_FINANCE_DETAILS = selectedVoId.toString();
        this._globalURL.get_GET_BALANCESHEET = selectedVoId.toString();
        this._globalURL.get_GET_USER_PROFILE_DETAIL = selectedVoId.toString();
        this.isVODashboard = true;
        this.isCMRCDashboard = false;
        this.isDistrictDashboard = false;
    };
    DistrictDashboardComponent.prototype.showCMRCDashboard = function (cmrcId) {
        var _this = this;
        this.isCMRCDashboard = true;
        this.isDistrictDashboard = false;
        this.isVODashboard = false;
        this._globalURL.isLoading = true;
        this._cmrcservice.get(this._globalURL.GET_VOCOUNT_BYCMRCID + cmrcId, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.Vos = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
        sessionStorage.setItem("viewForRoleId", "2");
        sessionStorage.setItem("cmrcId", cmrcId.toString());
        this._globalURL.get_GET_VO_SHG_MEMBER_COUNT_CMRC = cmrcId.toString();
        //this._globalURL.get_GET_BALANCESHEET = cmrcId.toString();
        this._globalURL.get_GET_USER_PROFILE_DETAIL = cmrcId.toString();
        this._globalURL.get_GET_BALANCESHEET = cmrcId.toString();
        this._globalURL.get_GET_CMRC_FINANCE_DETAILS_BY_DIS = cmrcId.toString();
    };
    //CMRC DASHBOARD - ANJALI
    DistrictDashboardComponent.prototype.getAllVoShgMemberCount = function () {
        var _this = this;
        this.showCmrcDashbord = true;
        this.showDistrictDashbord = false;
        this._cmrcservice.get(this._globalURL.GET_VO_SHG_MEMBER_COUNT_CMRC, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.cmrcCounts = res.Data;
            }
            else {
                alert("else");
            }
        })
            .catch(function (err) {
            //alert("catch block");
        });
    };
    DistrictDashboardComponent.prototype.refreshDashboard = function (role) {
        debugger;
        switch (role) {
            case 2:
                this.isCMRCDashboard = false;
                this.isDistrictDashboard = true;
                this.isVODashboard = false;
                break;
            case 3:
                this.showCMRCDashboard(parseInt(sessionStorage.getItem("cmrcId")));
                //this.isCMRCDashboard = true;
                //this.isDistrictDashboard = false;
                // this.isVODashboard = false;
                break;
        }
    };
    DistrictDashboardComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/district/dashboard/dashboard.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_6__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_7__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_8__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_10__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_9__services_reports_exportpdf__["a" /* ExportToPDF */]])
    ], DistrictDashboardComponent);
    return DistrictDashboardComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/fd/fd.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"showMessage\">\r\n        <message-selector [message]=\"message\">\r\n        </message-selector>\r\n    </div>\r\n    <!-- <div *ngIf=\"ShowErrormsg\">\r\n        <error-message-selector [message]=\"message\">\r\n        </error-message-selector>\r\n    </div> -->\r\n\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-5\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"FDId ==1\">\r\n                        <span *ngIf=\"lang.en\">ACTIVE FDs</span>\r\n                        <span *ngIf=\"lang.mr\"> सक्रिय एफ डी </span>\r\n                    </span>\r\n                    <span *ngIf=\"FDId ==2\">\r\n                        <span *ngIf=\"lang.en\">RETURNED FDs</span>\r\n                        <span *ngIf=\"lang.mr\">परत केलेला एफ डी </span>\r\n                    </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\" style=\"margin-top: -14px;\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <ul class=\"nav navbar-nav item\" style=\"margin-left:5px;\">\r\n                        <li>\r\n                            <a routerLink='/district/fd' (click)=\"getFD(1)\" routerLinkActive=\"active\">\r\n                                <span *ngIf=\"lang.en\">RETURNABLE FD</span>\r\n                                <span *ngIf=\"lang.mr\">परत करण्यायोग्य  एफ डी </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink='/district/fd' (click)=\"getFD(2)\" routerLinkActive=\"active\">\r\n                                <span *ngIf=\"lang.en\">RETURNED FDs</span>\r\n                                <span *ngIf=\"lang.mr\">परत केलेला एफ डी </span>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n\r\n                </div>\r\n                <div class=\"box-body\" style=\"margin-top: -25px;\">\r\n                    <table class=\"table table-bordered common_table\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>FD ID</th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">VO NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">व्हीओ चे नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SHG NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">एस एच जी चे नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">MEMBER NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">सदस्याचे नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">INTEREST AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">व्याज रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TENURE</span>\r\n                                    <span *ngIf=\"lang.mr\">अवधी </span>\r\n                                </th>\r\n                                <th> \r\n                                     <span *ngIf=\"lang.en\">MATURITY DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">अखेरचा  दिवस  </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TOTAL RETURNABLE AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">परतफेड रक्कम </span>\r\n                                </th>\r\n                                <th *ngIf=\"FDId ==1\">\r\n\r\n                                    <span *ngIf=\"lang.en\">UPDATE FD</span>\r\n                                </th>\r\n                                <!-- <th *ngIf=\"FDId ==2\">RETURN FD</th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let getAllFD of fdModel\"  class=\"district_head\">\r\n                                 <td>{{getAllFD.Id}}</td>\r\n                                <td>{{getAllFD.VOName | uppercase}}</td>\r\n                                <td>{{getAllFD.SHGName | uppercase}}</td>                               \r\n                                <td>{{getAllFD.MemberFullName}}</td>    \r\n                                <td>{{getAllFD.Amount}}</td>\r\n                                <td>{{getAllFD.Interest}}</td>\r\n                                <td>{{getAllFD.Tenure}}</td>\r\n                                <td>{{getAllFD.MaturedDate}}</td>\r\n                                <td>{{getAllFD.TotalReturnAmount}}</td>\r\n                                <td>\r\n                                    <span>\r\n                                        <button class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#updateFD\" (click)=\"setUpdate(getAllFD)\">\r\n                                            <span *ngIf=\"lang.en\">UPDATE</span>\r\n                                        </button>\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <!-- <tr>\r\n                                <td>\r\n\r\n                                    <span *ngIf=\"lang.en\">TOTAL</span>\r\n                                    <span *ngIf=\"lang.mr\">एकुण </span>\r\n                                </td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td></td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                            </tr> -->\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div id=\"updateFD\" class=\"modal\" role=\"dialog\">\r\n        <div class=\"modal-dialog\" style=\"width: 552px; margin-top: 57px;\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">\r\n                        UPDATE REQUEST FORM\r\n                    </h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <form class=\"form-horizontal\" #fd=\"ngForm\">\r\n                        <div class=\"form-group\" *ngIf=\"showReturnableFD\">\r\n                            <div class=\"col-md-6\">\r\n                                <label>FD AMOUNT</label>\r\n                                <input type=\"text\" [(ngModel)]=\"fdData.Amount\" name=\"Amount\" id=\"Amount\" class=\"form-control\">\r\n                            </div>\r\n                            <div class=\"col-md-6\" *ngIf=\"showReturnableFD\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> INTEREST RATE</span>\r\n                                    <span *ngIf=\"lang.mr\">व्याज दर </span>\r\n                                </label>\r\n                                <select [(ngModel)]=\"fdData.Interest\" class=\"form-control\" id=\"Interest\" name=\"Interest\">\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                    <option value=\"6\">6</option>\r\n                                    <option value=\"7\">7</option>\r\n                                    <option value=\"8\">8</option>\r\n                                    <option value=\"9\">9</option>\r\n                                    <option value=\"10\">10</option>\r\n                                    <option value=\"11\">11</option>\r\n                                    <option value=\"12\">12</option>\r\n                                    <option value=\"13\">13</option>\r\n                                    <option value=\"14\">14</option>\r\n                                    <option value=\"15\">15</option>\r\n                                    <option value=\"16\">16</option>\r\n                                    <option value=\"17\">17</option>\r\n                                    <option value=\"18\">18</option>\r\n                                    <option value=\"19\">19</option>\r\n                                    <option value=\"20\">20</option>\r\n                                    <option value=\"21\">21</option>\r\n                                    <option value=\"22\">22</option>\r\n                                    <option value=\"23\">23</option>\r\n                                    <option value=\"24\">24</option>\r\n                                    <option value=\"25\">25</option>\r\n                                    <option value=\"26\">26</option>\r\n                                    <option value=\"27\">27</option>\r\n                                    <option value=\"28\">28</option>\r\n                                    <option value=\"29\">29</option>\r\n                                    <option value=\"30\">30</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"col-md-6\" *ngIf=\"showReturnableFD\">\r\n                                <label>TENURE</label>\r\n                                <select [(ngModel)]=\"fdData.Tenure\" class=\"form-control\" id=\"Tenure\" name=\"Tenure\">\r\n                                    <option value=\"6\">6</option>\r\n                                    <option value=\"7\">7</option>\r\n                                    <option value=\"8\">8</option>\r\n                                    <option value=\"9\">9</option>\r\n                                    <option value=\"10\">10</option>\r\n                                    <option value=\"11\">11</option>\r\n                                    <option value=\"12\">12</option>\r\n                                    <option value=\"13\">13</option>\r\n                                    <option value=\"14\">14</option>\r\n                                    <option value=\"15\">15</option>\r\n                                    <option value=\"16\">16</option>\r\n                                    <option value=\"17\">17</option>\r\n                                    <option value=\"18\">18</option>\r\n                                    <option value=\"19\">19</option>\r\n                                    <option value=\"20\">20</option>\r\n                                    <option value=\"21\">21</option>\r\n                                    <option value=\"22\">22</option>\r\n                                    <option value=\"23\">23</option>\r\n                                    <option value=\"24\">24</option>\r\n                                    <option value=\"25\">26</option>\r\n                                    <option value=\"27\">27</option>\r\n                                    <option value=\"28\">28</option>\r\n                                    <option value=\"29\">29</option>\r\n                                    <option value=\"30\">30</option>\r\n                                    <option value=\"31\">31</option>\r\n                                    <option value=\"33\">32</option>\r\n                                    <option value=\"34\">34</option>\r\n                                    <option value=\"35\">35</option>\r\n                                    <option value=\"36\">36</option>\r\n                                </select>\r\n\r\n                            </div>\r\n                            <div class=\"col-md-6\" *ngIf=\"ShowReturnFD\">\r\n                                <label>STATUS</label>\r\n                                <select class=\"form-control\" type=\"text\" [(ngModel)]=\"fdData.Status\" name=\"Status\" id=\"Status\" class=\"form-control\">\r\n                                    <option [value]=1>\r\n                                        <span *ngIf=\"lang.en\">ACTIVE</span>\r\n                                   </option>\r\n                                   <option [value]=2>\r\n                                        <span *ngIf=\"lang.en\">CLOSE</span>\r\n                                    </option>\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"col-md-6\" *ngIf=\"showReturnableFD\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> PAYMENT MODE</span>\r\n                                    <span *ngIf=\"lang.mr\">रक्कम माध्यम </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <select class=\"form-control\" [(ngModel)]=\"fdData.PaymentMode\" name=\"PaymentMode\">\r\n                                    <option [value]=1>\r\n                                        <span *ngIf=\"lang.en\"> CASH IN HAND</span>\r\n                                        <span *ngIf=\"lang.mr\"> रोख रक्कम </span>\r\n                                    </option>\r\n                                    <option [value]=2>\r\n                                        <span *ngIf=\"lang.en\"> CASH AT BANK</span>\r\n                                        <span *ngIf=\"lang.mr\"> बँकेतील रक्कम </span>\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-md-6\" *ngIf=\"showReturnableFD\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\">FD DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> एफ डी दिनांक </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>{{CreatedDate}}\r\n                                <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"CreatedDate\" name=\"CreatedDate\" #frDate [options]=\"options\">\r\n                                </ng-datepicker>\r\n  \r\n                                <!-- <input class=\"form-control\" type=\"date\" [(ngModel)]=\"fdData.CreatedDate\" name=\"CreatedDate\">  -->\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button class=\"btn btn-primary\" (click)=\"confirmUpdate(fd)\" data-dismiss=\"modal\">Yes</button>\r\n                                <button class=\"btn btn-default\" data-dismiss=\"modal\" style=\"float:right\"> CANCEL</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/district/fd/fd.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DistrictFDComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_district_services__ = __webpack_require__("../../../../../src/app/services/district.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__fd_model_component__ = __webpack_require__("../../../../../src/app/components/district/fd/fd.model.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var DistrictFDComponent = (function () {
    function DistrictFDComponent(districtService, _router, lang, _access_token, _globalURL, _globalVariable, _commonService, _commonMessage, fdData) {
        this.districtService = districtService;
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._commonService = _commonService;
        this._commonMessage = _commonMessage;
        this.fdData = fdData;
        this.CreatedDate = new Date();
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__,
            //minDate: new Date(Date.now()), // Minimal selectable date
            minDate: new Date("2016-03-03"),
            //maxDate: new Date(Date.now()),  // Maximal selectable date
            barTitleIfEmpty: 'Click to select a date'
        };
        if (sessionStorage.getItem("access_token") == "")
            _router.navigate(['../login']);
    }
    DistrictFDComponent.prototype.ngOnInit = function () {
        this.getFD(1);
    };
    DistrictFDComponent.prototype.getFD = function (status) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this.FDId = null;
        this.FDId = status;
        this.fdModel = [];
        this.districtService.get((this._globalURL.GET_FD + this.FDId), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.fdModel = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                //this.ShowErrormsg = true;
                //this.message = "Record is not Available";
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        });
    };
    DistrictFDComponent.prototype.setUpdate = function (fdDetail) {
        this.fdData = fdDetail;
        if (this.FDId == 1) {
            this.ShowReturnFD = false;
            this.showReturnableFD = true;
        }
        if (this.FDId == 2) {
            this.ShowReturnFD = true;
            this.showReturnableFD = false;
        }
    };
    DistrictFDComponent.prototype.confirmUpdate = function (Data) {
        var _this = this;
        debugger;
        // let CreatedDate = this._commonService.convertToDate(frDt);
        //  Data.value.CreatedDate = this._commonService.convertToDate(frDate);    
        Data.value.Id = this.fdData.Id;
        var updata = {};
        this.districtService.post(this._globalURL.UPDATE_DISTRICT_FD_DETAILS, Data.value, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == 401) {
                // this._commonMessage.tokenexpiremsg;
            }
            if ((res.status) == undefined) {
            }
            else {
                if (res.status === 200) {
                    debugger;
                    Data.control.reset();
                    _this._globalURL.isLoading = false;
                    _this.message = _this._commonMessage.UpdateMsg;
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getFD(1);
                }
                else {
                }
            }
        }).catch(function (res) {
        });
    };
    DistrictFDComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_7__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/district/fd/fd.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__services_district_services__["a" /* DISTRICTService */],
            __WEBPACK_IMPORTED_MODULE_0__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_1__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_4__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_5__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_10__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_8__fd_model_component__["a" /* FDMasterModel */]])
    ], DistrictFDComponent);
    return DistrictFDComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/fd/fd.model.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FDMasterModel; });
var FDMasterModel = (function () {
    function FDMasterModel() {
    }
    return FDMasterModel;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/fund/fund.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div> \r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<!-- <div *ngIf=\"ShowErrormsg\">\r\n        <error-message-selector [message]=\"message\">\r\n        </error-message-selector>\r\n    </div> -->\r\n\r\n\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-4\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\"> FUND DETAILS FORM</span>\r\n                    <span *ngIf=\"lang.mr\"> फंडचे तपशील फॉर्म </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                <ul class=\"nav navbar-nav item\" style=\"margin-left:5px;\">\r\n                    <li>\r\n                        <a routerLink='/district/fund'>\r\n                            <span *ngIf=\"lang.en\" (click)=\"getFund(1)\"> NEW FUND REQUEST</span>\r\n                            <span *ngIf=\"lang.mr\">नवीन फंडसाठी विनंती</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a (click)=\"getFund(2)\">\r\n                            <span *ngIf=\"lang.en\"> APPROVED FUNDS</span>\r\n                            <span *ngIf=\"lang.mr\">मंजूर फंड</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n                    <table datatable class=\"row-border hover table-bordered common_table\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">FUND ID</span>\r\n                                    <span *ngIf=\"lang.mr\">फंड आय डी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> VO</span>\r\n                                    <span *ngIf=\"lang.mr\"> व्हीओ </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">REQUESTED AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\"> मागणी रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">FUND REASON</span>\r\n                                    <span *ngIf=\"lang.mr\">निधी कारण </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">REQUESTED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> मागणी दिनांक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">APPROVED AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">मंजूर रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">APPROVED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">मंजूर दिनांक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">FUND TYPE</span>\r\n                                    <span *ngIf=\"lang.mr\">फंड माध्यम </span>\r\n                                </th>\r\n                                <th *ngIf=\"fundTypeId ==2\">\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                                <th *ngIf=\"fundTypeId ==2\">\r\n                                    <span *ngIf=\"lang.en\">DOWNLOAD</span>\r\n                                    <span *ngIf=\"lang.mr\"> डाऊनलोड </span>\r\n                                </th>\r\n                                <th>UPDATE</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let fundDetail of fundModel\" class=\"district_head\">\r\n                                <td>{{fundDetail.Id}}</td>\r\n                                <td>{{fundDetail.ToVOName}}</td>\r\n\r\n                                <td>\r\n                                    {{fundDetail.RequestAmount}}\r\n                                </td>\r\n                                <td>\r\n                                    {{fundDetail.FundReason}}\r\n                                </td>\r\n                                <td>\r\n                                    {{fundDetail.RequestDate}}\r\n                                </td>\r\n                                <td>\r\n                                    {{fundDetail.ApproveAmount}}\r\n                                </td>\r\n                                <td>\r\n                                    {{fundDetail.ApproveDate}}\r\n                                </td>\r\n                                <td>\r\n                                    {{fundDetail.FundType}}\r\n                                </td>\r\n                                <td>\r\n                                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#udpateFundForm\" (click)=\"setUpdate(fundDetail)\"\r\n                                        style=\"float:left;margin-top:7px;\">\r\n                                        UPDATE\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div id=\"udpateFundForm\" class=\"modal\" role=\"dialog\">\r\n        <div class=\"modal-dialog\" style=\"width: 552px; margin-top: 57px;\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">\r\n                        UPDATE REQUEST FORM\r\n                    </h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <form  #fund =\"ngForm\" class=\"form-horizontal\">\r\n                        <div class=\"form-group\">\r\n                            <div class=\"col-md-6\" *ngIf=\"showType1\">\r\n                                <label >REQUEST AMOUNT</label>\r\n                                <input type=\"text\" [(ngModel)]=\"fundData.RequestAmount\" name=\"RequestAmount\" id=\"RequestAmount\"  class=\"form-control\" required maxlength=\"7\" #RequestAmountName=\"ngModel\">\r\n                                <div *ngIf=\"RequestAmountName.invalid && RequestAmountName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <div [hidden]=\"!RequestAmountName.hasError('required')\" class=\"msgright\">\r\n                                        <span *ngIf=\"lang.en\">Request Amount is required</span>\r\n                                        <span *ngIf=\"lang.mr\">विनंतीची रक्कम आवश्यक आहे</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\" *ngIf=\"showType1\">\r\n                                <label >FUND REASON</label>\r\n                                <input type=\"text\" [(ngModel)]=\"fundData.FundReason\" name=\"FundReason\" id=\"FundReason\" class=\"form-control\" required #FundReasonName=\"ngModel\">\r\n                                <div *ngIf=\"FundReasonName.invalid && FundReasonName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <div [hidden]=\"!FundReasonName.hasError('required')\" class=\"msgright\">\r\n                                        <span *ngIf=\"lang.en\">Fund Reason is required</span>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <div class=\"col-md-6\" *ngIf=\"showType2\">\r\n                                <label >APPROVE AMOUNT</label>\r\n                                <input type=\"text\" [(ngModel)]=\"fundData.ApproveAmount\" id=\"ApproveAmount\" name=\"ApproveAmount\" class=\"form-control\" required #ApproveAmountName=\"ngModel\">\r\n                                <div *ngIf=\"ApproveAmountName.invalid && ApproveAmountName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <div [hidden]=\"!ApproveAmountName.hasError('required')\" class=\"msgright\">\r\n                                        <span *ngIf=\"lang.en\">Approve Amount is required</span>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\" *ngIf=\"showType2\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> INTEREST RATE</span>\r\n                                    <span *ngIf=\"lang.mr\">व्याज दर </span>\r\n                                </label>\r\n                                <select (ngModel)=\"fundData.InterestRate\" class=\"form-control\" id=\"InterestRate\" name=\"InterestRate\" required #InterestRate=\"ngModel\">\r\n                                  <option value=\"1\">1</option>\r\n                                  <option value=\"2\">2</option>\r\n                                  <option value=\"3\">3</option>\r\n                                  <option value=\"4\">4</option>\r\n                                  <option value=\"5\">5</option>\r\n                                  <option value=\"6\">6</option>\r\n                                  <option value=\"7\">7</option>\r\n                                  <option value=\"8\">8</option>\r\n                                  <option value=\"9\">9</option>\r\n                                  <option value=\"10\">10</option>\r\n                                  <option value=\"11\">11</option>\r\n                                  <option value=\"12\">12</option>\r\n                                  <option value=\"13\">13</option>\r\n                                  <option value=\"14\">14</option>\r\n                                  <option value=\"15\">15</option>\r\n                                  <option value=\"16\">16</option>\r\n                                  <option value=\"17\">17</option>\r\n                                  <option value=\"18\">18</option>\r\n                                  <option value=\"19\">19</option>\r\n                                  <option value=\"20\">20</option>\r\n                                  <option value=\"21\">21</option>\r\n                                  <option value=\"22\">22</option>\r\n                                  <option value=\"23\">23</option>\r\n                                  <option value=\"24\">24</option>\r\n                                  <option value=\"25\">25</option>\r\n                                  <option value=\"26\">26</option>\r\n                                  <option value=\"27\">27</option>\r\n                                  <option value=\"28\">28</option>\r\n                                  <option value=\"29\">29</option>\r\n                                  <option value=\"30\">30</option>\r\n                                </select>\r\n                                <div *ngIf=\"InterestRate.invalid && InterestRate.touched\" class=\"alert-danger comman-error-mesage\">\r\n\r\n                                    <span *ngIf=\"lang.en\"> Please Select Interest rate !</span>\r\n                                    <span *ngIf=\"lang.mr\">कृपया व्याज दर निवडा ! </span>\r\n                                  </div>\r\n                              </div>\r\n                        </div>\r\n                        <div class=\"form-group\" *ngIf=\"showType2\">\r\n                            <div class=\"col-md-6\" *ngIf=\"showType2\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\">FUND APPROVED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">रक्कम मंजूर दिनांक </span>\r\n                                    <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                                </label>\r\n                               \r\n                                <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"ApprovedDate\"  [options]=\"options\" name=\"ApprovedDate\">\r\n                                </ng-datepicker>  \r\n                                        \r\n                                <!-- <input type=\"date\" [(ngModel)]=\"fundData.ApprovedDate\" class=\"form-control\" id=\"ApprovedDate\" required name=\"ApprovedDate\" #ApprovedDate=\"ngModel\"> -->\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> PAYMENT MODE</span>\r\n                                    <span *ngIf=\"lang.mr\">रक्कम माध्यम </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <select class=\"form-control\" [(ngModel)]=\"fundData.PaymentMode\" name=\"PaymentMode\" required #PaymentMode=\"ngModel\">\r\n                                    <option [value]=1>\r\n                                        <span *ngIf=\"lang.en\"> CASH IN HAND</span>\r\n                                        <span *ngIf=\"lang.mr\"> रोख रक्कम </span>\r\n                                    </option>\r\n                                    <option [value]=2>\r\n                                        <span *ngIf=\"lang.en\"> CASH AT BANK</span>\r\n                                        <span *ngIf=\"lang.mr\"> बँकेतील रक्कम </span>\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button class=\"btn btn-primary\" (click)=\"confirmUpdate(fund)\" data-dismiss=\"modal\">Yes</button>\r\n                                <button class=\"btn btn-default\" data-dismiss=\"modal\" style=\"float:right\"> CANCEL</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/district/fund/fund.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DistrictFundComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_district_services__ = __webpack_require__("../../../../../src/app/services/district.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__fund_model_component__ = __webpack_require__("../../../../../src/app/components/district/fund/fund.model.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var DistrictFundComponent = (function () {
    function DistrictFundComponent(districtService, _globalURL, _access_Token, _router, lang, _commonService, _commonMessage, _globalVariable, fundData) {
        this.districtService = districtService;
        this._globalURL = _globalURL;
        this._access_Token = _access_Token;
        this._router = _router;
        this.lang = lang;
        this._commonService = _commonService;
        this._commonMessage = _commonMessage;
        this._globalVariable = _globalVariable;
        this.fundData = fundData;
        this.showType1 = true;
        this.showType2 = true;
        this.ApprovedDate = new Date();
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__,
            //minDate: new Date(Date.now()), // Minimal selectable date
            minDate: new Date("2016-03-03"),
            //maxDate: new Date(Date.now()),  // Maximal selectable date
            barTitleIfEmpty: 'Click to select a date'
        };
        this.fundTypeId = 1;
        if (sessionStorage.getItem("access_token") == "")
            _router.navigate(['../login']);
    }
    DistrictFundComponent.prototype.ngOnInit = function () {
        this.getFund(1);
    };
    DistrictFundComponent.prototype.getFund = function (status) {
        var _this = this;
        debugger;
        this.fundTypeId = status;
        if (status == 1) {
            this.showType1 = true;
            this.showType2 = false;
        }
        if (status == 2) {
            this.showType2 = true;
            this.showType1 = false;
        }
        this.districtService.get((this._globalURL.GET_DISTRICT_FUND_DETAILS + status), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.fundModel = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    DistrictFundComponent.prototype.setUpdate = function (fundDetail) {
        this.fundData = fundDetail;
        if (this.fundTypeId == 1) {
            this.showType1 = true;
            this.showType2 = false;
        }
        if (this.fundTypeId == 2) {
            this.showType2 = true;
            this.showType1 = false;
        }
    };
    DistrictFundComponent.prototype.confirmUpdate = function (Data) {
        var _this = this;
        // let data = this.fundData;         
        debugger;
        Data.value.Id = this.fundData.Id;
        var updata = {};
        // data.ApprovedDate = this._commonService.convertToDate(frDt); 
        //   let ApprovedDate = this._commonService.convertToDate(frDt);
        this.districtService.post(this._globalURL.UPDATE_DISTRICT_FUND_DETAILS, Data.value, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == 401) {
            }
            if ((res.status) == undefined) {
            }
            else {
                if (res.status === 200) {
                    Data.control.reset();
                    _this._globalURL.isLoading = false;
                    _this.message = _this._commonMessage.UpdateMsg;
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getFund(1);
                }
                else {
                }
            }
        }).catch(function (res) {
        });
    };
    DistrictFundComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/district/fund/fund.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__services_district_services__["a" /* DISTRICTService */],
            __WEBPACK_IMPORTED_MODULE_1__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_4__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_5__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_2__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_6__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_10__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_8__fund_model_component__["a" /* FundMasterModel */]])
    ], DistrictFundComponent);
    return DistrictFundComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/fund/fund.model.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FundMasterModel; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var FundMasterModel = (function () {
    function FundMasterModel() {
        this.Id = 0;
        this.DistrictUserId = 0;
        this.DistrictUserName = '';
        this.FromCMRCId = 0;
        this.FromCMRCName = '';
        this.ToVOId = 0;
        this.ToVOName = '';
        this.PaymentMode = '';
        this.RequestAmount = 0;
        this.InterestRate = '';
        this.Tenure = 0;
        this.FundType = '';
        this.RequestDate = '';
        this.ApproveDate = '';
        this.CreatedBy = '';
        this.CreatedDate = '';
        this.UpdatedBy = '';
        this.UpdatedDate = '';
        this.ApproveAmount = '';
        this.Status = '';
        this.FundTypeId = '';
        this.BankReceiptPhotoURL = '';
        this.CheckReceiptPhotoURL = '';
        this.FundReason = '';
        this.PrincipleAmountPaidTillDate = '';
        this.PrincipleRemainingAmtToPay = '';
        this.InterestAmountPaidTillDate = '';
        this.InterestRemainingAmtToPay = '';
    }
    FundMasterModel = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [])
    ], FundMasterModel);
    return FundMasterModel;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/index.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n    <header class=\"main-header\" style=\"position:fixed;\">\r\n        <a class=\"logo\" style=\"background-color:#3c8dbc;\">\r\n            <span class=\"logo-mini\">\r\n                <b>A</b>LT</span>\r\n            <span class=\"logo-lg\">\r\n                <span> &nbsp;DISTRICT DETAILS </span>\r\n            </span>\r\n        </a>\r\n        <nav role=\"navigation\" class=\"navbar navbar-fixed-top\">\r\n            <div class=\"container-fluid\" style=\"padding-right:0px;padding-left:0px;\">\r\n                <!-- <div class=\"navbar-header\">\r\n                    <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\" style=\"float:right;background-color:#fff;color:black\">\r\n                        <span class=\"icon-bar\"></span>\r\n                        <span class=\"icon-bar\"></span>\r\n                        <span class=\"icon-bar\"></span>\r\n                    </button>\r\n                </div> -->\r\n                <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3\">\r\n                            <a href=\"#\" class=\"sidebar-toggle\" data-toggle=\"push-menu\" role=\"button\">\r\n                                <span class=\"sr-only\">Toggle navigation</span>\r\n                            </a>\r\n                        </div>\r\n                        <!-- <div class=\"col-md-3 col-md-offset-3\" style=\"margin-top:12px;\">\r\n                            <label>\r\n                                <input type=\"radio\" #selectEnLang value=\"en\" name=\"lang\" [checked]=\"lang.en\" (click)=\"setLang(selectEnLang.value)\">English</label>\r\n                            <label>\r\n                                <input type=\"radio\" #selectMrLang value=\"mr\" name=\"lang\" [checked]=\"lang.mr\" (click)=\"setLang(selectMrLang.value)\">मराठी</label>\r\n                        </div> -->\r\n                        <div class=\"col-md-3 col-md-offset-6\">\r\n                            <div class=\"navbar-custom-menu\">\r\n                                <ul class=\"nav navbar-nav\">\r\n                                    <li class=\"dropdown user\">\r\n                                        <a class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                                            <img src=\"dist/img/user2-160x160.jpg\" class=\"user-image\" alt=\"\">\r\n                                            <span class=\"hidden-xs\">\r\n                                                <a href=\"#\">\r\n                                                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f5/Reset_button.svg/737px-Reset_button.svg.png\" width=\"20px;\">\r\n                                                </a>\r\n                                            </span>\r\n                                        </a>\r\n                                        <ul class=\"dropdown-menu\" style=\"min-width: 102px;\">\r\n                                            <li>\r\n                                                <div class=\"text-center\">\r\n                                                    <div class=\"pull-right\">\r\n                                                        <a routerLink='/login'>\r\n                                                            <button class=\"sign_out\" style=\"margin:4px\">SIGN OUT</button>\r\n                                                        </a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </nav>\r\n    </header>\r\n    <!-- Left side column. contains the logo and sidebar -->\r\n    <aside class=\"main-sidebar\">\r\n        <!-- sidebar: style can be found in sidebar.less -->\r\n        <section class=\"sidebar\">\r\n            <!-- Sidebar user panel -->\r\n            <div class=\"user-panel\">\r\n                <div class=\"pull-left image\">\r\n                    <img src=\"dist/img/user2-160x160.jpg\" class=\"img-circle\" alt=\"\">\r\n                </div>\r\n                <div class=\"pull-left info\">\r\n\r\n                    <!-- <a ><i class=\"fa fa-circle text-success\"></i> Online</a> -->\r\n                </div>\r\n            </div>\r\n            <!-- search form -->\r\n            <form action=\"#\" method=\"get\" class=\"sidebar-form\">\r\n                <div class=\"input-group\" style=\"color:white;\">\r\n                    {{today | date :'short'}}\r\n                </div>\r\n            </form>\r\n            <!-- /.search form -->\r\n            <!-- sidebar menu: : style can be found in sidebar.less -->\r\n            <ul class=\"sidebar-menu\" data-widget=\"tree\" style=\"height:100%\">\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"dashbord\">\r\n                        <i class=\"fa fa-table\" aria-hidden=\"true\"></i>\r\n                        <span>DASHBOARD</span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"fund\">\r\n                        <i class=\"fa fa-columns\" aria-hidden=\"true\"></i>\r\n                       <span>FUND MANAGEMENT</span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"fd\">\r\n                        <i class=\"fa fa-level-up\" aria-hidden=\"true\"></i>\r\n                        <span>FD MANAGEMENT</span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"loan\">\r\n                        <i class=\"fa fa-book\" aria-hidden=\"true\"></i>\r\n                       <span> LOAN MANAGEMENT</span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"memShare\">\r\n                        <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                        <span>MEMBER SHARE</span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"otherIncome\">\r\n                        <i class=\"fa fa-handshake-o\" aria-hidden=\"true\"></i>\r\n                        <span>OTHER INCOME</span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"shg\">\r\n                        <i class=\"fa fa-handshake-o\" aria-hidden=\"true\"></i>\r\n                        <span>SHG</span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"member\">\r\n                        <i class=\"fa fa-handshake-o\" aria-hidden=\"true\"></i>\r\n                        <span>MEMBER</span>\r\n                    </a>\r\n                </li>\r\n\r\n\r\n            </ul>\r\n        </section>\r\n        <!-- /.sidebar -->\r\n    </aside>\r\n    <!-- Content Wrapper. Contains page content -->\r\n    <div class=\"content-wrapper\" style=\"margin-top:42px;\">\r\n        <!-- /.content -->\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n    <!-- /.content-wrapper -->\r\n\r\n    <!-- Control Sidebar -->\r\n    <aside class=\"control-sidebar control-sidebar-dark\">\r\n        <!-- Create the tabs -->\r\n        <ul class=\"nav nav-tabs nav-justified control-sidebar-tabs\">\r\n            <li>\r\n                <a data-toggle=\"tab\">\r\n                    <i class=\"fa fa-home\"></i>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a data-toggle=\"tab\">\r\n                    <i class=\"fa fa-gears\"></i>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n        <!-- Tab panes -->\r\n\r\n    </aside>\r\n    <!-- /.control-sidebar -->\r\n    <!-- Add the sidebar's background. This div must be placed\r\n             immediately after the control sidebar -->\r\n    <div class=\"control-sidebar-bg\"></div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/district/loan/loan.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<!-- <div *ngIf=\"ShowErrormsg\">\r\n        <error-message-selector [message]=\"message\">\r\n        </error-message-selector>\r\n    </div> -->\r\n\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-5\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\"> LOAN MANGEMENT FORM</span>\r\n                    <span *ngIf=\"lang.mr\">कर्ज व्यवस्थापन फॉर्म </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<div class=\"col-md-12\">\r\n    <div>\r\n        <!-- <h4 class=\"loan_detail\">MEMBERS LOAN DETAILS</h4> -->\r\n        <label style=\"font-size:19px\">\r\n            <span *ngIf=\"selectedLoanStatus ==2\">\r\n                <span *ngIf=\"lang.en\"> NEW LOAN REQUEST DETAILS</span>\r\n                <span *ngIf=\"lang.mr\">नवीन कर्जासाठी विनंती तपशील </span>\r\n            </span>\r\n            <span *ngIf=\"selectedLoanStatus ==1\">\r\n                <span *ngIf=\"lang.en\"> APPROVED LOANS DETAILS</span>\r\n                <span *ngIf=\"lang.mr\">कर्ज मंजूर तपशील </span>\r\n            </span>\r\n            <span *ngIf=\"selectedLoanStatus ==4\">\r\n                <span *ngIf=\"lang.en\"> REJECTED LOANS DETAILS</span>\r\n                <span *ngIf=\"lang.mr\">रद्द केलेले कर्ज तपशील</span>\r\n            </span>\r\n            <span *ngIf=\"selectedLoanStatus ==3\">\r\n                <span *ngIf=\"lang.en\"> CLOSED LOANS DETAILS</span>\r\n                <span *ngIf=\"lang.mr\"> कर्ज बंद तपशील </span>\r\n            </span>\r\n        </label>\r\n    </div>\r\n    <div class=\"box box-default\">\r\n        <div class=\"box-body\">\r\n            <nav class=\"navbar navbar-default\">\r\n                <ul class=\"nav navbar-nav item\">\r\n                    <li class=\"\">\r\n                        <a (click)=\"loanSHGLoanDataByStaus(2)\" routerLinkActive=\"active\">\r\n                            <span *ngIf=\"lang.en\"> NEW LOAN REQUEST</span>\r\n                            <span *ngIf=\"lang.mr\">नवीन कर्ज विनंती </span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a (click)=\"loanSHGLoanDataByStaus(1)\" routerLinkActive=\"active\">\r\n                            <span *ngIf=\"lang.en\"> APPROVED LOANS</span>\r\n                            <span *ngIf=\"lang.mr\">मंजूर कर्ज </span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a (click)=\"loanSHGLoanDataByStaus(4)\" routerLinkActive=\"active\">\r\n                            <span *ngIf=\"lang.en\"> REJECTED LOANS</span>\r\n                            <span *ngIf=\"lang.mr\">रद्द केलेले कर्ज</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a (click)=\"loanSHGLoanDataByStaus(3)\" routerLinkActive=\"active\">\r\n                            <span *ngIf=\"lang.en\"> CLOSED LOANS</span>\r\n                            <span *ngIf=\"lang.mr\">बंद केलेले कर्ज </span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"memberLoanDetails.length >=0\">\r\n        <div class=\"box box-default\">\r\n            <div class=\"box-body\">\r\n                <table class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>\r\n                                <span *ngIf=\"lang.en\"> LOAN ID</span>\r\n                                <span *ngIf=\"lang.mr\">कर्ज आयडी </span>\r\n                            </th>\r\n                            <th>\r\n                                <span *ngIf=\"lang.en\"> MEMBER NAME</span>\r\n                                <span *ngIf=\"lang.mr\">सदस्याचे नाव </span>\r\n                            </th>\r\n                            <th>\r\n                                <span *ngIf=\"lang.en\"> DOWNLOAD FORM</span>\r\n                                <span *ngIf=\"lang.mr\">डाऊनलोड फॉर्म </span>\r\n                            </th>\r\n                            <th>\r\n                                <span *ngIf=\"lang.en\"> SHG NAME</span>\r\n                                <span *ngIf=\"lang.mr\">एसएचजी चे नाव </span>\r\n                            </th>\r\n                            <th *ngIf=\"selectedLoanStatus != globalVariable.APPROVED_LOAN\">\r\n                                <span *ngIf=\"lang.en\"> LOAN AMOUNT</span>\r\n                                <span *ngIf=\"lang.mr\">कर्जाची रक्कम </span>\r\n                            </th>\r\n                            <th *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN || selectedLoanStatus == globalVariable.CLOSED_LOAN\">\r\n\r\n                                <span *ngIf=\"lang.en\"> LOAN APPROVED AMOUNT</span>\r\n                                <span *ngIf=\"lang.mr\">कर्ज मंजूर केलेली रक्कम </span>\r\n                            </th>\r\n                            <!-- <th>REMAINING AMT TO ADD</th> -->\r\n                            <th>\r\n                                <span *ngIf=\"lang.en\"> LOAN REASON</span>\r\n                                <span *ngIf=\"lang.mr\">कर्जाचे कारण </span>\r\n                            </th>\r\n                            <th *ngIf=\"selectedLoanStatus == globalVariable.REJECTED_LOAN\">\r\n                                <span *ngIf=\"lang.en\"> REJECTED REASON</span>\r\n                                <span *ngIf=\"lang.mr\">नकाराचे कारण </span>\r\n                            </th>\r\n                            <th *ngIf=\"selectedLoanStatus == globalVariable.NEW_LOAN || selectedLoanStatus == globalVariable.CLOSED_LOAN\">\r\n                                <span *ngIf=\"lang.en\"> REQUEST DATE</span>\r\n                                <span *ngIf=\"lang.mr\">विनंती दिनांक </span>\r\n                            </th>\r\n                            <th *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN || selectedLoanStatus == globalVariable.CLOSED_LOAN\">\r\n                                <span *ngIf=\"lang.en\"> APPROVED DATE</span>\r\n                                <span *ngIf=\"lang.mr\">मंजुरी दिनांक </span>\r\n                            </th>\r\n                            <th *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN\">\r\n                                <span *ngIf=\"lang.en\"> END DATE</span>\r\n                                <span *ngIf=\"lang.mr\">शेवटचा दिनांक </span>\r\n                            </th>\r\n                            <th *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN\">\r\n                                <span *ngIf=\"lang.en\"> RUNNING INSTALLMENT</span>\r\n                                <span *ngIf=\"lang.mr\">चालू हफ्ता </span>\r\n                            </th>\r\n                            <th *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN\">\r\n                                <span *ngIf=\"lang.en\"> REPAYMENT</span>\r\n                                <span *ngIf=\"lang.mr\">परतफेड </span>\r\n                            </th>\r\n                            <th>\r\n                                <span *ngIf=\"lang.en\">UPDATE LOAN</span>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let memberLoanDetail of memberLoanDetails\">\r\n                            <td>{{memberLoanDetail.LoanId}}</td>\r\n                            <td>{{memberLoanDetail.MemberFirstName + \" \" + memberLoanDetail.MemberLastName | uppercase}}\r\n                            </td>\r\n                            <td>\r\n                                <span *ngIf=\"memberLoanDetail.Photo == null\">\r\n                                    <img src=\"https://cdn3.iconfinder.com/data/icons/abstract-1/512/no_image-512.png\" width=\"45px\">\r\n                                </span>\r\n                                <span *ngIf=\"memberLoanDetail.Photo != null\">\r\n                                    <a target=\"_blank\" href=\"{{memberLoanDetail.Photo}}\" class=\"btn btn-primary\">LOAN FORM</a>\r\n                                </span>\r\n                            </td>\r\n                            <td>{{memberLoanDetail.SHGName | uppercase}} {{NEW_LOAN}}</td>\r\n                            <td *ngIf=\"selectedLoanStatus != globalVariable.APPROVED_LOAN\">{{memberLoanDetail.LoanAmount | currency: 'INR'}}</td>\r\n                            <td *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN || selectedLoanStatus == globalVariable.CLOSED_LOAN\">{{memberLoanDetail.LoanApprovedAmount | currency: 'INR'}}</td>\r\n                            <!-- <td *ngIf=\"memberLoanDetail.LoanApprovedAmount < memberLoanDetail.LoanAmount\">{{memberLoanDetail.LoanApprovedAmount - memberLoanDetail.LoanAmount}}\r\n                            <button class=\"btn btn-primary\" (click)=\"AddRemainingToOutstanding(memberLoanDetail.LoanId)\"></button>\r\n                        </td> -->\r\n                            <td>{{memberLoanDetail.LoanReason | uppercase}}</td>\r\n                            <th *ngIf=\"selectedLoanStatus == globalVariable.REJECTED_LOAN\">{{memberLoanDetail.RejectReason}}</th>\r\n                            <td *ngIf=\"selectedLoanStatus == globalVariable.NEW_LOAN\">{{memberLoanDetail.RequestDate | date: 'dd-MMM-yyyy'}}</td>\r\n                            <td *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN || selectedLoanStatus == globalVariable.CLOSED_LOAN\">{{memberLoanDetail.ApprovedDate | date: 'dd-MMM-yyyy'}}</td>\r\n                            <td *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN\">{{memberLoanDetail.LoanEndDate | date}}</td>\r\n                            <td *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN\"># {{memberLoanDetail.CurrentInstallment}}</td>\r\n                            <td *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN\">\r\n                                <button class=\"btn btn-primary\" (click)=\"naviagetToRepayment(memberLoanDetail.LoanId, memberLoanDetail.LoanAmount)\">Show Repayment</button>\r\n                                <!-- </span> -->\r\n                            </td>\r\n                            <td>\r\n                                <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#udpateLoanForm\" (click)=\"setUpdate(memberLoanDetail)\"\r\n                                    style=\"float:left;margin-top:7px;\">\r\n                                    UPDATE\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n        <div id=\"udpateLoanForm\" class=\"modal\" role=\"dialog\">\r\n            <div class=\"modal-dialog\" style=\"width: 552px; margin-top: 57px;\">\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        <h4 class=\"modal-title\">\r\n                            UPDATE LOAN FORM\r\n                        </h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <form class=\"form-horizontal\" #updateLoanForm=\"ngForm\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"col-md-6\">\r\n                                        <label for=\"text\" >\r\n                                                <span *ngIf=\"lang.en\"> INTEREST RATE</span>\r\n                                                <span *ngIf=\"lang.mr\">व्याज दर </span>\r\n                                      </label>\r\n                                    <select [(ngModel)]=\"LoanData.Interest\" class=\"form-control\" id=\"Interest\" name=\"Interest\" required #InterestRate=\"ngModel\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                        <option value=\"6\">6</option>\r\n                                        <option value=\"7\">7</option>\r\n                                        <option value=\"8\">8</option>\r\n                                         <option value=\"9\">9</option>\r\n                                        <option value=\"10\">10</option>\r\n                                        <option value=\"11\">11</option>\r\n                                        <option value=\"12\">12</option>\r\n                                        <option value=\"13\">13</option>\r\n                                        <option value=\"14\">14</option>\r\n                                        <option value=\"15\">15</option>\r\n                                        <option value=\"16\">16</option>\r\n                                        <option value=\"17\">17</option>\r\n                                        <option value=\"18\">18</option>\r\n                                        <option value=\"19\">19</option>\r\n                                        <option value=\"20\">20</option>\r\n                                        <option value=\"21\">21</option>\r\n                                        <option value=\"22\">22</option>\r\n                                        <option value=\"23\">23</option>\r\n                                        <option value=\"24\">24</option>\r\n                                        <option value=\"25\">25</option>\r\n                                        <option value=\"26\">26</option>\r\n                                        <option value=\"27\">27</option>\r\n                                        <option value=\"28\">28</option>\r\n                                        <option value=\"29\">29</option>\r\n                                        <option value=\"30\">30</option>\r\n                                      </select>\r\n                                      <div *ngIf=\"InterestRate.invalid && InterestRate.touched\" class=\"alert-danger comman-error-mesage\">\r\n\r\n                                        <span *ngIf=\"lang.en\"> Please Select Interest rate !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया व्याज दर निवडा ! </span>\r\n                                      </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <label>LOAN AMOUNT</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"LoanData.LoanAmount\" name=\"LoanAmount\" id=\"LoanAmount\" class=\"form-control\" required maxlength=\"7\" #LoanAmountValue=\"ngModel\">\r\n                                    <div *ngIf=\"LoanAmountValue.invalid && LoanAmountValue.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!LoanAmountValue.hasError('required')\" class=\"msgright\">\r\n                                            <span *ngIf=\"lang.en\">Request Amount is required</span>\r\n                                            <span *ngIf=\"lang.mr\">विनंतीची रक्कम आवश्यक आहे</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <div class=\"col-md-12\">\r\n                                    <button class=\"btn btn-primary\" [disabled]=\"updateLoanForm.invalid\" (click)=\"confirmUpdate()\" data-dismiss=\"modal\">Yes</button>\r\n                                    <button class=\"btn btn-default\" data-dismiss=\"modal\" style=\"float:right\"> CANCEL</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/district/loan/loan.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DistrictLoanComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_district_services__ = __webpack_require__("../../../../../src/app/services/district.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_reports_exportexcel__ = __webpack_require__("../../../../../src/app/services/reports/exportexcel.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__loan_model_component__ = __webpack_require__("../../../../../src/app/components/district/loan/loan.model.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var DistrictLoanComponent = (function () {
    function DistrictLoanComponent(_districtService, _access_token, _globalURL, _commonService, exportToPdf, exportToExcel, router, lang, globalVariable, _commonMessage, LoanData) {
        this._districtService = _districtService;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._commonService = _commonService;
        this.exportToPdf = exportToPdf;
        this.exportToExcel = exportToExcel;
        this.router = router;
        this.lang = lang;
        this.globalVariable = globalVariable;
        this._commonMessage = _commonMessage;
        this.LoanData = LoanData;
    }
    DistrictLoanComponent.prototype.loanSHGLoanDataByStaus = function (loanStatus) {
        var _this = this;
        debugger;
        this.selectedLoanStatus = loanStatus;
        this._globalURL.isLoading = true;
        this._districtService.get((this._globalURL.GET_DISTRICT_LOAN_DETAILS + loanStatus), sessionStorage.getItem("access_token"))
            .then(function (res) {
            debugger;
            _this.memberLoanDetails = res.Data;
            //this.memberLoanDetails = null;
            _this._globalURL.isLoading = false;
        })
            .catch(function (res) {
            // this._globalURL.isLoading = false;
        });
    };
    DistrictLoanComponent.prototype.setUpdate = function (loanDetail) {
        debugger;
        this.LoanData = loanDetail;
    };
    DistrictLoanComponent.prototype.confirmUpdate = function () {
        var _this = this;
        debugger;
        var data = this.LoanData;
        this._districtService.post(this._globalURL.UPDATE_DISTRICT_LOAN_DETAILS, data, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == 401) {
                //  this._commonMessage.tokenexpiremsg;
            }
            if ((res.status) == undefined) {
            }
            else {
                if (res.status === 200) {
                    debugger;
                    _this._globalURL.isLoading = false;
                    _this.message = _this._commonMessage.UpdateMsg;
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                }
                else {
                }
            }
        }).catch(function (res) {
        });
    };
    DistrictLoanComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/district/loan/loan.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_district_services__["a" /* DISTRICTService */],
            __WEBPACK_IMPORTED_MODULE_1__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_4__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_5__services_reports_exportpdf__["a" /* ExportToPDF */],
            __WEBPACK_IMPORTED_MODULE_6__services_reports_exportexcel__["a" /* ExportToExcel */],
            __WEBPACK_IMPORTED_MODULE_7__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_8__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_9__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_11__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_10__loan_model_component__["a" /* LoanMasterModel */]])
    ], DistrictLoanComponent);
    return DistrictLoanComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/loan/loan.model.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoanMasterModel; });
var LoanMasterModel = (function () {
    function LoanMasterModel() {
        this.LoanId = 0;
        this.DistrictId = 0;
        this.DistrictName = '';
        this.MemberId = 0;
        this.MemberFirstName = '';
        this.MemberLastName = '';
        this.SHGId = 0;
        this.SHGCode = '';
        this.SHGName = '';
        this.VOId = 0;
        this.VOName = '';
        this.CMRCId = 0;
        this.CMRCName = '';
        this.LoanReason = '';
        this.LoanAmount = 0;
        this.RequestDate = '';
        this.ApprovedDate = '';
        this.Status = '';
        this.LoanReasonId = 0;
        this.LoanApprovedAmount = 0;
        this.IntrestRate = '';
        this.Tenure = 0;
        this.EffectiveStartDate = '';
        this.NoOfMembers = 0;
        this.Photo = '';
        this.ShareAmount = 0;
        this.PaymentMode = '';
        this.PaymentModeName = '';
        this.RejectReason = '';
        this.LoanEndDate = '';
        this.CurrentInstallment = '';
        this.SHGPaidAmount = 0;
        this.SHGOutstandingAmount = 0;
        this.SHGOutstandingPrincipalAmount = 0;
        this.SHGOutstandingInterest = 0;
        this.SHGFineAmt = 0;
        this.SHGPerPaidAmount = 0;
        this.Interest = 0;
    }
    return LoanMasterModel;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/memShare/memShare.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<!-- <div *ngIf=\"ShowErrormsg\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n</div> -->\r\n\r\n\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-6\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">MEMBER SHARE DETAILS FORM </span>\r\n                    <span *ngIf=\"lang.mr\"> सदस्य शेअर्स तपशील फॉर्म</span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"text\">\r\n                            <span *ngIf=\"lang.en\">SELECT VO </span>\r\n                            <span *ngIf=\"lang.mr\"> व्हीओ निवडा </span>\r\n                        </label>\r\n                        <select class=\"form-control\" (change)=\"getShgNameAndId(selectedVoId)\" #selectVo=\"ngModel\" [(ngModel)]=\"selectedVoId\" name=\"selectVo\"\r\n                            id=\"selectVo\">\r\n                            <option *ngFor=\"let Vo of Vos\" [value]=\"Vo.Key\">{{Vo.Value}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"text\">\r\n                            <span *ngIf=\"lang.en\">SELECT SHG </span>\r\n                            <span *ngIf=\"lang.mr\"> एसएचजि निवडा </span>\r\n                        </label>\r\n                        <select [(ngModel)]=\"selectedShgId\" name=\"selectedShgId\" class=\"form-control\" id=\"selectShg\">\r\n                            <option *ngFor=\"let shg of shgs\" [value]=\"shg.Key\">{{shg.Value}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createDistrict\">CREATE NEW DISTRICT</button>\r\n                    </div> -->\r\n                <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                        <p for=\"text\">\r\n                            <span *ngIf=\"lang.en\">LOAD MEMBER</span>\r\n                            <span *ngIf=\"lang.mr\"> सदस्य </span>\r\n                        </p>\r\n                        <button class=\"form-control\" type=\"button\" class=\"btn btn-primary\" (click)=\"getMemShareDetails()\">\r\n                            <span *ngIf=\"lang.en\">SEARCH</span>\r\n                            <span *ngIf=\"lang.mr\"> शोधा </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"box-body\">\r\n                    <table datatable class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">MEMBER ID</span>\r\n                                    <span *ngIf=\"lang.mr\"> आय डी </span>\r\n                                </th>\r\n\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">FULL NAME</span>\r\n                                    <span *ngIf=\"lang.mr\"> पूर्ण नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SHARE AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\"> शेयर रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">CODE</span>\r\n                                    <span *ngIf=\"lang.mr\"> कोड </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती </span>\r\n                                </th>\r\n                                <th>UPDATE</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let memShare of memShares\">\r\n                                <td>{{memShare.Id}}</td>\r\n                                <td>{{memShare.FirstName + \" \" + memShare.MiddleName + \" \" + memShare.LastName | uppercase}}</td>\r\n                                <td>{{memShare.ShareAmount | currency: 'INR'}}</td>\r\n                                <td>{{memShare.Code}}</td>\r\n                                <td class=\"record-action\">\r\n                                    <button title=\"View Details\" class=\"Lastbutton\" data-toggle=\"modal\" class=\"btn btn-primary\" data-target=\"#returnMemShare\"\r\n                                        (click)=\"delete(memShare)\">\r\n                                        <span *ngIf=\"lang.en\">RETURN</span>\r\n                                        <span *ngIf=\"lang.mr\"> परत </span>\r\n                                    </button>\r\n                                </td>\r\n                                <td>\r\n                                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#udpateMemberShareDetailForm\" (click)=\"setUpdate(memShare)\"\r\n                                        style=\"float:left;margin-top:7px;\">\r\n                                        UPDATE\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div id=\"udpateMemberShareDetailForm\" class=\"modal\" role=\"dialog\">\r\n                    <div class=\"modal-dialog\" style=\"width: 552px; margin-top: 57px;\">\r\n                        <!-- Modal content-->\r\n                        <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                                <h4 class=\"modal-title\">\r\n                                    UPDATE MEMBER SHARE DETAILS FORM\r\n                                </h4>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                                <form class=\"form-horizontal\" #updateShareForm=\"ngForm\">\r\n                                    <div class=\"form-group\">\r\n                                        <div class=\"col-md-6\">\r\n                                            <label>SHARE AMOUNT</label>\r\n                                            <input type=\"text\" [(ngModel)]=\"memberShareDetails.ShareAmount\" name=\"ShareAmount\" id=\"ShareAmount\" class=\"form-control\" required #ShareAmount=\"ngModel\">\r\n                                            <div *ngIf=\"ShareAmount.invalid && ShareAmount.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                                <div [hidden]=\"!ShareAmount.hasError('required')\" class=\"msgright\">\r\n                                                    <span *ngIf=\"lang.en\">Share Amount is required</span>\r\n            \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <button class=\"btn btn-primary\" [disabled]=\"updateShareForm.invalid\" (click)=\"confirmUpdate(memberShareDetails)\" data-dismiss=\"modal\">Yes</button>\r\n                                            <button class=\"btn btn-default\" data-dismiss=\"modal\" style=\"float:right\"> CANCEL</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/district/memShare/memShare.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DistrictMemberShareComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_district_services__ = __webpack_require__("../../../../../src/app/services/district.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__memShare_model_components__ = __webpack_require__("../../../../../src/app/components/district/memShare/memShare.model.components.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var DistrictMemberShareComponent = (function () {
    function DistrictMemberShareComponent(_router, lang, _access_token, _globalURL, _globalVariable, _districtService, _commonMessage, memberShareDetails) {
        this._router = _router;
        this.lang = lang;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._globalVariable = _globalVariable;
        this._districtService = _districtService;
        this._commonMessage = _commonMessage;
        this.memberShareDetails = memberShareDetails;
    }
    DistrictMemberShareComponent.prototype.ngOnInit = function () {
        this.getVoIdAndName();
        this.getMemShareDetails();
    };
    DistrictMemberShareComponent.prototype.ngAfterViewInit = function () {
        //this.dtTrigger.next();        
    };
    DistrictMemberShareComponent.prototype.getShgNameAndId = function (voID) {
        var _this = this;
        //  let id = data.voId;
        this._globalURL.isLoading = true;
        debugger;
        // let finalUrl = this._globalURL.GET_SHGNAME_ID_VOID + " " + id
        this._districtService.get((this._globalURL.GET_SHGNAME_ID_VOID + "" + voID), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.shgs = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    DistrictMemberShareComponent.prototype.getVoIdAndName = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._districtService.get(this._globalURL.GET_VOID_NAME_FOR_DISTRICT, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.Vos = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                //  this.ShowErrormsg = true;
                // this.message = "Vo is not get";
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                    //  this.ShowErrormsg = false;
                }, 5000);
            }
        });
    };
    DistrictMemberShareComponent.prototype.getMemShareDetails = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this.memShares = null;
        this._districtService.get((this._globalURL.GET_SHARE_AMOUNT + "?voId=" + this.selectedVoId + "&shgId=" + this.selectedShgId), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.memShares = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                // this.ShowErrormsg = true;
                // this.message = "member details is not get";
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                    // this.ShowErrormsg = false;
                }, 5000);
            }
            //this.reRenderDT();
        });
    };
    // reRenderDT() {
    //     this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {
    //         dtInstance.destroy();
    //         this.dtTrigger.next();
    //     });
    // }
    DistrictMemberShareComponent.prototype.setUpdate = function (memberShareDetail) {
        debugger;
        this.memberShareDetails = memberShareDetail;
    };
    DistrictMemberShareComponent.prototype.confirmUpdate = function (data) {
        var _this = this;
        debugger;
        var shareDetails = this._globalURL.UPDATE_DISTRICT_MEMBER_SHARE_DETAILS + "?memId=" + data.Id + "&shareAmount=" + data.ShareAmount;
        this._districtService.post(shareDetails, null, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == 401) {
                //  this._commonMessage.tokenexpiremsg;
            }
            if ((res.status) == undefined) {
            }
            else {
                if (res.status === 200) {
                    debugger;
                    _this._globalURL.isLoading = false;
                    _this.message = _this._commonMessage.UpdateMsg;
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                }
                else {
                }
            }
        }).catch(function (res) {
        });
    };
    DistrictMemberShareComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/district/memShare/memShare.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_5__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_4__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_2__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_1__services_district_services__["a" /* DISTRICTService */],
            __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_7__memShare_model_components__["a" /* MemberShareMasterModel */]])
    ], DistrictMemberShareComponent);
    return DistrictMemberShareComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/memShare/memShare.model.components.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MemberShareMasterModel; });
var MemberShareMasterModel = (function () {
    function MemberShareMasterModel() {
        this.Id = 0;
        this.DistrictUserId = 0;
        this.DistrictUserName = '';
        this.CMRCId = 0;
        this.VOId = 0;
        this.SHGId = 0;
        this.MemberId = 0;
        this.MemberFullName = '';
        this.ShareAmount = 0;
        this.ShareAmountDate = '';
        this.ShareReturnDate = '';
        this.Status = '';
    }
    return MemberShareMasterModel;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/member/member.component.html":
/***/ (function(module, exports) {

module.exports = "<section class=\"\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-3\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\"> MEMBER FORM</span>\r\n                    <span *ngIf=\"lang.mr\"> सदस्य फॉर्म</span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-4\">\r\n        <div class=\"form-group\">\r\n            <label for=\"text\">\r\n                <span *ngIf=\"lang.en\">SELECT VO </span>\r\n                <span *ngIf=\"lang.mr\"> व्हीओ निवडा </span>\r\n            </label>\r\n            <select class=\"form-control\" (change)=\"getShgNameAndId(selectedVoId)\" #selectVo=\"ngModel\" [(ngModel)]=\"selectedVoId\" name=\"selectVo\"\r\n                id=\"selectVo\">\r\n                <option *ngFor=\"let Vo of Vos\" [value]=\"Vo.Key\">{{Vo.Value}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n        <div class=\"form-group\">\r\n            <label for=\"text\">\r\n                <span *ngIf=\"lang.en\">SELECT SHG </span>\r\n                <span *ngIf=\"lang.mr\"> एसएचजि निवडा </span>\r\n            </label>\r\n            <select [(ngModel)]=\"selectedShgId\" (change)=\"getMemberDetails(selectedShgId)\" name=\"selectedShgId\" class=\"form-control\" id=\"selectShg\">\r\n                <option *ngFor=\"let shg of shgs\" [value]=\"shg.Key\">{{shg.Value}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"box-body\">\r\n        <table datatable id=\"memberTable\" class=\"table table-bordered loan_table_common memberTable\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        <span *ngIf=\"lang.en\"> SR.NO.</span>\r\n                        <span *ngIf=\"lang.mr\"> अं.क्र. </span>\r\n                    </th>\r\n                    <th>\r\n                        <span *ngIf=\"lang.en\"> MEMBER NAME</span>\r\n                        <span *ngIf=\"lang.mr\"> सदस्याचे नाव </span>\r\n                    </th>\r\n                    <th>\r\n                        <span *ngIf=\"lang.en\"> MEMBER CODE</span>\r\n                        <span *ngIf=\"lang.mr\"> सदस्य कोड </span>\r\n                    </th>\r\n                    <th>\r\n                        <span *ngIf=\"lang.en\"> DESIGNATION</span>\r\n                        <span *ngIf=\"lang.mr\"> पद </span>\r\n                    </th>\r\n                    <th>\r\n                        <span *ngIf=\"lang.en\"> CATEGORY</span>\r\n                        <span *ngIf=\"lang.mr\">सामाजिक प्रवर्ग </span>\r\n                    </th>\r\n                    <th>\r\n                        <span *ngIf=\"lang.en\"> DATE OF JOINING</span>\r\n                        <span *ngIf=\"lang.mr\"> गटात सामील होण्याचा दिनांक </span>\r\n                    </th>\r\n                    <th>\r\n                        <span *ngIf=\"lang.en\"> CONTACT NUMBER</span>\r\n                        <span *ngIf=\"lang.mr\"> संपर्क क्रमांक </span>\r\n                    </th>\r\n                    <th>\r\n                        <span *ngIf=\"lang.en\"> ACTION</span>\r\n                        <span *ngIf=\"lang.mr\"> कृती</span>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody class=\"manage_data\">\r\n                <tr *ngFor=\"let member of memDetails; let rowIndex=index\">\r\n                    <td>{{rowIndex+1}}</td>\r\n                    <td>{{member.FirstName | uppercase}} {{member.MiddleName | uppercase}} {{member.LastName | uppercase}}</td>\r\n                    <td>{{member.Code}}</td>\r\n                    <td>{{member.DesignationName}}</td>\r\n                    <td>{{member.Caste}}</td>\r\n                    <td>{{member.DateOfJoin | date}}</td>\r\n                    <td>{{member.MobileNumber}}</td>\r\n                    <td style=\"width:20%;text-align:center;\">\r\n                         <button title=\"Update Details\" class=\"Lastbutton\" data-toggle=\"modal\" class=\"btn btn-primary\" data-target=\"#UpdateMemberForm\"\r\n                            (click)='setUpdatedValues(member)'>\r\n                            <span *ngIf=\"lang.en\">UPDATE</span>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n\r\n</section>\r\n    <div id=\"UpdateMemberForm\" class=\"modal\" role=\"dialog\">\r\n        <div class=\"modal-dialog\" style=\"width: 552px; margin-top: 57px;\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">\r\n                        UPDATE MEMBER FORM\r\n                    </h4>\r\n                </div>\r\n                <div class=\"\">\r\n                        <form #UpdateMemberForm=\"ngForm\" id=\"bacgfat\" class=\"input-group\" novalidate>\r\n                            <div class=\"row\">        \r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> FIRST NAME</span>\r\n                                    <span *ngIf=\"lang.mr\"> पहिले नाव</span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input type=\"text\" FirstName [(ngModel)]=\"districtMemberModel.FirstName\" class=\"form-control\" id=\"FirstName\" name=\"FirstName\"\r\n                                    maxlength=\"25\">\r\n                                </div>\r\n                              </div>\r\n                              <div hidden>\r\n                                  <input type=\"text\" id=\"Id\" name=\"Id\" [(ngModel)]=\"districtMemberModel.Id\" #Id=\"ngModel\" >\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                  <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                  \r\n                                      <span *ngIf=\"lang.en\"> MIDDLE NAME / FATHER NAME</span>\r\n                                      <span *ngIf=\"lang.mr\"> मधले नाव /वडिलांचे नाव</span>\r\n                                      <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" [(ngModel)]=\"districtMemberModel.MiddleName\" class=\"form-control\" id=\"MiddleName\" name=\"MiddleName\">\r\n                                  </div>\r\n                                </div>\r\n                            </div> \r\n                            \r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                \r\n                                    <span *ngIf=\"lang.en\">LAST NAME </span>\r\n                                    <span *ngIf=\"lang.mr\">शेवटचे नाव </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input class=\"form-control\" [(ngModel)]=\"districtMemberModel.LastName\" id=\"LastName\" name=\"LastName\" required maxlength=\"25\">\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> MOTHER NAME </span>\r\n                                    <span *ngIf=\"lang.mr\">आईचे नाव </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input class=\"form-control\" [(ngModel)]=\"districtMemberModel.MotherName\" id=\"MotherName\" name=\"MotherName\" required maxlength=\"25\">\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                                \r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> GENDER </span>\r\n                                    <span *ngIf=\"lang.mr\"> लिंग </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <select [(ngModel)]=\"districtMemberModel.Gender\" name=\"Gender\" class=\"form-control\" id=\"sel1\">\r\n                                    <option value=\"FEMALE\" selected>FEMALE</option>\r\n                                    <option value=\"MALE\">MALE</option>\r\n                                    <option value=\"TRANSGENDER\">TRANSGENDER</option>\r\n                                  </select>\r\n        \r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> MARITAL STATUS </span>\r\n                                    <span *ngIf=\"lang.mr\">वैवाहिक स्थिती </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <select [(ngModel)]=\"districtMemberModel.MaritalStatusId\" class=\"form-control\" name=\"MaritalStatusId\">                   \r\n                                    <option *ngFor=\"let getMaritalStatus of maritalStatus\" [value]=\"getMaritalStatus.Key\">{{getMaritalStatus.Value}}</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n        \r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label>\r\n                                    <span *ngIf=\"lang.en\"> PERSONAL ADDRESS </span>\r\n                                    <span *ngIf=\"lang.mr\"> पत्ता </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <textarea type=\"text\" [(ngModel)]=\"districtMemberModel.Address\" class=\"form-control\" id=\"Address\" name=\"Address\" required maxlength=\"200\"></textarea>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label>\r\n                                    <span *ngIf=\"lang.en\"> VILLAGE </span>\r\n                                    <span *ngIf=\"lang.mr\"> गाव </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <select class=\"form-control\" name=\"VillageId\" id=\"Village\" [(ngModel)]=\"districtMemberModel.village\">\r\n                                    <option *ngFor=\"let village of villages\" [value]=\"village.key\">{{village.Value}}</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n        \r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                \r\n                                    <span *ngIf=\"lang.en\"> DISTRICT </span>\r\n                                    <span *ngIf=\"lang.mr\">जिल्हा </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <select [(ngModel)]=\"districtMemberModel.districtId\" name=\"districtId\" (change)=\"getselectTaluka(districtId.viewModel)\" class=\"form-control\" id=\"districtId\">\r\n                                    <option *ngFor=\"let dis of ditricts\" [value]=\"dis.Id\">{{dis.Name}}</option>\r\n                                    <!-- <option value=\"Raigadh\">RAIGADH</option> -->\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                \r\n                                    <span *ngIf=\"lang.en\"> TALUKA </span>\r\n                                    <span *ngIf=\"lang.mr\">तालुका </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <select [(ngModel)]=\"districtMemberModel.Taluka\" name=\"Taluka\" class=\"form-control\" id=\"demoTaluka\">\r\n                                    <option *ngFor=\"let getAllTaluka of talukas\" [value]=\"getAllTaluka.Key\">{{getAllTaluka.Value}}</option>\r\n                                  </select>\r\n                                  \r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n        \r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> PIN CODE </span>\r\n                                    <span *ngIf=\"lang.mr\">पिन कोड </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input type=\"text\" [(ngModel)]=\"districtMemberModel.PinCode\" class=\"form-control\" id=\"PinCode\" name=\"PinCode\" required maxlength=\"10\">\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                \r\n                                    <span *ngIf=\"lang.en\"> CONTACT NUMBER </span>\r\n                                    <span *ngIf=\"lang.mr\">संपर्क </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input type=\"text\" [(ngModel)]=\"districtMemberModel.MobileNumber\" class=\"form-control\" id=\"MobileNumber\" name=\"MobileNumber\"\r\n                                    maxlength=\"12\">\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n        \r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"date\">\r\n                                    <span *ngIf=\"lang.en\"> DATE OF BIRTH </span>\r\n                                    <span *ngIf=\"lang.mr\">जन्मतारीख </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input type=\"date\" [(ngModel)]=\"districtMemberModel.DateOfBirth\" class=\"form-control\" id=\"DateOfBirth\" name=\"DateOfBirth\">\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> EDUCATION </span>\r\n                                    <span *ngIf=\"lang.mr\">शिक्षण </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\"></span>\r\n                                  </label>\r\n                                  <!-- <input type=\"text\" (ngModel)=\"Education\" class=\"form-control\" id=\"Education\" name=\"Education\" #Education=\"ngModel\"> -->\r\n                                  <select [(ngModel)]=\"districtMemberModel.Education\" name=\"Education\" class=\"form-control\" id=\"sel1\">\r\n                                    <option value=\"ILLITERATE\">ILLITERATE</option>\r\n                                    <option value=\"1 TO 4\">1 TO 4</option>\r\n                                    <option value=\"5 TO 7\">5 TO 7</option>\r\n                                    <option value=\"8 TO 10\">8 TO 10</option>\r\n                                    <option value=\"11 TO 12\">11 TO 12</option>\r\n                                    <option value=\"UNDER GRADUATE\">UNDER GRADUATE</option>\r\n                                    <option value=\"GRADUATE\">GRADUATE</option>\r\n                                    <option value=\"POST GRADUATE\">POST GRADUATE</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n        \r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> OCCUPATION/ PROFFESSION </span>\r\n                                    <span *ngIf=\"lang.mr\">व्यवसाय/ </span>\r\n                                  </label>\r\n                                  <select [(ngModel)]=\"districtMemberModel.OccupationId\" name=\"OccupationId\" class=\"form-control\">\r\n                                    <option *ngFor=\"let getAllOccupation of Occupations\" [value]=\"getAllOccupation.Key\">{{getAllOccupation.Value}}</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> SOCIAL CATEGORY </span>\r\n                                    <span *ngIf=\"lang.mr\"> सामाजिक प्रवर्ग </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <select [(ngModel)]=\"districtMemberModel.CasteId\" name=\"CasteId\" class=\"form-control\" id=\"sel1\">\r\n                                    <option *ngFor=\"let getAllCast of Casts\" [value]=\"getAllCast.Key\">{{getAllCast.Value}}</option>\r\n                                    <option value=\"BUDDHA\">BAUDDHA</option>\r\n                                    <option value=\"MUSLIMS\">MUSLIMS</option>\r\n                                    <option value=\"SIKHS\">SIKHS</option>\r\n                                    <option value=\"CHRISTIANS\">CHRISTIANS</option>\r\n                                    <option value=\"PARSIS\">PARSIS</option>\r\n                                    <option value=\"JAINS\">JAINS</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n        \r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> ECONOMIC CATEGORY </span>\r\n                                    <span *ngIf=\"lang.mr\">आर्थिक प्रवर्ग </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <select [(ngModel)]=\"districtMemberModel.EconomicCategory\" name=\"EconomicCategory\" class=\"form-control\" id=\"EconomicCategory\">\r\n                                    <option value=\"NO CATEGORY\">NO CATEGORY</option>\r\n                                    <option value=\"BPL\">BPL</option>\r\n                                    <option value=\"PRABPL\">PRABPL</option>\r\n                                    <option value=\"APL\">APL</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> RATION CARD </span>\r\n                                    <span *ngIf=\"lang.mr\">रेशन कार्ड </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <select [(ngModel)]=\"districtMemberModel.RationCard\" name=\"RationCard\" class=\"form-control\" id=\"RationCard\">\r\n                                    <option value=\"NO\"></option>\r\n                                    <option value=\"YELLOW\">YELLOW</option>\r\n                                    <option value=\"ORANGE\">ORANGE</option>\r\n                                    <option value=\"WHITE\">WHITE</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> ADHAR CARD NUMBER </span>\r\n                                    <span *ngIf=\"lang.mr\">आधार कार्ड नंबर </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input type=\"text\" [(ngModel)]=\"districtMemberModel.AdharNumber\" class=\"form-control\" id=\"AdharNumber\" maxlength=\"20\" name=\"AdharNumber\">\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> PAN CARD NUMBER </span>\r\n                                    <span *ngIf=\"lang.mr\">पॅन कार्ड नंबर </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input type=\"text\" [(ngModel)]=\"districtMemberModel.PANNumber\" class=\"form-control\" id=\"PANNumber\" required maxlength=\"20\" name=\"PANNumber\">\r\n                                  <div *ngIf=\"PANNumber.invalid && PANNumber.touched\" class=\"alert-danger comman-error-mesage\">                            <!-- <div [hidden]=\"!AdharNumber.hasError('pattern')\">AdharNumber should be only Numbers</div> -->\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"date\">\r\n                \r\n                                    <span *ngIf=\"lang.en\"> SHG JOINING DATE </span>\r\n                                    <span *ngIf=\"lang.mr\">एसएचजी सामील सामील होण्याचा दिनांक </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input type=\"date\" [(ngModel)]=\"districtMemberModel.DateOfJoin\" class=\"form-control\" id=\"DateOfJoin\" name=\"DateOfJoin\">\r\n        \r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                \r\n                                    <span *ngIf=\"lang.en\"> DESIGNATION </span>\r\n                                    <span *ngIf=\"lang.mr\">पद </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <select [(ngModel)]=\"districtMemberModel.DesignationId\" name=\"DesignationId\" class=\"form-control\" required id=\"DesignationName\">\r\n                                    <option value=\"10\">PRESIDENT</option>\r\n                                    <option value=\"11\">VICE PRESIDENT</option>\r\n                                    <option value=\"12\">SECRETORY</option>\r\n                                    <option value=\"14\">MEMBER</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                \r\n                                    <span *ngIf=\"lang.en\"> SHARE AMOUNT </span>\r\n                                    <span *ngIf=\"lang.mr\">वितरीत रक्कम </span>\r\n                                    <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                                  </label>\r\n                                  <input type=\"text\" [(ngModel)]=\"districtMemberModel.ShareAmount\" class=\"form-control\" id=\"ShareAmount\" name=\"ShareAmount\" maxlength=\"4\">\r\n                                    <!-- <div [hidden]=\"!ShareAmount.hasError('pattern')\">Share Amount should be only numbers</div> -->\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                \r\n                                    <span *ngIf=\"lang.en\"> BANK NAME </span>\r\n                                    <span *ngIf=\"lang.mr\">बँकेचे नाव </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input type=\"text\" [(ngModel)]=\"districtMemberModel.BankName\" class=\"form-control\" id=\"BankName\" name=\"BankName\" required maxlength=\"20\">\r\n                                </div>\r\n                              </div>\r\n                            <!-- </div> -->\r\n                            <div class=\"row\">\r\n                              <!-- <p style=\"font-size:21px;margin-top:9px;margin-left:7px;\">Bank Detail</p> -->\r\n                \r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                \r\n                                    <span *ngIf=\"lang.en\"> BRANCH NAME </span>\r\n                                    <span *ngIf=\"lang.mr\">शाखाचे नाव </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input type=\"text\" [(ngModel)]=\"districtMemberModel.BranchName\" class=\"form-control\" id=\"BranchName\" name=\"BranchName\" required maxlength=\"20\">\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"from-group\">\r\n                                  <label for=\"text\">\r\n                \r\n                                    <span *ngIf=\"lang.en\"> PERSONAL BANK A/C NUMBER </span>\r\n                                    <span *ngIf=\"lang.mr\">वैयक्तिक बँक खाते क्रमांक </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input type=\"text\" [(ngModel)]=\"districtMemberModel.AccountNumber\" class=\"form-control\" id=\"AccountNumber\" name=\"AccountNumber\" required maxlength=\"20\">\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                \r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"from-group\">\r\n                                  <label for=\"text\">\r\n                \r\n                                    <span *ngIf=\"lang.en\"> CONFIRM BANK A/C NUMBER.</span>\r\n                                    <span *ngIf=\"lang.mr\">खाते क्रमांकाची पुष्टी करा. </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input type=\"text\" [(ngModel)]=\"districtMemberModel.AccountNumber_\" class=\"form-control\" id=\"AccountNumber\" name=\"AccountNumber_\" required maxlength=\"20\">\r\n                                  <div *ngIf=\"AccountNumber != AccountNumber_\" class=\"alert-danger comman-error-mesage\">\r\n                                    Account Number is not match with Confirm Account Number !\r\n                                    <!-- <div [hidden]=\"!AccountNumber_.hasError('pattern')\">Account Number should be only numbers</div> -->\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                \r\n                                    <span *ngIf=\"lang.en\"> IFSC CODE</span>\r\n                                    <span *ngIf=\"lang.mr\">आयएफएससी कोड </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input type=\"text\" [(ngModel)]=\"districtMemberModel.IFSCCode\" class=\"form-control\" id=\"IFSCCode\" name=\"IFSCCode\" required #IFSCCode=\"ngModel\" maxlength=\"20\">\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                \r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                \r\n                                    <span *ngIf=\"lang.en\"> BANK ADDRESS</span>\r\n                                    <span *ngIf=\"lang.mr\">बँकचा पत्ता </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <textarea type=\"text\" [(ngModel)]=\"districtMemberModel.BankAddress\" class=\"form-control\" id=\"BankAddress\" name=\"BankAddress\" required maxlength=\"200\"></textarea>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                  <label for=\"text\">\r\n                                    UPLOAD MEMBER PHOTO\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                  </label>\r\n                                  <input class=\"custom_btn\" type=\"file\" ng-bind=\"fileData\" placeholder=\"Upload file\" accept=\".png,.jpeg,.jpg\">\r\n                                  <!-- <div *ngIf=\"IFSCCode.invalid && IFSCCode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    Please Entre IFSC Code\r\n                                  </div> -->\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                \r\n                            <div class=\"col-md-12\">\r\n                                <button class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"updateMember(UpdateMemberForm)\">Yes</button>\r\n                                <button class=\"btn btn-default\" data-dismiss=\"modal\" style=\"float:right\"> CANCEL</button>\r\n                              </div>\r\n                          </form>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n\r\n\r\n\r\n\r\n   "

/***/ }),

/***/ "../../../../../src/app/components/district/member/member.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DistrictMemberComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__services_district_services__ = __webpack_require__("../../../../../src/app/services/district.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__member_model_component__ = __webpack_require__("../../../../../src/app/components/district/member/member.model.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var DistrictMemberComponent = (function () {
    function DistrictMemberComponent(_districtService, _globalURL, _commonService, _access_token, _commonMessage, _router, lang, districtMemberModel) {
        this._districtService = _districtService;
        this._globalURL = _globalURL;
        this._commonService = _commonService;
        this._access_token = _access_token;
        this._commonMessage = _commonMessage;
        this._router = _router;
        this.lang = lang;
        this.districtMemberModel = districtMemberModel;
    }
    DistrictMemberComponent.prototype.ngOnInit = function () {
        this.getVoIdAndName();
    };
    DistrictMemberComponent.prototype.getVoIdAndName = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._districtService.get(this._globalURL.GET_VOID_NAME_FOR_DISTRICT, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.Vos = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                //  this.ShowErrormsg = true;
                // this.message = "Vo is not get";
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                    //  this.ShowErrormsg = false;
                }, 5000);
            }
        });
    };
    DistrictMemberComponent.prototype.getShgNameAndId = function (voID) {
        var _this = this;
        //  let id = data.voId;
        this._globalURL.isLoading = true;
        debugger;
        // let finalUrl = this._globalURL.GET_SHGNAME_ID_VOID + " " + id
        this._districtService.get((this._globalURL.GET_SHGNAME_ID_VOID + "" + voID), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.shgs = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    DistrictMemberComponent.prototype.getMemberDetails = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._districtService.get((this._globalURL.GET_ALL_MEMBER_DETAILS_BY_SHGID + this.selectedShgId + "&Status=" + 2), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.memDetails = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                // this.ShowErrormsg = true;
                // this.message = "member details is not get";
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                    // this.ShowErrormsg = false;
                }, 5000);
            }
            //this.reRenderDT();
        });
    };
    DistrictMemberComponent.prototype.setUpdatedValues = function (data) {
        debugger;
        this.districtMemberModel = data;
    };
    DistrictMemberComponent.prototype.updateMember = function (UpdateMember) {
        var _this = this;
        debugger;
        this._districtService.post(this._globalURL.UPDATE_MEMBER_MASTER, UpdateMember.value, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._commonMessage.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._commonMessage.MemberUpdateMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    // this.getMemberDetails(this.globalVariable.SelectedSHGID);
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._commonMessage.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._commonMessage.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._commonMessage.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    DistrictMemberComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_8__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/district/member/member.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__services_district_services__["a" /* DISTRICTService */],
            __WEBPACK_IMPORTED_MODULE_1__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_2__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_4__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_5__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_7__member_model_component__["a" /* DistrictMemberModel */]])
    ], DistrictMemberComponent);
    return DistrictMemberComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/member/member.model.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DistrictMemberModel; });
/* unused harmony export shgDetails */
var DistrictMemberModel = (function () {
    function DistrictMemberModel() {
        this.Id = 0;
        this.ParentCode = 0;
        this.Code = 0;
        this.VOId = 0;
        ;
        this.DesignationId = 0;
        this.Education = '';
        this.FirstName = '';
        this.MiddleName = '';
        this.LastName = '';
        this.FatherName = '';
        this.MotherName = '';
        this.DateOfJoin = 0;
        this.Gender = '';
        this.DateOfJoin = '';
        this.District = '';
        this.Block = '';
        this.DesignationName = '';
        this.PANCode = 0;
        this.MobileNumber = 0;
        this.OccupationId = 0;
        this.Occupation = '';
        this.RationCard = '';
        this.EconomicCategory = '';
        this.AdharCardNumber = 0;
        this.BankName = '';
        this.BranchName = '';
        this.AccountNumber = 0;
        this.IFSCCode = 0;
        this.BankAccountOpeningDate = '';
        this.BankAddress = '';
        this.AdharNumber = 0;
        this.CreatedBy = '';
        this.CreatedDate = '';
        this.UpdatedBy = '';
        this.UpdatedDate = '';
        this.Status = '';
        this.Address = '';
        this.PINCode = 0;
        this.Category = '';
        this.SavingGroupId = 0;
        this.MaritalStatusId = 0;
        this.ShareAmount = 0;
    }
    ;
    return DistrictMemberModel;
}());

var shgDetails = (function () {
    function shgDetails() {
        this.Name = '';
    }
    return shgDetails;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/otherIncome/otherIncome.component.html":
/***/ (function(module, exports) {

module.exports = "<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-6\">\r\n                <label  class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\"> OTHER INCOME DETAILS FORM</span>\r\n                    <span *ngIf=\"lang.mr\"> इतर उत्पन्न तपशील फॉर्म</span>\r\n               </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"box box-default\">\r\n          <!-- <button type=\"button\" class=\"btn btn-primary\">नवीन बचतगट बनवा </button> -->\r\n          <div class=\"box-body\">\r\n            <table datatable  class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n              <thead>\r\n                <tr>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\"> PAYEE NAME</span>\r\n                    <span *ngIf=\"lang.mr\">प्राप्तकर्ताचे नाव </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">IS SHG MEMBER</span>\r\n                    <span *ngIf=\"lang.mr\">एसएचजी सदस्य आहे का </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">PAID AMOUNT</span>\r\n                    <span *ngIf=\"lang.mr\">दिलेली रक्कम </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">REASON</span>\r\n                    <span *ngIf=\"lang.mr\">कारण </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">RECEIVED DATE</span>\r\n                    <span *ngIf=\"lang.mr\">देणगीची तारीख   </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">DOWNLOAD</span>\r\n                    <span *ngIf=\"lang.mr\">डाऊनलोड </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                    <span *ngIf=\"lang.mr\">कृती </span>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let otherIncomeDetail of otherIncomeDetails\">\r\n                  <td>{{otherIncomeDetail.PayeeName}}</td>\r\n                  <td>{{otherIncomeDetail.SHGId == null ? \"NO\" : \"YES\"}}</td>\r\n                  <td>{{otherIncomeDetail.Amount | currency: 'INR'}}</td>\r\n                  <td>{{otherIncomeDetail.Reason}}</td>\r\n                  <td>{{otherIncomeDetail.PaidDate | date}}</td>\r\n                  <td>\r\n                    <a href={{otherIncomeDetail.BankPhotoUrl}} target=\"_blank\">\r\n                      <span *ngIf=\"lang.en\">BANK RECEIPT</span>\r\n                      <span *ngIf=\"lang.mr\">बँक रसीद </span>\r\n                    </a> |\r\n                    <a href={{otherIncomeDetail.CheckPhotoUrl}} target=\"_blank\">\r\n                      <span *ngIf=\"lang.en\">CHECK RECEIPT</span>\r\n                      <span *ngIf=\"lang.mr\">चेक रसीद </span>\r\n                    </a>\r\n                  </td>\r\n                  <td style=\"text-align:center;padding:4px;\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteincome\" (click)=\"fordelete(otherIncomeDetail)\">\r\n                      <span *ngIf=\"lang.en\" data-toggle=\"modal\" data-target=\"#udpateOtherIncomeForm\" (click)=\"setUpdate(otherIncomeDetail)\">UPDATE</span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <div id=\"udpateOtherIncomeForm\" class=\"modal\" role=\"dialog\">\r\n            <div class=\"modal-dialog\" style=\"width: 552px; margin-top: 57px;\">\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        <h4 class=\"modal-title\">\r\n                            UPDATE OTHER INCOME FORM\r\n                        </h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <form class=\"form-horizontal\"  #updateShareForm=\"ngForm\">\r\n                            <div class=\"form-group\">\r\n                                <div class=\"col-md-6\">\r\n                                    <label>PAID AMOUNT</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"otherIncomeData.Amount\" name=\"Amount\" id=\"Amount\"  class=\"form-control\" required #Amount=\"ngModel\">\r\n                                    <div *ngIf=\"Amount.invalid && Amount.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                      <div [hidden]=\"!Amount.hasError('required')\" class=\"msgright\">\r\n                                          <span *ngIf=\"lang.en\">Amount is required</span>\r\n  \r\n                                      </div>\r\n                                  </div>\r\n                                  </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <label>REASON</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"otherIncomeData.Reason\" name=\"Reason\" id=\"Reason\" class=\"form-control\" required #Reason=\"ngModel\">\r\n                                    <div *ngIf=\"Reason.invalid && Reason.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                      <div [hidden]=\"!Reason.hasError('required')\" class=\"msgright\">\r\n                                          <span *ngIf=\"lang.en\">Reason is required</span>\r\n  \r\n                                      </div>\r\n                                  </div>\r\n                                  </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <div class=\"col-md-12\">\r\n                                    <button class=\"btn btn-primary\" data-dismiss=\"modal\" [disabled]=\"updateShareForm.invalid\" (click)=\"confirmUpdate(otherIncomeData)\">Yes</button>\r\n                                    <button class=\"btn btn-default\" data-dismiss=\"modal\" style=\"float:right\"> CANCEL</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- data table end -->\r\n  </section>\r\n  \r\n"

/***/ }),

/***/ "../../../../../src/app/components/district/otherIncome/otherIncome.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DistrictOtherIncomeComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_district_services__ = __webpack_require__("../../../../../src/app/services/district.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__otherIncome_model_component__ = __webpack_require__("../../../../../src/app/components/district/otherIncome/otherIncome.model.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var DistrictOtherIncomeComponent = (function () {
    function DistrictOtherIncomeComponent(_districtService, _globalURL, _commonService, _access_token, _commonMessage, _router, lang, otherIncomeData) {
        this._districtService = _districtService;
        this._globalURL = _globalURL;
        this._commonService = _commonService;
        this._access_token = _access_token;
        this._commonMessage = _commonMessage;
        this._router = _router;
        this.lang = lang;
        this.otherIncomeData = otherIncomeData;
    }
    DistrictOtherIncomeComponent.prototype.ngOnInit = function () {
        this.getOtherIncomeDetails();
        this.getOtherIncomeDetails();
    };
    DistrictOtherIncomeComponent.prototype.ngAfterViewInit = function () {
        //this.dtTrigger.next();
    };
    DistrictOtherIncomeComponent.prototype.getOtherIncomeDetails = function () {
        var _this = this;
        this.totalDonationAmt = 0;
        this._districtService.get(this._globalURL.GET_DISTRICT_OTHER_INCOME_DETAILS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status == 200) {
                if (res.status == 200) {
                    _this.otherIncomeDetails = JSON.parse(res._body).Data;
                    for (var item in _this.otherIncomeDetails) {
                        _this.totalDonationAmt = _this.totalDonationAmt + _this.otherIncomeDetails[item].Amount;
                        _this._globalURL.isLoading = false;
                    }
                }
                else {
                    _this.ShowErrormsg = true;
                    _this.message = "Unable to get data";
                    setInterval(function () {
                        _this._globalURL.isLoading = false;
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
                //this.reRenderDT();
            }
            else {
                if (res.Status == true) {
                    _this.otherIncomeDetails = res.Data;
                    for (var item in _this.otherIncomeDetails)
                        _this.totalDonationAmt = _this.totalDonationAmt + _this.otherIncomeDetails[item].Amount;
                    _this.ShowErrormsg = false;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.message = "Unable to get Data";
                    setInterval(function () {
                        _this._globalURL.isLoading = false;
                        _this._globalURL.isSaveSuccessMessage = false;
                        _this.ShowErrormsg = false;
                    }, 5000);
                }
            }
            //this.reRenderDT();
        });
    };
    // reRenderDT() {
    //     this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {
    //         dtInstance.destroy();
    //         this.dtTrigger.next();
    //     });
    // }
    DistrictOtherIncomeComponent.prototype.setUpdate = function (otherIncomeValues) {
        debugger;
        this.otherIncomeData = otherIncomeValues;
    };
    DistrictOtherIncomeComponent.prototype.confirmUpdate = function (data) {
        var _this = this;
        debugger;
        var otherIncomeUrl = this._globalURL.UPDATE_DISTRICT_OTHER_INCOME_DETAILS + "?id=" + data.Id + "&amount=" + data.Amount + "&donReason=" + data.Reason;
        this._districtService.post(otherIncomeUrl, null, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == 401) {
                //   this._commonMessage.tokenexpiremsg;
            }
            if ((res.status) == undefined) {
            }
            else {
                if (res.status === 200) {
                    debugger;
                    _this._globalURL.isLoading = false;
                    _this.message = _this._commonMessage.UpdateMsg;
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                }
                else {
                }
            }
        }).catch(function (res) {
        });
    };
    DistrictOtherIncomeComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/district/otherIncome/otherIncome.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_6__services_district_services__["a" /* DISTRICTService */],
            __WEBPACK_IMPORTED_MODULE_1__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_2__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_5__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_7__otherIncome_model_component__["a" /* OtherIncomeMasterModel */]])
    ], DistrictOtherIncomeComponent);
    return DistrictOtherIncomeComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/otherIncome/otherIncome.model.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OtherIncomeMasterModel; });
var OtherIncomeMasterModel = (function () {
    function OtherIncomeMasterModel() {
        this.Id = 0;
        this.VOId = 0;
        this.Amount = 0;
        this.SHGId = 0;
        this.PaidDate = '';
        this.PayeeName = '';
        this.IsSHGMember = false;
        this.CreatedBy = '';
        this.CreatedDate = '';
        this.UpdatedBy = '';
        this.UpdatedDate = '';
        this.IsDeleted = 0;
        this.IncomeSource = 0;
        this.Reason = '';
        this.BankPhotoUrl = '';
        this.CheckPhotoUrl = '';
        this.OtherIncomeSourceBankReceipt = 0;
        this.OtherIncomeSourceCheckReceipt = 0;
    }
    return OtherIncomeMasterModel;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/shg/shg.component.html":
/***/ (function(module, exports) {

module.exports = "<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-6\">\r\n                <label  class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\">SHG DETAILS FORM</span>\r\n                    <span *ngIf=\"lang.mr\">एसएचजी तपशील फॉर्म </span>\r\n               </label>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">SELECT VO </span>\r\n                    <span *ngIf=\"lang.mr\"> व्हीओ निवडा </span>\r\n                </label>\r\n                <select class=\"form-control\" (change)=\"getShgByVoIdAndStatus(selectedVoId)\" #selectVo=\"ngModel\" [(ngModel)]=\"selectedVoId\" name=\"selectVo\"\r\n                id=\"selectVo\">\r\n                <option *ngFor=\"let Vo of Vos\" [value]=\"Vo.Key\">{{Vo.Value}}</option>\r\n              </select>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"box box-default\">\r\n          <div class=\"box-body\">\r\n            <table datatable class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n              <thead>\r\n                <tr>\r\n                  <th hidden>Id</th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">SR.NO</span>\r\n                    <span *ngIf=\"lang.mr\">अं.क्र.</span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">NAME OF SHG</span>\r\n                    <span *ngIf=\"lang.mr\">एसएचजी चे नाव</span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">CODE</span>\r\n                    <span *ngIf=\"lang.mr\">कोड</span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">SCHEME</span>\r\n                    <span *ngIf=\"lang.mr\">योजना</span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">DATE OF FORMATION</span>\r\n                    <span *ngIf=\"lang.mr\">स्थापना दिनांक </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">TOTAL MEMBERS</span>\r\n                    <span *ngIf=\"lang.mr\">एकूण सदस्य</span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">CONTACT NUMBER</span>\r\n                    <span *ngIf=\"lang.mr\">संपर्क </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">VIEW MEMBERS</span>\r\n                    <span *ngIf=\"lang.mr\">सदस्य </span>\r\n                  </th>\r\n                  <th>\r\n                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                    <span *ngIf=\"lang.mr\">कृती </span>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"\">\r\n                <tr *ngFor=\"let savingGroup of savingGroups; let rowIndex=index\">\r\n                  <td hidden>{{savingGroup.Id}}</td>\r\n                  <td>{{rowIndex+1}}</td>\r\n                  <td>{{savingGroup.Name | uppercase }}</td>\r\n                  <td>{{savingGroup.Code}}</td>\r\n                  <td>{{savingGroup.SchemeName | uppercase}}</td>\r\n                  <td>{{savingGroup.DateOfFormation | date: 'dd-MMM-yyyy'}}</td>\r\n                  <td>{{savingGroup.NumberOfMembers}}</td>\r\n                  <td>{{savingGroup.ContactNumber}}</td>\r\n                  <td style=\"width:22%;text-align:center;\">\r\n                    <button title=\"Update Details\" class=\"Lastbutton\" data-toggle=\"modal\" class=\"btn btn-primary\" data-target=\"#updateShgMasterForm\"\r\n                    (click)='setUpdatedValues(savingGroup)'>\r\n                    <span *ngIf=\"lang.en\">UPDATE</span>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- data table end -->\r\n    \r\n  </section>\r\n\r\n  <div id=\"updateShgMasterForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width: 552px; margin-top: 57px;\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    UPDATE SHG FORM\r\n                </h4>\r\n            </div>\r\n            <div class=\"\">\r\n              <form #UpdateShgForm=\"ngForm\" class=\"input-group\" novalidate>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\">SHG SCHEME </span>\r\n                        <span *ngIf=\"lang.mr\">एसएचजी योजना </span>\r\n                      </label>\r\n                      <select class=\"form-control\" [(ngModel)]=\"shgModel.SchemeId\" name=\"SchemeId\" required #SchemeIdDetails=\"ngModel\">\r\n                        <option *ngFor=\"let scheme of schemes\" [value]=\"scheme.Key\">{{scheme.Value}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"SchemeIdDetails.invalid && SchemeIdDetails.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <span *ngIf=\"lang.en\">Please Select Scheme ! </span>\r\n                        <span *ngIf=\"lang.mr\">कृपया योजना निवडा ! </span>\r\n                      </div>\r\n                    </div>\r\n                    <div hidden>\r\n                      <input type=\"text\" id=\"Id\" name=\"Id\" [(ngModel)]=\"shgModel.Id\" #SHGId=\"ngModel\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\">SHG NAME </span>\r\n                        <span *ngIf=\"lang.mr\">एसएचजी चे नाव </span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <input type=\"text\" [(ngModel)]=\"shgModel.Name\" class=\"form-control\" id=\"Name\" name=\"Name\" required #SHGName=\"ngModel\">\r\n                      <div *ngIf=\"SHGName.invalid && SHGName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <span *ngIf=\"lang.en\"> Please Enter Shg Name ! </span>\r\n                        <span *ngIf=\"lang.mr\">कृपया एसएचजी चे नाव भरा ! </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> SHG FORMATION DATE </span>\r\n                        <span *ngIf=\"lang.mr\">एसएचजी स्थापना दिनांक </span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <input type=\"date\" [(ngModel)]=\"shgModel.DateOfFormation\" class=\"form-control\" id=\"DateOfFormation\" name=\"DateOfFormation\" required\r\n                        #SHGDateOfFormation=\"ngModel\">\r\n                      <div *ngIf=\"SHGDateOfFormation.invalid && SHGDateOfFormation.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <span *ngIf=\"lang.en\"> Please Select Date Of Formation ! </span>\r\n                        <span *ngIf=\"lang.mr\">कृपया एसएचजी निर्मीती दिनांक निवडा ! </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"date\">\r\n                        <span *ngIf=\"lang.en\"> SHG MEETING DATE </span>\r\n                        <span *ngIf=\"lang.mr\"> एसएचजी मिटिंग दिनांक </span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <select [(ngModel)]=\"shgModel.MeetingDate\" class=\"form-control\" id=\"MeetingDate\" name=\"MeetingDate\" required #SHGMeetingDate=\"ngModel\">\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"6\">6</option>\r\n                        <option value=\"7\">7</option>\r\n                        <option value=\"8\">8</option>\r\n                        <option value=\"9\">9</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"11\">11</option>\r\n                        <option value=\"12\">12</option>\r\n                        <option value=\"13\">13</option>\r\n                        <option value=\"14\">14</option>\r\n                        <option value=\"15\">15</option>\r\n                        <option value=\"16\">16</option>\r\n                        <option value=\"17\">17</option>\r\n                        <option value=\"18\">18</option>\r\n                        <option value=\"19\">19</option>\r\n                        <option value=\"20\">20</option>\r\n                        <option value=\"21\">21</option>\r\n                        <option value=\"22\">22</option>\r\n                        <option value=\"23\">23</option>\r\n                        <option value=\"24\">24</option>\r\n                        <option value=\"25\">25</option>\r\n                        <option value=\"26\">26</option>\r\n                        <option value=\"27\">27</option>\r\n                        <option value=\"28\">28</option>\r\n                        <option value=\"29\">29</option>\r\n                        <option value=\"30\">30</option>\r\n                        <option value=\"31\">31</option>\r\n                      </select>\r\n                      <div *ngIf=\"SHGMeetingDate.invalid && SHGMeetingDate.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <span *ngIf=\"lang.en\"> Please Select SHG Meeting Date ! </span>\r\n                        <span *ngIf=\"lang.mr\"> कृपया एसएचजी मिटिंग तारीख निवडा ! </span>\r\n    \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> AREA </span>\r\n                        <span *ngIf=\"lang.mr\"> क्षेत्र </span>\r\n    \r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <select [(ngModel)]=\"shgModel.AreaId\" name=\"AreaId\" class=\"form-control\" id=\"sel1\" required #SHGAreaId=\"ngModel\">\r\n                        <option *ngFor=\"let area of areas\" [value]=\"area.Key\">{{area.Value}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"SHGAreaId.invalid && SHGAreaId.touched\" class=\"alert-danger comman-error-mesage\">\r\n    \r\n                        <span *ngIf=\"lang.en\"> Please Select Area ! </span>\r\n                        <span *ngIf=\"lang.mr\"> कृपया क्षेत्र निवडा ! </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> ADDRESS </span>\r\n                        <span *ngIf=\"lang.mr\"> पत्ता </span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <input type=\"text\" [(ngModel)]=\"shgModel.Address\" class=\"form-control\" id=\"Place\" name=\"Address\" required maxlength=\"200\" #AddressDetails=\"ngModel\">\r\n                      <div *ngIf=\"AddressDetails.invalid && AddressDetails.touched\" class=\"alert-danger comman-error-mesage\">\r\n    \r\n                        <span *ngIf=\"lang.en\"> Please Enter Address ! </span>\r\n                        <span *ngIf=\"lang.mr\"> कृपया पत्ता भरा ! </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> VILLAGE </span>\r\n                        <span *ngIf=\"lang.mr\">गाव </span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <select class=\"form-control\" name=\"VillageId\" id=\"village\" [(ngModel)]=\"shgModel.village\" required #villageName=\"ngModel\">\r\n                        <option *ngFor=\"let village of villagess\" [value]=\"village.Key\">{{village.Value}}</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> DISTRICT </span>\r\n                        <span *ngIf=\"lang.mr\">जिल्हा </span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <select [(ngModel)]=\"shgModel.districtIdcreate\" name=\"districtIdcreate\" (change)=\"getselectTaluka(districtIdcreate.viewModel)\" class=\"form-control\"\r\n                        id=\"districtIdcreate\" required #SelectDistrictId=\"ngModel\">\r\n                        <option *ngFor=\"let dis of ditricts\" [value]=\"dis.Id\">{{dis.Name}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"SelectDistrictId.invalid && SelectDistrictId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <span *ngIf=\"lang.en\"> Please Select District ! </span>\r\n                        <span *ngIf=\"lang.mr\"> कृपया जिल्हा निवडा ! </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> TALUKA </span>\r\n                        <span *ngIf=\"lang.mr\">तालुका </span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <select [(ngModel)]=\"shgModel.TalukaId\" name=\"TalukaId\" class=\"form-control\" id=\"TalukaId\" required #SelectTalukaId=\"ngModel\">\r\n                        <option *ngFor=\"let getAllTaluka of talukas\" [value]=\"getAllTaluka.Key\">{{getAllTaluka.Value}}</option>\r\n                      </select>\r\n                      <div *ngIf=\"SelectTalukaId.invalid && SelectTalukaId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <span *ngIf=\"lang.en\"> Please Select Taluka ! </span>\r\n                        <span *ngIf=\"lang.mr\"> कृपया तालुका निवडा ! </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> PIN CODE </span>\r\n                        <span *ngIf=\"lang.mr\">पिन कोड </span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <input type=\"number\" [(ngModel)]=\"shgModel.PINCode\" class=\"form-control\" id=\"PINCode\" name=\"PINCode\" maxlength=\"10\" required #PINCodeValue=\"ngModel\">\r\n                      <div *ngIf=\"PINCodeValue.invalid && PINCodeValue.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <div [hidden]=\"!PINCodeValue.hasError('required')\">\r\n                          <span *ngIf=\"lang.en\"> Pin Code is requierd ! </span>\r\n                          <span *ngIf=\"lang.mr\">पिन कोड आवश्यक ! </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> PAN CARD NUMBER </span>\r\n                        <span *ngIf=\"lang.mr\"> पॅन कार्ड नंबर</span>\r\n                      </label>\r\n                      <input type=\"text\" [(ngModel)]=\"setUpdatedValues.PANnumber\" class=\"form-control\" id=\"Place\" name=\"PANnumber\" required maxlength=\"10\" #PANCardValue=\"ngModel\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"from-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> BANK A/C NUMBER </span>\r\n                        <span *ngIf=\"lang.mr\"> बँक खाते क्रमांक</span>\r\n                        <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                      </label>\r\n                      <input type=\"number\" [(ngModel)]=\"shgModel.BankAccountNumber\" class=\"form-control\" id=\"BankAccountNumber\" name=\"BankAccountNumber\"\r\n                        required #BankAccountNumberHash=\"ngModel\" />\r\n                      <div *ngIf=\"BankAccountNumberHash.invalid && BankAccountNumberHash.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <div [hidden]=\"!BankAccountNumberHash1.hasError('required')\">Bank Account Number is required</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"from-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> CONFIRM BANK A/C NUMBER</span>\r\n                        <span *ngIf=\"lang.mr\"> कन्फर्म बँक खाते क्रमांक</span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <input type=\"number\" [(ngModel)]=\"shgModel.BankAccountNumber_\" class=\"form-control\" id=\" BankAccountNumber_\" name=\"BankAccountNumber_\"\r\n                        #BankAccountNumberhash1_=\"ngModel\">\r\n                      <div *ngIf=\"BankAccountNumber != BankAccountNumber_\" class=\"alert-danger comman-error-mesage\">\r\n                        <span *ngIf=\"lang.en\"> Account number is not match with confirm bank account number !</span>\r\n                        <span *ngIf=\"lang.mr\"> बँक नंबरच्या पुष्टीकरणासह खाते क्रमांक जुळत नाही!</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> BANK NAME</span>\r\n                        <span *ngIf=\"lang.mr\"> बँकेचे नाव </span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <input type=\"text\" [(ngModel)]=\"shgModel.BankName\" class=\"form-control\" id=\"BankName\" name=\"BankName\" required maxlength=\"50\" #SHGBankName=\"ngModel\">\r\n                      <div *ngIf=\"SHGBankName.invalid && SHGBankName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <span *ngIf=\"lang.en\"> Please Enter Bank Name !</span>\r\n                        <span *ngIf=\"lang.mr\"> कृपया बँकेचे नाव भरा ! </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> BRANCH NAME</span>\r\n                        <span *ngIf=\"lang.mr\"> शाखाचे नाव </span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <input type=\"text\" [(ngModel)]=\"shgModel.BranchName\" class=\"form-control\" id=\"BranchName\" name=\"BranchName\" maxlength=\"50\" required\r\n                        #SHGBranchName=\"ngModel\">\r\n                      <div *ngIf=\"SHGBranchName.invalid && SHGBranchName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <span *ngIf=\"lang.en\"> Please Enter Branch Name !</span>\r\n                        <span *ngIf=\"lang.mr\"> कृपया बांचचे नाव भरा ! </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> IFSC CODE</span>\r\n                        <span *ngIf=\"lang.mr\"> आयएफएससी कोड </span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <input type=\"text\" [(ngModel)]=\"shgModel.IFSCCode\" class=\"form-control\" id=\"IFSCCode\" name=\"IFSCCode\" maxlength=\"25\" required #IFSCCodeValue=\"ngModel\">\r\n                      <div *ngIf=\"IFSCCodeValue.invalid && IFSCCodeValue.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <span *ngIf=\"lang.en\"> Please Enter IFSC Code !</span>\r\n                        <span *ngIf=\"lang.mr\"> कृपया आयएफएससी कोड भरा ! </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> BANK ADDRESS</span>\r\n                        <span *ngIf=\"lang.mr\"> बँकेचा पत्ता </span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <textarea type=\"text\" [(ngModel)]=\"shgModel.BankAddress\" class=\"form-control\" id=\"BankAddress\" name=\"BankAddress\" required maxlength=\"200\"\r\n                        #SHGBankAddress=\"ngModel\"></textarea>\r\n                      <div *ngIf=\"SHGBankAddress.invalid && SHGBankAddress.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <span *ngIf=\"lang.en\"> Please Enter Bank Address !</span>\r\n                        <span *ngIf=\"lang.mr\"> कृपया बँकेचा पत्ता भरा ! </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\"> CONTACT NUMBER</span>\r\n                        <span *ngIf=\"lang.mr\"> संपर्क क्रमांक </span>\r\n                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                      </label>\r\n                      <input type=\"number\" [(ngModel)]=\"shgModel.ContactNumber\" class=\"form-control\" id=\"ContactNumber\" name=\"ContactNumber\" required #SHGContactNumber=\"ngModel\"\r\n                        maxlength=\"12\">\r\n                      <div *ngIf=\"SHGContactNumber.errors && (SHGContactNumber.dirty || SHGContactNumber.touched)\" class=\" alert alert-danger\">\r\n                        <div [hidden]=\"!SHGContactNumber.errors.required\">Contact Number is required !</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                  <button class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"updateSHG(UpdateShgForm)\">Yes</button>\r\n                  <button class=\"btn btn-default\" data-dismiss=\"modal\" style=\"float:right\"> CANCEL</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n         </div>\r\n        </div> \r\n      </div>\r\n  \r\n"

/***/ }),

/***/ "../../../../../src/app/components/district/shg/shg.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DistrictSHGComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_district_services__ = __webpack_require__("../../../../../src/app/services/district.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__shg_model_component__ = __webpack_require__("../../../../../src/app/components/district/shg/shg.model.component.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var DistrictSHGComponent = (function () {
    function DistrictSHGComponent(_districtService, _globalURL, _commonService, _access_token, _commonMessage, _router, lang, shgModel) {
        this._districtService = _districtService;
        this._globalURL = _globalURL;
        this._commonService = _commonService;
        this._access_token = _access_token;
        this._commonMessage = _commonMessage;
        this._router = _router;
        this.lang = lang;
        this.shgModel = shgModel;
        this.savingGroups = "";
    }
    DistrictSHGComponent.prototype.ngOnInit = function () {
        //    this.getMembers();
        this.getVoIdAndName();
        this.getSchemeKVP();
    };
    DistrictSHGComponent.prototype.getSchemeKVP = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._districtService.get(this._globalURL.GET_SCHEME_KVP, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._commonMessage.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.schemes = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._commonMessage.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._commonMessage.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    DistrictSHGComponent.prototype.getVoIdAndName = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        this._districtService.get(this._globalURL.GET_VOID_NAME_FOR_DISTRICT, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.Vos = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                //  this.ShowErrormsg = true;
                // this.message = "Vo is not get";
                setInterval(function () {
                    _this._globalURL.isSaveSuccessMessage = false;
                    //  this.ShowErrormsg = false;
                }, 5000);
            }
        });
    };
    DistrictSHGComponent.prototype.getShgByVoIdAndStatus = function (selectedVoId) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._districtService.get(this._globalURL.GET_ALL_SHG_BYVOIDSTATUS + "?voId=" + selectedVoId + "&status=" + 2, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._commonMessage.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.savingGroups = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._commonMessage.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._commonMessage.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    DistrictSHGComponent.prototype.setUpdatedValues = function (data) {
        debugger;
        alert("hi update");
        this.shgModel = data;
    };
    DistrictSHGComponent.prototype.updateSHG = function (updatedData) {
        var _this = this;
        debugger;
        this._districtService.post(this._globalURL.UPDATE_SHG_MASTER, updatedData.value, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._commonMessage.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    // updatedData.control.reset();
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._commonMessage.SHGUpdateMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    // this.getMembers();
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.message = _this._commonMessage.WarningMsg;
                    _this.showErrorMessage = true;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            }
            else {
                if (res.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._commonMessage.SHGUpdateMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    //this.getMembers();
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._commonMessage.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._commonMessage.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    DistrictSHGComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/district/shg/shg.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_district_services__["a" /* DISTRICTService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_3__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_4__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_5__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_6__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_7__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_8__shg_model_component__["a" /* DistrictShgMasterModel */]])
    ], DistrictSHGComponent);
    return DistrictSHGComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/district/shg/shg.model.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DistrictShgMasterModel; });
var DistrictShgMasterModel = (function () {
    function DistrictShgMasterModel() {
        this.Id = 0;
        this.DistrictId = 0;
        this.TalukaId = 0;
        this.AreaId = 0;
        this.Code = '';
        this.ParentCode = '';
        this.Name = '';
        this.SchemeId = '';
        this.BankAccountNumber = '';
        this.ConfirmBankAccountnumber = '';
        this.IFSCCode = '';
        this.BankName = '';
        this.BankAddress = '';
        this.AccountOpeningDate = '';
        this.BranchName = '';
        this.VillageName = '';
        this.Place = '';
        this.ContactNumber = '';
        this.DesignationName = '';
    }
    return DistrictShgMasterModel;
}());



/***/ }),

/***/ "../../../../../src/app/components/public/Public.Component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PublicComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_FileService_file_upload_service__ = __webpack_require__("../../../../../src/app/services/FileService/file_upload.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src_config_js__ = __webpack_require__("../../../../../src/config.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__src_config_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__src_config_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__ = __webpack_require__("../../../platform-browser/esm5/platform-browser.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_login_service__ = __webpack_require__("../../../../../src/app/services/login.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




// import { DatepickerOptions } from 'ng2-datepicker';
// import * as frLocale from 'date-fns/locale/en';
// import { DatepickerOptions } from 'ng2-datepicker';




var PublicComponent = (function () {
    function PublicComponent(router, _globalAssets, globalVariables, _fileUploadService, titleService, loginService) {
        this.router = router;
        this._globalAssets = _globalAssets;
        this.globalVariables = globalVariables;
        this._fileUploadService = _fileUploadService;
        this.titleService = titleService;
        this.loginService = loginService;
        this.date = new Date();
        //    @ViewChild('closeBtn') closeBtn_: ElementRef;
        this._message = "Hey from parent";
        this.setTitle("MAVIM - CSG");
        //this.getAllCMRCKVP();
    }
    PublicComponent.prototype.setTitle = function (newTitle) {
        this.titleService.setTitle(newTitle);
    };
    PublicComponent.prototype.handleUpload = function (data) {
        debugger;
        if (data && data.response) {
            data = JSON.parse(data.response);
            this.uploadFile = data;
        }
    };
    PublicComponent.prototype.fileChange = function (metadata) {
        debugger;
        var formData = new FormData();
        formData.append("RefId", "2023");
        formData.append("file", metadata);
        this._fileUploadService.post("http://localhost:59611/api/Account/ChangeProfileImage?RefId=2012", formData, "").then(function (res) {
            alert("Success");
        });
    };
    PublicComponent.prototype.getAllCMRCKVP = function () {
        var _this = this;
        debugger;
        this._globalAssets.isLoading = true;
        this.loginService.get(this._globalAssets.GET_ALL_CMRC_KPV, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.Cmrcs = res.Data;
                _this._globalAssets.isLoading = false;
            }
            else {
                _this._globalAssets.isLoading = false;
            }
        });
    };
    PublicComponent.prototype.saveCMRCId = function (cmrcId) {
        this.globalVariables.cmrcIdforPublicPage = cmrcId;
    };
    PublicComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/public/index.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_2__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_3__services_FileService_file_upload_service__["a" /* FileUploadService */],
            __WEBPACK_IMPORTED_MODULE_5__angular_platform_browser__["b" /* Title */],
            __WEBPACK_IMPORTED_MODULE_6__services_login_service__["a" /* LoginService */]])
    ], PublicComponent);
    return PublicComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/public/cmrc/cmrc.component.html":
/***/ (function(module, exports) {

module.exports = "<section>\r\n    <div class=\"box-body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-9\" style=\"margin-top:10px;\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-7 cmrc_detail\">\r\n                        <h2 class=\"\" style=\"margin-top:6px;font-size:26px;\">\r\n                            <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 2\">प्रगती लोकसंचलित साधन केंद्र\r\n                            </span>\r\n                            <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 3\">ओम साई प्रेरणा लोकसंचलित साधन केंद्र\r\n                            </span>\r\n                            <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 5\">सावित्रीबाई फुले लोकसंचलित साधन केंद्र\r\n                            </span>\r\n                        </h2>\r\n                        <br>\r\n                        <h3>महिला आर्थिक विकास महामंडळ (माविम ) ची ओळख </h3>\r\n                        <p>आंतरराष्टीय महिला वर्षाच्या निमित्ताने २४ फेब्रुवारि १९७५ साली महाराष्ट्र शासनाचा अंगीकृत उपक्रम\r\n                            म्हणून महिला आर्थिक विकास महामंडळ अर्थात माविम ची स्थापना करण्यात अली भारताच्या राष्ट्रपती मा.\r\n                            श्रीमती प्रतिभाताई पाटील यांनी महामंडळाचे पहिले अध्यक्षपद भूषविले आहे </p>\r\n                        <br>\r\n                        <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 2\">\r\n                            <h4>प्रगती लोकसंचलित साधन केंद्राची ओळख</h4>\r\n                            <p> महिला आर्थिक विकास महामंडळ रायगड अंतर्गत प्रगती लोकसंचलित साधन केंद्राची स्थापना दि. १-०४-२००९\r\n                                रोजी करण्यात अली प्रगती लोकसंचलित साधन केंद्र हि एक स्वतंत्र संस्था आहे. तसेच रायगड जिल्हा\r\n                                धर्मादाय कार्यालय येथे संस्था नोंदणी अधिनियम\r\n                                <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 2\">\r\n                                    १८६० (नों. क्र. महाराष्ट्र/४९९/०९/१५.१०,२००९) १८६० च\r\n                                </span>\r\n                                ा अधिनियम २१ योग्यरीत्या नोंदणी करण्यात आली. </p>\r\n                        </span>\r\n                        <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 3\">\r\n                            <h4>ओम साई प्रेरणा लोकसंचलित साधन केंद्राची ओळख</h4>\r\n                            <BR>\r\n                        </span>\r\n                        <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 5\">\r\n                            <h4>सावित्रीबाई फुले लोकसंचलित साधन केंद्राची ओळख</h4>\r\n                            महिला आर्थिक विकास महामंडळ रायगड अंतर्गत सावित्रीबाई फुले लोकसंचलित साधन केंद्राची स्थापना दि. ०३/०२/२०१० रोजी करण्यात अली\r\n                            सावित्रीबाई फुले लोकसंचलित साधन केंद्र हि एक स्वतंत्र संस्था आहे. तसेच रायगड जिल्हा धर्मादाय\r\n                            कार्यालय येथे संस्था नोंदणी अधिनियम १८६० (नों. क्र. महाराष्ट्र/१४७/२०११/रायगड १८६० चा अधिनियम\r\n                            २१ योग्यरीत्या नोंदणी करण्यात आली.\r\n                        </span>\r\n                        <h3>\r\n                            <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 2\">प्रगती लोकसंचलित साधन केंद्राचे ध्येय\r\n                            </span>\r\n                            <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 3\">ओम साई प्रेरणा लोकसंचलित साधन केंद्राचे ध्येय\r\n                            </span>\r\n                            <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 5\">सावित्रीबाई फुले लोकसंचलित साधन केंद्राचे ध्येय\r\n                            </span>\r\n                        </h3>\r\n                        <p>चिरंतर विकास प्रक्रियेतून महिलांचा सर्वांगीण विकास घडवून गाव विकास करण्यासाठी सर्व स्तरावर सहकार्य\r\n                            करणे हे ध्येय राहील </p>\r\n                    </div>\r\n                    <div class=\"col-md-5\" style=\"padding-right:0px;\">\r\n                        <div class=\"col-md-12 w3-card w3-animate-zoom\" style=\"background-color:#5f534e08; box-shadow: 1px 3px 11px #bababa;\">\r\n                            <div class=\"col-md-6\">\r\n                                <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 2\">\r\n                                    <img src=\"./assets/CMRC_1.jpg\" class=\"slide_img img-responsive\">\r\n                                    <div class=\"slide_content\">\r\n                                        <p>\r\n                                            <b>MEERA BHALCHANDRA THORVE</b>\r\n                                        </p>\r\n                                        <p>CMRC PRESIDENT</p>\r\n                                    </div>\r\n                                </span>\r\n                                <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 3\">\r\n                                    <img src=\"./assets/no_img.png\" class=\"slide_img img-responsive\">\r\n                                    <div class=\"slide_content\">\r\n                                        <p>\r\n                                            <b>PRAMILA GAWADE</b>\r\n                                        </p>\r\n                                        <p>CMRC PRESIDENT</p>\r\n                                    </div>\r\n                                </span>\r\n                                <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 5\">\r\n                                    <img src=\"./assets/no_img.png\" class=\"slide_img img-responsive\">\r\n                                    <div class=\"slide_content\">\r\n                                        <p>\r\n                                            <b>MEGHA JADHAV</b>\r\n                                        </p>\r\n                                        <p>CMRC PRESIDENT</p>\r\n                                    </div>\r\n                                </span>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 2\">\r\n                                    <img src=\"./assets/CMRC_2.jpg\" class=\"slide_img img-responsive\">\r\n                                    <div class=\"slide_content\">\r\n                                        <p>\r\n                                            <b>PADMAVATI CHANDRAKANT GAIKWAD</b>\r\n                                        </p>\r\n                                        <p>CMRC MANAGER</p>\r\n                                    </div>\r\n                                </span>\r\n                                <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 3\">\r\n                                    <img src=\"./assets/no_img.png\" class=\"slide_img img-responsive\">\r\n                                    <div class=\"slide_content\">\r\n                                        <p>\r\n                                            <b>MINAL SALVE</b>\r\n                                        </p>\r\n                                        <p>CMRC MANAGER</p>\r\n                                    </div>\r\n                                </span>\r\n                                <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 5\">\r\n                                    <img src=\"./assets/no_img.png\" class=\"slide_img img-responsive\">\r\n                                    <div class=\"slide_content\">\r\n                                        <p>\r\n                                            <b>SHAMIM CHAUDHARI</b>\r\n                                        </p>\r\n                                        <p>CMRC MANAGER</p>\r\n                                    </div>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12 cmrc_detail\" style=\"margin-top:9px;\">\r\n\r\n                        <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 2\">\r\n                            <h4>\r\n                                प्रगती लोकसंचलित साधन केंद्राची पार्श्वभूमी\r\n                            </h4>\r\n                            <p>तेजस्विनी महाराष्ट्र ग्रामीण महिला सक्षमीकरण कार्यक्रम आहे. हा कार्यक्रम म्हणजे महिला सक्षमीकरण\r\n                                चळवळ होय. लोकसंचलित साधन केंद्र कर्जत मु. म्हाडा कॉलनी ,रूम नं ८७,भाग्यश्री गोडबोले ब्लॉक,\r\n                                पोलीस ग्राऊंडजवळ, कर्जत ता. कर्जत जि. रायगड या ठिकाणी कार्यरत आहे. या प्रगती लोकसंचलित साधन\r\n                                केंद्रामध्ये ३ तालुके (कर्जत, खालापूर, पनवेल ) ७१ गावी सहभागी झालेली आहेत. सी. एम. आर. सी\r\n                                ते गावातील अंतर किमान २५ ते ५५ कि.मी. एवढे आहे. प्रगती लोकसंचलित साधन केंद्र येथे ७२ गावातून\r\n                                ३७२ गट सहभागी झालेले असून प्रत्येक गावामध्ये एक याप्रमाणे ६४ गावविकास समित्या आहेत . ६४ गावातील\r\n                                एक प्रतिनिधी खुली निवडणूक पद्धतीने निवडणूक घेऊन कार्यकारी मंडळाची स्थापना करण्यात आली आहे.</p>\r\n                            <p>\r\n                                कार्यकारी मंडळातील सदस्यांची निवडणूक घेऊन ७ लोकांचे संचालक मंडळ स्थापन करण्यात आले आहे. ज्यामध्ये अध्यक्ष-१,उपाध्यक्ष १,सचिव\r\n                                १, व कार्यकारी मंडळ यांची नेमणूक केलेली आहे. संचालक मंडळाची सभा दर महिन्याच्या २८ तारखेला\r\n                                प्रगती लोकसंचलित साधन केंद्र, कर्जत जि. रायगड येथील कार्यालयात होय ते, तर कार्यकारिणी सभासद\r\n                                बैठक महिन्यातून एकदा होय ते\r\n                            </p>\r\n                        </span>\r\n\r\n                        <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 3\">\r\n                            <h4>ओम साई प्रेरणा लोकसंचलित साधन केंद्राची पार्श्वभूमी</h4>\r\n                            <p></p>\r\n                        </span>\r\n                        <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 5\">\r\n                            <h4>सावित्रीबाई फुले लोकसंचलित साधन केंद्राची पार्श्वभूमी</h4>\r\n                            <p>\r\n                                तेजस्विनी महाराष्ट्र ग्रामीण महिला सक्षमीकरण कार्यक्रम आहे. हा कार्यक्रम म्हणजे महिला सक्षमीकरण चळवळ होय. लोकसंचलित साधन\r\n                                केंद्र महाड सुशीला बंगला सरेकर आळी त.महाड जि. रायगड या ठिकाणी कार्यरत आहे. या सावित्रीबाई\r\n                                फुले लोकसंचलित साधन केंद्र महाड तालुक्यातील चाळीस गावात काम करीत असून सी. एम. आर. सी ते गावातील\r\n                                अंतर किमान २० ते २५ कि.मी. एवढे आहे. सावित्रीबाई फुले लोकसंचलित साधन केंद्र येथे ४० गावातून\r\n                                २९८ गट सहभागी झालेले असून प्रत्येक गावामध्ये एक याप्रमाणे ४० गावविकास समित्या आहेत . ४० गावातील\r\n                                एक प्रतिनिधी खुली निवडणूक पद्धतीने निवडणूक घेऊन कार्यकारी मंडळाची स्थापना करण्यात आली आहे.\r\n                                कार्यकारी मंडळातील सदस्यांची निवडणूक घेऊन ९ लोकांचे संचालक मंडळ स्थापन करण्यात आले आहे. ज्यामध्ये\r\n                                अध्यक्ष-१,उपाध्यक्ष १,सचिव १, व कार्यकारी मंडळ यांची नेमणूक केलेली आहे. संचालक मंडळाची सभा\r\n                                दर महिन्याच्या २८ तारखेला सावित्रीबाई फुले लोकसंचलित साधन केंद्र, महाड जि. रायगड येथील कार्यालयात\r\n                                होते,तर कार्यकारिणी सभासद बैठक महिन्यातून एकदा होते.\r\n                            </p>\r\n                        </span>\r\n                        <h3>उद्देश </h3>\r\n                        <p>१. लोकसंचलित साधन केंद्राचे सामाजिक,आर्थिक,शैक्षणिक व आरोग्य ह्या घटकांवर आधारित महिलांचा विकास करणे\r\n                            हे उद्देश असतील </p>\r\n                        <p>२. दारिद्र्य निर्मूलन करणे. </p>\r\n                        <p>३. कुपोषण दूर करणे. </p>\r\n                        <p>४. महिलांच्या क्षमता विकसित करणे.</p>\r\n                        <p>५. महिलांचा आत्मविश्वास वाढविणे. </p>\r\n                        <p>६. महिलांच्या सक्षमीकरण सोबतच महिलांचे शारीरिक कष्ट कमी करण्यासाठी वेगवेगळे कार्यक्रम राबविणे.</p>\r\n                        <p>७. सामाजिक क्षमता कार्यक्रम राबविणे. </p>\r\n                        <p>८. सामाजिक कार्यक्रमातून विविध समस्यांवर प्रकाश टाकून समस्यांचे निराकरण करण्यासाठी प्रयत्न करणे.\r\n                            (हुंडाबळी ,स्त्रीभ्रूणहत्या इ.).</p>\r\n                        <p>९. गाव विकासाच्या दृष्टीने शासनाचे कार्यक्रम राबविण्यासाठी शासन यंत्रणेस संपूर्ण सहकार्य करणे.</p>\r\n                        <p>१०. स्व.सं. बचत गटाच्या आर्थिक गरज पूर्ण करण्यासाठी बँक लिंकेजवर भर देणे व तातडीच्या मार्गदर्शन व\r\n                            साह्य प्रशिक्षण करणे . </p>\r\n                        <p>११. उद्योजकीय विकास घडवून आणणे व त्यासाठी महिलांना उपजीविका विकासासाठी कोशल्यपर प्रशिक्षण देणे .उद्योग\r\n                            व्यवसाय उभारणी (वैयक्तिक व सामूहिक )प्रशिक्षण देणे. </p>\r\n                        <p>१२. महिलांना साक्षर बनविण्यासाठी कार्यशाळेचे आयोजन करणेबाबत बचत गटांना प्रोत्साहित करणे. </p>\r\n                        <p>१३. स्थानिक स्वराज्य संस्थेमध्ये कार्य करीत असलेल्या महिलांना मार्गदर्शन करणे. </p>\r\n                        <p>१४.प्रौढ साक्षरता वर्ग, निरंतर शिक्षण अभियाना अंतर्गत कार्यक्रमाचे आयोजन करण्यासाठी बचत गटांना प्रोत्साहित\r\n                            करणे. </p>\r\n                        <p>१५. शैक्षणिक सहलीचे आयोजन करण्याचे नियोजन करणे. </p>\r\n                        <p>१६. महिलांच्या आरोग्य संबंधीचे शिबिराचे आयोजन करण्यासाठी बचत गटांना मार्गदर्शन करणे. </p>\r\n                        <p>१७.एड्स विरोधी हिमोग्लोबिन तपासणी इ. कार्यक्रमांवर बचत गटांनी भर देण्यासाठी प्रोत्साहित करणे. </p>\r\n\r\n                        <h3>सेवा </h3>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>स्व.म. ब. गट स्थापन करणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>स्व.म. ब. गटाला दर महिन्याला सहयोगिनीने भेट देणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>स्व.म. ब. गटांची मीटिंग घेणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>स्व.म. ब. गटांचा लेखा हिशोब तपासणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>स्व.म. ब. गटांचे रिपोर्ट शी सॉफ्टवेअर मध्ये संकलित करणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>स्व.म. ब. गटांचे ऑडिट व ग्रेडेशन करणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>स्व.म. ब. गटातून महिलांना अंतर्गत कर्ज व्यवहार करण्यास सक्षम करणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>स्व.म. ब. गटाला बँकेचे कर्ज मिळवून देणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>स्व.म. ब. गटाला उद्योग प्रशिक्षण देणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>स्व.म. ब. गटातील महिलांना विमा योजनेचा लाभ मिळवून देणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>कृतिसंग्रामच्या माध्यमातून विविध योजनेचा महिलानां लाभ मिळवून देणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>उद्योग करणाऱ्या महिलांना बाजारपेठ उपलब्ध करून देण्यास मार्गदर्शन करणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>४ % व्याजाचा परतावा मिळवून देण्यास मदत करणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>गावामध्ये विविध सामाजिक उपक्रम राबवणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>उद्योजक महिलांचे एम. एल. पी. उभे करून देण्यास मदत करणे. </p>\r\n                        <p>\r\n                            <i class=\"fa fa-chevron-right list_point\"></i>विविध विभंगाशी समन्वय साधून महिलांचे प्रश्न सोडवणे. </p>\r\n\r\n                        <div style=\"margin-top:10px;\">\r\n                            <table class=\"table table-bordered\" cellspacing=\"0\" width=\"100%\">\r\n                                <caption style=\"text-align:center;color:black; font-family: 'Gentium Book Basic', serif;\">\r\n                                    <h3>\r\n                                        <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 2\">प्रगती लोकसंचलित साधन केंद्र, कर्जत\r\n                                        </span>\r\n                                        <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 3\">ओम साई प्रेरणा लोकसंचलित साधन केंद्र, अलिबाग\r\n                                        </span>\r\n                                        <span *ngIf=\"globalVariables.cmrcIdforPublicPage == 5\">सावित्रीबाई फुले लोकसंचलित साधन केंद्र, महाड\r\n                                        </span>\r\n                                    </h3>\r\n                                </caption>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>अ. क्र </th>\r\n                                        <th>तपशिल </th>\r\n                                        <th>Tejasvini</th>\r\n                                        <th>NULM</th>\r\n                                        <th>एकुण </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngIf=\"globalVariables.cmrcIdforPublicPage == 2\">\r\n                                    <tr>\r\n                                        <td>१</td>\r\n                                        <td>स्थापना दिनांक </td>\r\n                                        <td>१५-१०-२००९</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२</td>\r\n                                        <td>एकूण तालुके </td>\r\n                                        <td>२</td>\r\n                                        <td>२</td>\r\n                                        <td>४</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३</td>\r\n                                        <td>एकूण गावे </td>\r\n                                        <td>७४</td>\r\n                                        <td>४९</td>\r\n                                        <td>१२३</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>४</td>\r\n                                        <td>एकूण गट </td>\r\n                                        <td>३५७</td>\r\n                                        <td>६४ </td>\r\n                                        <td>४२१</td>\r\n                                    </tr>\r\n\r\n\r\n                                    <tr>\r\n                                        <td>५</td>\r\n                                        <td>CMRC मधील सभासदांची संखा</td>\r\n                                        <td>५०८१</td>\r\n                                        <td>७०४</td>\r\n                                        <td>५७८५</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>६</td>\r\n                                        <td>BPL</td>\r\n                                        <td>३३२</td>\r\n                                        <td>५६०</td>\r\n                                        <td>८९२</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>७</td>\r\n                                        <td>PBPL</td>\r\n                                        <td>४०२२</td>\r\n                                        <td>१४४</td>\r\n                                        <td>४१६६</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>८</td>\r\n                                        <td>APL</td>\r\n                                        <td>७२७</td>\r\n                                        <td>०</td>\r\n                                        <td>७२७</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>९</td>\r\n                                        <td>SC</td>\r\n                                        <td>८९०</td>\r\n                                        <td>०</td>\r\n                                        <td>८९०</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१०</td>\r\n                                        <td>ST</td>\r\n                                        <td>२१९</td>\r\n                                        <td>०</td>\r\n                                        <td>२१९</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>११</td>\r\n                                        <td>OBC</td>\r\n                                        <td>१८०३</td>\r\n                                        <td>०</td>\r\n                                        <td>१८०३</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१२</td>\r\n                                        <td>NT</td>\r\n                                        <td>१२४</td>\r\n                                        <td>०</td>\r\n                                        <td>१२४</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१३</td>\r\n                                        <td>MINNORITY</td>\r\n                                        <td>२</td>\r\n                                        <td>0</td>\r\n                                        <td>२०२०</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१४</td>\r\n                                        <td>OPEN</td>\r\n                                        <td>२०२०</td>\r\n                                        <td>0</td>\r\n                                        <td>२०२०</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१५</td>\r\n                                        <td>एकूण </td>\r\n                                        <td>२०२०</td>\r\n                                        <td>०</td>\r\n                                        <td>२०२०</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१६</td>\r\n                                        <td>CMRC मधील एकूण गाव सॅच्युरेशन </td>\r\n                                        <td>६६</td>\r\n                                        <td>०</td>\r\n                                        <td>६६</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१७</td>\r\n                                        <td>CMRC मधील एकूण ग्रामसंस्था </td>\r\n                                        <td>६४ </td>\r\n                                        <td>०</td>\r\n                                        <td>६४ </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१८</td>\r\n                                        <td>कार्यकारणीतील महिलांची संख्या </td>\r\n                                        <td>७</td>\r\n                                        <td>०</td>\r\n                                        <td>७</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१९</td>\r\n                                        <td>गाव प्रतिनिधी महिलांची संख्या </td>\r\n                                        <td>६४</td>\r\n                                        <td>०</td>\r\n                                        <td>६४</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२०</td>\r\n                                        <td>CMRC मधील एकूण कर्मचारी</td>\r\n                                        <td>१५ </td>\r\n                                        <td>१०</td>\r\n                                        <td>२५</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२१</td>\r\n                                        <td>एकूण कायदासाथी</td>\r\n                                        <td>२०</td>\r\n                                        <td>०</td>\r\n                                        <td>२०</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२२</td>\r\n                                        <td>काबाडकष्टाचे मॉडल</td>\r\n                                        <td> १९</td>\r\n                                        <td>०</td>\r\n                                        <td>१९</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२३</td>\r\n                                        <td>एकूण बचत </td>\r\n                                        <td>२०४५७१२०</td>\r\n                                        <td>१९२००</td>\r\n                                        <td>२०४७६३२०</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२४</td>\r\n                                        <td>एकूण अंतर्गत कर्ज वाटप</td>\r\n                                        <td>२३३२३८८७८ </td>\r\n                                        <td>४००००</td>\r\n                                        <td>२३३२७८८७८</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>२५</td>\r\n                                        <td>एकूण अंतर्गत कर्ज परतफेड,व्याजासह</td>\r\n                                        <td>१८३५२९५०४</td>\r\n                                        <td>१११००</td>\r\n                                        <td>१८३५४०६०४</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२६</td>\r\n                                        <td>एकूण बँक कर्ज(गट)वाटप </td>\r\n                                        <td>११२</td>\r\n                                        <td>१</td>\r\n                                        <td>११३</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२७</td>\r\n                                        <td>एकूण बँक कर्ज रक्कम</td>\r\n                                        <td>२१२७९३००</td>\r\n                                        <td>१०००००</td>\r\n                                        <td>२१३७९३००</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२८</td>\r\n                                        <td>एकूण बँक कर्ज परतफेड</td>\r\n                                        <td>१७२९४२२९</td>\r\n                                        <td>५७००२</td>\r\n                                        <td>१७३५१२३१</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२९</td>\r\n                                        <td>एकूण CSG</td>\r\n                                        <td>५</td>\r\n                                        <td>०</td>\r\n                                        <td>५</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३०</td>\r\n                                        <td>CSG वितरीत फंड</td>\r\n                                        <td> १४०००००</td>\r\n                                        <td>०</td>\r\n                                        <td>१४०००००</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३१</td>\r\n                                        <td>एकूण उलाढाल</td>\r\n                                        <td>१९०७६००</td>\r\n                                        <td>०</td>\r\n                                        <td>१९०७६००</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३२</td>\r\n                                        <td>CSG मधून मिळालेले CMRC ला एकूण व्याज </td>\r\n                                        <td>११२०८६</td>\r\n                                        <td>०</td>\r\n                                        <td>११२०८६</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३३</td>\r\n                                        <td>MLP ला वितरीत केलेला फंड</td>\r\n                                        <td>३०६३५०</td>\r\n                                        <td>०</td>\r\n                                        <td>३०६३५०</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३४</td>\r\n                                        <td>MLP मधून मिळालेले CMRC ला एकूण व्याज</td>\r\n                                        <td>१३१९७</td>\r\n                                        <td>०</td>\r\n                                        <td>१३१९७</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"globalVariables.cmrcIdforPublicPage == 5\">\r\n                                    <tr>\r\n                                        <td>१</td>\r\n                                        <td>स्थापना दिनांक </td>\r\n                                        <td>०२/०३/२०१०</td>\r\n                                        <td></td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२</td>\r\n                                        <td>एकूण तालुके </td>\r\n                                        <td>1</td>\r\n                                        <td>2</td>\r\n                                        <td>3</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३</td>\r\n                                        <td>एकूण गावे </td>\r\n                                        <td>40</td>\r\n                                        <td>34</td>\r\n                                        <td>0</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>४</td>\r\n                                        <td>एकूण गट </td>\r\n                                        <td>२९८</td>\r\n                                        <td>60</td>\r\n                                        <td>357</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>५</td>\r\n                                        <td>CMRC मधील सभासदांची संखा</td>\r\n                                        <td>३९३२</td>\r\n                                        <td>710/td>\r\n                                            <td>४६४२</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>६</td>\r\n                                        <td>BPL</td>\r\n                                        <td>९८७</td>\r\n                                        <td>231</td>\r\n                                        <td>1218</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>७</td>\r\n                                        <td>PBPL</td>\r\n                                        <td>२३०८</td>\r\n                                        <td>357</td>\r\n                                        <td>२६६५</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>८</td>\r\n                                        <td>APL</td>\r\n                                        <td>६३७</td>\r\n                                        <td>122</td>\r\n                                        <td>७५९</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>९</td>\r\n                                        <td>SC</td>\r\n                                        <td>९१०</td>\r\n                                        <td>२३१</td>\r\n                                        <td>११४१</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१०</td>\r\n                                        <td>ST</td>\r\n                                        <td>120</td>\r\n                                        <td>0</td>\r\n                                        <td>120</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>११</td>\r\n                                        <td>OBC</td>\r\n                                        <td>१४८४</td>\r\n                                        <td>217</td>\r\n                                        <td>१७०१</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१२</td>\r\n                                        <td>NT</td>\r\n                                        <td>10</td>\r\n                                        <td>0</td>\r\n                                        <td>10</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१३</td>\r\n                                        <td>MINNORITY</td>\r\n                                        <td>33</td>\r\n                                        <td>0</td>\r\n                                        <td>33</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१४</td>\r\n                                        <td>OPEN</td>\r\n                                        <td>१३७५</td>\r\n                                        <td>262</td>\r\n                                        <td>१६३७</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१५</td>\r\n                                        <td>एकूण </td>\r\n                                        <td>३९३२</td>\r\n                                        <td>710</td>\r\n                                        <td>४६४२</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१६</td>\r\n                                        <td>CMRC मधील एकूण गाव सॅच्युरेशन </td>\r\n                                        <td>31</td>\r\n                                        <td>0</td>\r\n                                        <td>31</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१७</td>\r\n                                        <td>CMRC मधील एकूण ग्रामसंस्था </td>\r\n                                        <td>31</td>\r\n                                        <td>0</td>\r\n                                        <td>31</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१८</td>\r\n                                        <td>कार्यकारणीतील महिलांची संख्या </td>\r\n                                        <td>9</td>\r\n                                        <td>0</td>\r\n                                        <td>9</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१९</td>\r\n                                        <td>गाव प्रतिनिधी महिलांची संख्या </td>\r\n                                        <td>40</td>\r\n                                        <td>0</td>\r\n                                        <td>40</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२०</td>\r\n                                        <td>CMRC मधील एकूण कर्मचारी</td>\r\n                                        <td>12</td>\r\n                                        <td>10</td>\r\n                                        <td>22</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२१</td>\r\n                                        <td>एकूण कायदासाथी</td>\r\n                                        <td>16</td>\r\n                                        <td>0</td>\r\n                                        <td>16</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२२</td>\r\n                                        <td>काबाडकष्टाचे मॉडल</td>\r\n                                        <td>12</td>\r\n                                        <td>0</td>\r\n                                        <td>12</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२३</td>\r\n                                        <td>एकूण बचत </td>\r\n                                        <td>३३४२२७९</td>\r\n                                        <td>0</td>\r\n                                        <td>३३४२२७९</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२४</td>\r\n                                        <td>एकूण अंतर्गत कर्ज वाटप</td>\r\n                                        <td>६७७१२५६</td>\r\n                                        <td>0</td>\r\n                                        <td>६७७१२५६</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>२५</td>\r\n                                        <td>एकूण अंतर्गत कर्ज परतफेड,व्याजासह</td>\r\n                                        <td>४७२२०११०</td>\r\n                                        <td>0</td>\r\n                                        <td>४७२२०११०</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२६</td>\r\n                                        <td>एकूण बँक कर्ज(गट)वाटप </td>\r\n                                        <td>११२</td>\r\n                                        <td>१</td>\r\n                                        <td>११३</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२७</td>\r\n                                        <td>एकूण बँक कर्ज रक्कम</td>\r\n                                        <td>२१२</td>\r\n                                        <td>1</td>\r\n                                        <td>२१3</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२८</td>\r\n                                        <td>एकूण बँक कर्ज परतफेड</td>\r\n                                        <td>१६६७३१०८</td>\r\n                                        <td>0</td>\r\n                                        <td>१६६७३१०८</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२९</td>\r\n                                        <td>एकूण CSG</td>\r\n                                        <td>7</td>\r\n                                        <td>-</td>\r\n                                        <td>7</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३०</td>\r\n                                        <td>CSG वितरीत फंड</td>\r\n                                        <td>३१५००००</td>\r\n                                        <td>0</td>\r\n                                        <td>३१५००००</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३१</td>\r\n                                        <td>एकूण उलाढाल</td>\r\n                                        <td>५९२३५००</td>\r\n                                        <td>0</td>\r\n                                        <td>५९२३५००</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३२</td>\r\n                                        <td>CSG मधून मिळालेले CMRC ला एकूण व्याज </td>\r\n                                        <td>२९५५७०</td>\r\n                                        <td>0</td>\r\n                                        <td>२९५५७०</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३३</td>\r\n                                        <td>MLP ला वितरीत केलेला फंड</td>\r\n                                        <td>४६४४००</td>\r\n                                        <td>0</td>\r\n                                        <td>४६४४००</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३४</td>\r\n                                        <td>MLP मधून मिळालेले CMRC ला एकूण व्याज</td>\r\n                                        <td>३१८१८</td>\r\n                                        <td>0</td>\r\n                                        <td>३१८१८</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                <tbody *ngIf=\"globalVariables.cmrcIdforPublicPage == 3\">\r\n                                    <tr>\r\n                                        <td>१</td>\r\n                                        <td>स्थापना दिनांक </td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२</td>\r\n                                        <td>एकूण तालुके </td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३</td>\r\n                                        <td>एकूण गावे </td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>४</td>\r\n                                        <td>एकूण गट </td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>५</td>\r\n                                        <td>CMRC मधील सभासदांची संखा</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>६</td>\r\n                                        <td>BPL</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>७</td>\r\n                                        <td>PBPL</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>८</td>\r\n                                        <td>APL</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>९</td>\r\n                                        <td>SC</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१०</td>\r\n                                        <td>ST</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>११</td>\r\n                                        <td>OBC</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१२</td>\r\n                                        <td>NT</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१३</td>\r\n                                        <td>MINNORITY</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१४</td>\r\n                                        <td>OPEN</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१५</td>\r\n                                        <td>एकूण </td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१६</td>\r\n                                        <td>CMRC मधील एकूण गाव सॅच्युरेशन </td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१७</td>\r\n                                        <td>CMRC मधील एकूण ग्रामसंस्था </td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१८</td>\r\n                                        <td>कार्यकारणीतील महिलांची संख्या </td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>१९</td>\r\n                                        <td>गाव प्रतिनिधी महिलांची संख्या </td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२०</td>\r\n                                        <td>CMRC मधील एकूण कर्मचारी</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२१</td>\r\n                                        <td>एकूण कायदासाथी</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२२</td>\r\n                                        <td>काबाडकष्टाचे मॉडल</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२३</td>\r\n                                        <td>एकूण बचत </td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२४</td>\r\n                                        <td>एकूण अंतर्गत कर्ज वाटप</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>२५</td>\r\n                                        <td>एकूण अंतर्गत कर्ज परतफेड,व्याजासह</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२६</td>\r\n                                        <td>एकूण बँक कर्ज(गट)वाटप </td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२७</td>\r\n                                        <td>एकूण बँक कर्ज रक्कम</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२८</td>\r\n                                        <td>एकूण बँक कर्ज परतफेड</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>२९</td>\r\n                                        <td>एकूण CSG</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३०</td>\r\n                                        <td>CSG वितरीत फंड</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३१</td>\r\n                                        <td>एकूण उलाढाल</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३२</td>\r\n                                        <td>CSG मधून मिळालेले CMRC ला एकूण व्याज </td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३३</td>\r\n                                        <td>MLP ला वितरीत केलेला फंड</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>३४</td>\r\n                                        <td>MLP मधून मिळालेले CMRC ला एकूण व्याज</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                        <td>-</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"panel-default\">\r\n                        <h2>EVENTS</h2>\r\n                        <div class=\"panel-body gray-box\">\r\n                            <marquee behavior=\"scroll\" direction=\"up\" scrollamount=\"7\"> Hon. Smt. Indra Mallo – VCMD, MAVIM had presented the best practice of “Mitigating the Agricultural\r\n                                Risks through Azola and Hydroponic Interventions in drought prone Areas” … MAVIM had been\r\n                                invited by IFAD – Rome on 25th Oct 2017 to present this case study in the international K\r\n                                sharing Workshop on “Platform for Agricultural Risk Management | Managing Risks to improve\r\n                                farmers’ livelihoods”.</marquee>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"panel-default\">\r\n                        <h2>NEWS</h2>\r\n                        <div class=\"panel-body gray-box\">\r\n                            <marquee behavior=\"scroll\" direction=\"up\" scrollamount=\"7\"> Hon. Smt. Indra Mallo – VCMD, MAVIM had presented the best practice of “Mitigating the Agricultural\r\n                                Risks through Azola and Hydroponic Interventions in drought prone Areas” … MAVIM had been\r\n                                invited by IFAD – Rome on 25th Oct 2017 to present this case study in the international K\r\n                                sharing Workshop on “Platform for Agricultural Risk Management | Managing Risks to improve\r\n                                farmers’ livelihoods”.</marquee>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"panel-default\">\r\n                        <h2>TRAINING</h2>\r\n                        <div class=\"panel-body gray-box\">\r\n                            <p>\r\n                                <img class=\"training-img\" src=\"./assets/saving.jpg\" alt=\"training\">\r\n                            </p>\r\n                            <ul>\r\n                                <li>Capacity Building Training</li>\r\n                                <li>SHG Concept Training</li>\r\n                                <li>Leadership Development training</li>\r\n                                <li>Gender Sensitization Training</li>\r\n                                <li>Functional Literacy</li>\r\n                                <li>Agriculture Training</li>\r\n                                <li>Panchayat Raj Institutions</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/public/cmrc/cmrc.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CMRCComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






//import { MaterialModule } from '@angular/material';
var CMRCComponent = (function () {
    function CMRCComponent(router, _cmrcservice, _router, _access_token, _globalURL, globalVariables) {
        this.router = router;
        this._cmrcservice = _cmrcservice;
        this._router = _router;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this.globalVariables = globalVariables;
        this.showcmrcdetail = false;
    }
    CMRCComponent.prototype.ngOnInit = function () {
        //        this.getCMRCDashboardKVP();
        //this.getPublicInformation(2);
    };
    CMRCComponent.prototype.showcmrcinfo = function () {
        this.showcmrcdetail = true;
    };
    CMRCComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/public/cmrc/cmrc.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_4__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_0__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */]])
    ], CMRCComponent);
    return CMRCComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/public/contact/contact.component.html":
/***/ (function(module, exports) {

module.exports = "<section>\r\n        <div class=\"box-body \">\r\n                <div class=\"col-md-12\">\r\n                        <img src=\"./assets/contact_img.jpg\" class=\"slide_img img-responsive\" style=\"height:232px;width:700px;margin:0 auto;\">\r\n                </div>\r\n        </div>\r\n     \r\n        <div class=\"col-md-6 col-md-offset-3\">\r\n                <!-- <form action=\"#\" method=\"post\" style=\" margin-bottom:5px;box-shadow:0px 1px 1px 2px #b5b0b0;\">\r\n                        <h1>Contact Us</h1>\r\n                        <p>Please take a moment to get in touch, we will get back to you shortly.</p>\r\n                        <div class=\"column\">\r\n                                <label for=\"the-name\">Your Name</label>\r\n                                <input type=\"text\" name=\"name\" id=\"the-name\">\r\n\r\n                                <label for=\"the-email\">Email Address</label>\r\n                                <input type=\"email\" name=\"email\" id=\"the-email\">\r\n\r\n                                <label for=\"the-phone\">Phone Number</label>\r\n                                <input type=\"tel\" name=\"phone\" id=\"the-phone\">\r\n                        </div>\r\n                        <div class=\"column\">\r\n                                <label for=\"the-message\">Message</label>\r\n                                <textarea name=\"message\" id=\"the-message\"></textarea>\r\n                                <input type=\"submit\" value=\"Send Message\">\r\n                        </div>\r\n                </form> -->\r\n        </div>\r\n\r\n\r\n\r\n        <div class=\"col-md-6 col-md-offset-3\">\r\n                <form class=\"mui-form\">\r\n                        <legend style=\"text-align:center;color:chocolate;font-weight:bold;\">CONTACT FORM</legend>\r\n                        <div class=\"mui-textfield mui-textfield--float-label\">\r\n                                <input type=\"text\" >\r\n                                <label placholder=\"Enter First Name\" class=\"contact-label\">First Name</label>\r\n                        </div>\r\n                        <div class=\"mui-textfield mui-textfield--float-label\">\r\n                                <input type=\"text\" >\r\n                                <label> Last Name</label>\r\n                        </div>\r\n                        <div class=\"mui-textfield mui-textfield--float-label\">\r\n                                <textarea ></textarea>\r\n                                <label>Contact Number</label>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" class=\"btn-primary mui-btn mui-btn--raised\">Submit</button>\r\n                </form>\r\n\r\n           \r\n        </div>\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/public/contact/contact.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ContactComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


//import {MatButtonModule,MatMenuModule,MatToolbarModule,MatIconModule,MatCardModule} from '@angular/material';
//import '../../../../../src/config.js'
// declare var myExtObject: any;
var ContactComponent = (function () {
    function ContactComponent(router) {
        this.router = router;
        //   myExtObject.abc();
    }
    ContactComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/public/contact/contact.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/public/contact/contact.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */]])
    ], ContactComponent);
    return ContactComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/public/contact/contact.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\r\n\r\n\r\n\r\n \r\n\r\n.slide_img{\r\n    width:100%;\r\n    height:300px;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/public/index.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"background-image\" style=\"background-image: url('../../../assets/plane-img.jpg');\">\r\n    <div class=\"\">\r\n        <header class=\"\">\r\n            <div class=\"top-header-navbar\" style=\"margin-bottom:1px;\">\r\n                <div class=\"container-fluid\">\r\n                    <nav class=\"navbar top-navbar\" style=\"margin-bottom:1px;\">\r\n                        <div class=\"col-md-12\">\r\n                            <img src=\"./assets/CSG-Header.jpg\" style=\"height:152px;width: 100%;\">\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n            <!-- end here Public page header design part 4 -->\r\n            <div class=\"col-md-12\">\r\n                <nav role=\"navigation\" class=\"navbar navbar-default\" style=\"color:black;border:none;border-radius:0px;background-color:#093758;\">\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"navbar-header\">\r\n                            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\" style=\"float:left;\">\r\n                                <span class=\"icon-bar\"></span>\r\n                                <span class=\"icon-bar\"></span>\r\n                                <span class=\"icon-bar\"></span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n                            <ul class=\"nav navbar-nav nav_list\">\r\n                                <li class=\"\">\r\n                                    <a routerLink=\"/mavim\">MAVIM</a>\r\n                                </li>\r\n                                <!-- <li>\r\n                                    <a routerLink=\"/cmrcp\">CMRC</a>\r\n                                </li> -->\r\n                                <li class=\"dropdown\">\r\n                                    <a class=\"dropbtn\" style=\"background-color:none;\">CMRC\r\n                                    </a>\r\n                                    <ul class=\"dropdown-content\">\r\n                                        <!-- <li *ngFor=\"let cmrc of Cmrcs\">\r\n                                            <a routerLink=\"/cmrcp\" (click)=\"saveCMRCId(cmrc.Key)\">{{cmrc.Value}}</a>\r\n                                        </li> -->\r\n                                        <li>\r\n                                            <a routerLink=\"/cmrcp\" (click)=\"saveCMRCId(2)\">PRAGATI LOKSANCHALIT SADHAN KENDRA</a>\r\n                                        </li>\r\n                                        <li>\r\n                                            <a routerLink=\"/cmrcp\" (click)=\"saveCMRCId(5)\">SAVITRIBAI PHULE SADHAN KENDRA</a>\r\n                                        </li>\r\n                                        <li>\r\n                                            <a routerLink=\"/cmrcp\" (click)=\"saveCMRCId(3)\">OM SAI PRERNA SADHAN KENDRA</a>\r\n                                        </li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>\r\n                                    <a routerLink=\"/work\">WORK</a>\r\n                                </li>\r\n                                <li class=\"\">\r\n                                    <a routerLink=\"/login\">LOGIN</a>\r\n                                </li>\r\n                                <!-- <li class=\"\">\r\n                                    <a routerLink=\"/contact\">CONTACT US</a>\r\n                                </li> -->\r\n                            </ul>\r\n                        </div>\r\n\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n\r\n            <!-- Header Navbar: style can be found in header.less -->\r\n\r\n        </header>\r\n    </div>\r\n    <!-- Left side column. contains the logo and sidebar -->\r\n\r\n    <!-- Content Wrapper. Contains page content -->\r\n    <div class=\"\">\r\n        <!-- /.content -->\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n    <!-- /.content-wrapper -->\r\n\r\n    <!-- Control Sidebar -->\r\n\r\n    <!-- /.control-sidebar -->\r\n    <!-- Add the sidebar's background. This div must be placed\r\n         immediately after the control sidebar -->\r\n</div>\r\n<!--vo Chenge password-->"

/***/ }),

/***/ "../../../../../src/app/components/public/login/login.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "body {\r\n    background: #eee !important;\r\n}\r\n\r\n\r\n.login-styles {\r\n    max-width: 380px;\r\n    padding: 15px 35px 45px;\r\n    margin: 0 auto;\r\n    text-align:center;\r\n    background-color: #fff;\r\n    border: 1px solid rgba(0,0,0,0.1);\r\n}\r\n\r\n.login-styles-heading, .checkbox {\r\n    margin-bottom: 30px;\r\n}\r\n\r\n.checkbox {\r\n    font-weight: normal;\r\n}\r\n\r\n.form-control {\r\n    position: relative;\r\n    font-size: 16px;\r\n    height: auto;\r\n    padding: 10px;\r\n  \r\n}\r\n\r\n\r\ninput[type=\"text\"] {\r\n    margin-bottom: -1px;\r\n    border-bottom-left-radius: 0;\r\n    border-bottom-right-radius: 0;\r\n}\r\n\r\ninput[type=\"password\"] {\r\n    margin-bottom: 20px;\r\n    border-top-left-radius: 0;\r\n    border-top-right-radius: 0;\r\n}\r\n.mavim_logo{\r\n    /* background-image: url('assets/mavim.jpg'); */\r\n    background-repeat: no-repeat; \r\n    background-position: center;\r\n    height: 155px;\r\n    background-color: #fff;\r\n}\r\n/* .Login-error{\r\n    position: relative;\r\n    background-color: #f30b2af5;\r\n    width: 380px;\r\n    height: 40px;\r\n    border-radius: 0px;\r\n    top: 51px;\r\n    text-align: center;\r\n    left: 486px;\r\n    z-index: 1;\r\n   }\r\n   .login-error_message{\r\n    color: black;\r\n    font-family: sans-serif, arial;\r\n    font-size: 13px;\r\n    top: 16px;\r\n    position: absolute;\r\n    text-align: center;\r\n    padding-left: 30px;\r\n    font-weight: bold;\r\n   } */\r\n   .Login-error{\r\n    background-color: #D50000;\r\n    margin: 0 auto;\r\n    width: 958px;\r\n    height: 35px;\r\n    position: relative;\r\n    border-radius: 0px;\r\n    line-height: 40px;\r\n    top: 51px;\r\n    right: 17px;\r\n    z-index: 1;\r\n   }\r\n   .login-error_message{\r\n    color: #fff;\r\n    padding-left: 13px;\r\n    font-family: sans-serif,arial;\r\n    font-size: 15px;\r\n    position: absolute;\r\n    line-height: 34px;\r\n    text-align: center;\r\n    letter-spacing: 2px;\r\n   }", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/public/login/login.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n\r\n<div class=\"Login-error\" *ngIf=\"ShowErrormsg\">\r\n    <p class=\"login-error_message\"> Invalid Username or Password..! </p>\r\n</div>\r\n\r\n<!-- <div>\r\n<img src=\"./assets/mavim.jpg\" alt=\"Los Angeles\" align=\"middle\" style=\"width:40%; margin-top:70px;\"> -->\r\n<div class=\"box-body\">\r\n    <!-- <div class=\"row\" style=\"text-align:center;background-color:white;\">\r\n    <img src=\"./assets/mavim.jpg\" style=\"width:35%;\">\r\n  </div> -->\r\n    <div class=\"col-md-12\">\r\n        <div class=\" login-styles\" style=\"margin-top:7px;\">\r\n            <form #loginForm=\"ngForm\" class=\"form-horizontal\" novalidate>\r\n                <div class=\"\" *ngIf=\"router.url == '/login'\">\r\n                    <div class=\"\">\r\n                        <div>\r\n                            <h4 class=\"form-signin-heading login_name text-center\" style=\"font-size: 15px; font-weight: 700;color:black\">\r\n                                प्रगती लोकसंचलित साधन केंद्र. कर्जत. जि. रायगड. </h4>\r\n                            <div style=\"font-size:16px; font-weight:600; color:darkgreen;\"> COMMUNITY SUPPORT GRANT </div>\r\n                            <small style=\"font-size:12px; color:darkgreen;\">(CSG Software)</small>\r\n\r\n                        </div>\r\n                        <div style=\"padding:15px;\">\r\n                            <input (ngModel)=\"username\" type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Username\" required #username=\"ngModel\" />\r\n                            <br>\r\n                            <div *ngIf=\"username.invalid && username.touched\" class=\"alert alert-danger\">\r\n                                Please enter name\r\n                            </div>\r\n                            <input (ngModel)=\"password\" type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" required #password=\"ngModel\" />\r\n                            <div *ngIf=\"password.invalid && password.touched\" class=\"alert alert-danger\">\r\n                                you can't Login without password\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <!-- <div class=\"col-md-6\">\r\n                                    <p class=\"pull-left\">\r\n                                        <a>Fotgot Username ?</a>\r\n                                    </p>\r\n                                </div> -->\r\n                                <div class=\"col-md-12\">\r\n                                    <p class=\"pull-right\">\r\n                                        <a href=\"\" data-toggle=\"modal\" (click)=\"getAllCMRCKVP()\" data-target=\"#fprgotPasswordForm\">FORGOT LOGIN CREDENTIALS </a>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                         \r\n                            <label class=\"login_submit_btn\">\r\n                            <button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"loginForm.invalid\" (click)=\"login(loginForm.value)\" style=\"width: 278px;\">LOGIN</button>\r\n                        </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id=\"fprgotPasswordForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">\r\n                    FORGOT LOGIN CREDENTIALS FORM\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form #forgotPassword=\"ngForm\" class=\"form-horizontal\" id=\"bacgfat\" novalidate>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"col-md-6\">\r\n                                <label class=\"control-label\">SELECT CMRC</label>\r\n                                <select class=\"form-control\" (ngModel)=\"cmrcId\" #cmrcId=\"ngModel\" id=\"selectCmrc\" name=\"selectCmrc\">\r\n                                    <option *ngFor=\"let cmrc of Cmrcs\" [value]=\"cmrc.Key\">{{cmrc.Value | uppercase }}                                       \r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <label class=\"control-label\">ENTER USERNAME</label>\r\n                                <input id=\"username\" name=\"username\" class=\"form-control\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"col-md-6\">\r\n                                <label class=\"control-label\">ENTER PASSWORD</label>\r\n                                <input class=\"password\" name=\"password\" class=\"form-control\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" [disabled]=\"forgotPassword.invalid\" data-dismiss=\"modal\" class=\"btn btn-primary\">\r\n                                    SAVE\r\n                                </button>\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                   CLOSE\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/public/login/login.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoginComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_login_service__ = __webpack_require__("../../../../../src/app/services/login.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var LoginComponent = (function () {
    function LoginComponent(_loginService, _globalURL, _access_token, router) {
        this._loginService = _loginService;
        this._globalURL = _globalURL;
        this._access_token = _access_token;
        this.router = router;
        this.showMessage = false;
        this._globalURL.isLoading = false;
        debugger;
        //this.router.navigate(['../login']);
        sessionStorage.clear();
    }
    LoginComponent.prototype.ngOnInit = function () {
    };
    LoginComponent.prototype.abc = function () {
    };
    LoginComponent.prototype.login = function (loginCredentials) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._loginService.post(this._globalURL.TOKEN, loginCredentials)
            .then(function (res) {
            if (res.status == 200) {
                var data = JSON.parse(res._body);
                sessionStorage.setItem("access_token", data.access_token);
                sessionStorage.setItem("roleId", data.userRoleId);
                _this._access_token.roleId = data.userRoleId;
                _this._globalURL.isLoading = false;
                console.log(sessionStorage.getItem("access_token"));
                if (data.userRole == "VO")
                    _this.router.navigate(['../vo']);
                if (data.userRole == "CMRC")
                    _this.router.navigate(['../cmrc']);
                if (data.userRole == "SC")
                    _this.router.navigate(['../sc']);
                if (data.userRole == "DISTRICT")
                    _this.router.navigate(['../district']);
            }
            else {
                alert("username failed");
                //  this.ShowErrormsg = true;
                _this.message = "Invalid Username or Password";
                _this.ShowErrormsg = true;
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.ShowErrormsg = true;
            _this._globalURL.isLoading = false;
        });
    };
    LoginComponent.prototype.getAllCMRCKVP = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._loginService.get(this._globalURL.GET_ALL_CMRC_KPV, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.Cmrcs = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", String)
    ], LoginComponent.prototype, "_message", void 0);
    LoginComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/public/login/login.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/public/login/login.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_login_service__["a" /* LoginService */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_4__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */]])
    ], LoginComponent);
    return LoginComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/public/mavim/mavim.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"box-body\">\r\n  <!-- <div class=\"mavim_work\">\r\n    <div class=\"col-md-12\">\r\n      <div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\">\r\n        <div class=\"carousel-inner\">\r\n          <div class=\"item active\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"col-md-offset-2 col-md-8\">\r\n                <img src=\"./assets/work_1.jpg\" class=\"slide_img w3-animate-right\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"col-md-offset-2 col-md-8\">\r\n                <img src=\"./assets/work_3.jpg\" class=\"slide_img w3-animate-right\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"col-md-offset-2 col-md-8\">\r\n                <img src=\"./assets/work_5.jpg\" class=\"slide_img w3-animate-right\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"col-md-12 w3-animate-right\">\r\n              <div class=\"col-md-offset-2 col-md-4\">\r\n                <img src=\"./assets/work_img11.jpg\" class=\"slide_img\">\r\n              </div>\r\n              <div class=\"col-md-4\">\r\n                <img src=\"./assets/work_img6.jpg\" class=\"slide_img\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"col-md-12 w3-animate-right\">\r\n              <div class=\"col-md-offset-2 col-md-4\">\r\n                <img src=\"./assets/work_img7.jpg\" class=\"slide_img\">\r\n              </div>\r\n              <div class=\"col-md-4\">\r\n                <img src=\"./assets/work_img8.jpg\" class=\"slide_img\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"col-md-12 w3-animate-right\">\r\n              <div class=\"col-md-offset-2 col-md-4\">\r\n                <img src=\"./assets/work_img9.jpg\" class=\"slide_img\">\r\n              </div>\r\n              <div class=\"col-md-4\">\r\n                <img src=\"./assets/work_img10.jpg\" class=\"slide_img\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <a class=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\">\r\n          <span class=\"glyphicon glyphicon-chevron-left slide_indicator\"></span>\r\n          <span class=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a class=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\">\r\n          <span class=\"glyphicon glyphicon-chevron-right slide_indicator\"></span>\r\n          <span class=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n  <div class=\"row\">\r\n    <div class=\"col-md-9\">\r\n      <div class=\"col-md-12\" style=\"margin-top:10px;\">\r\n        <div class=\"col-md-12\" style=\"text-align:center;background-color: #5f534e08;box-shadow:none;\">\r\n          <img src=\"./assets/MAVIM_1.jpg\" class=\"mavim_head w3-animate-fading\" style=\"width:100%\">\r\n          <div class=\"slide_content\">\r\n            <p style=\"font-size:23px;\">\r\n              <b>\r\n                Hon. Smt. INDRA MALLO (IAS OFFICER) </b>\r\n            </p>\r\n            <p style=\"margin-left: 84px;letter-spacing: 1px;font-size:14px;\">(MANAGING DIRECTOOR (MAVIM))</p>\r\n            <p style=\"font-size:13px;\">उपाध्यक्ष तथा व्यवस्थापकीय संचालक</p>\r\n            <p style=\"font-size:13px;\">महिला आर्थिक विकास महामंडळ </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12\" style=\"margin-top:10px;\">\r\n        <div class=\"col-md-12 mavim_detail\">\r\n          <h2 class=\"\" style=\"margin-top: 1px;\">ABOUT MAVIM</h2>\r\n          <h3>MAHILA ARTHIK VIKAS MAHAMANDAL</h3>\r\n          <p>\r\n            Mahila Arthik Vikas Mahamandal (MAVIM) is the State Women’s Development Corporation of Government of Maharashtra, established\r\n            on the 24th February,1975 on the occasion of Inernational Women’s year. MAVIM has been declared as a Nodal agency\r\n            by Government of Maharashtra on 20th January 2003 to implement various women empowerment program through Self\r\n            Help Groups (SHGs).</p>\r\n          <p>On behalf of the Government of Maharashtra, the Mahila Arthik Vikas Mahamandal (MAVIM) has taken up the cause of\r\n            overall development of women – half the part of our society. MAVIM has taken tireless efforts for over a decade\r\n            to initiate, expand and establish the self-help group movement in Maharashtra. The progressive Government of\r\n            Maharashtra has always supported the cause of women’s empowerment and has form time to time devised supportive\r\n            policy mechanisms and assure them that even in the future the Government will continue to support them.</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12\">\r\n        <div class=\"col-md-12 mavim_detail\" style=\"margin-top:10px;\">\r\n          <h3>MISSION OF MAVIM</h3>\r\n          <p>\r\n            The mission of the corporation is “To bring about gender justice and equality for women, investing in human capital and the\r\n            capacity building of women, thus making them economically and socially empowered and enabling them to access\r\n            sustainable livelihoods.”\r\n          </p>\r\n          <h3>\r\n            GOALS\r\n          </h3>\r\n          <p>To establish social, economic and political justice for women thought for Sustainable Development.</p>\r\n          <h3>OBJECTIVE</h3>\r\n          <ul class=\"point_list\">\r\n            <li>\r\n              <i class=\"fa fa-chevron-right list_point\"></i>To organize women through Self Help Group</li>\r\n            <li>\r\n              <i class=\"fa fa-chevron-right list_point\"></i>To build the overall capacities of women</li>\r\n            <li>\r\n              <i class=\"fa fa-chevron-right list_point\"></i>To enhance self confidence amongst women</li>\r\n            <li>\r\n              <i class=\"fa fa-chevron-right list_point\"></i>Entrepreneurial development of women</li>\r\n            <li>\r\n              <i class=\"fa fa-chevron-right list_point\"></i>To synchronize employment opportunities &amp; market linkages</li>\r\n            <li>\r\n              <i class=\"fa fa-chevron-right list_point\"></i>To promote women’s initiative for equal opportunities, prosperrity &amp; participation in governance.</li>\r\n            <li>\r\n              <i class=\"fa fa-chevron-right list_point\"></i>To build grassroots institutions over SHGs as a way forward to sustainable development.</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md-3\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"panel-default\">\r\n          <h2>EVENTS</h2>\r\n          <div class=\"panel-body gray-box\">\r\n            <marquee behavior=\"scroll\" direction=\"up\" scrollamount=\"2\">On behalf of the Government of Maharashtra, the Mahila Arthik Vikas Mahamandal (MAVIM) has taken up the cause of overall development of women – half the part of our society.\r\n\r\n              MAVIM has taken tireless efforts for over a decade to initiate, expand and establish the self-help group movement in Maharashtra. The progressive Government of Maharashtra has always supported the cause of women’s empowerment and has form time to time devised supportive policy mechanisms and assure them that even in the future the Government will continue to support them.</marquee>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"panel-default\">\r\n          <h2>NEWS</h2>\r\n          <div class=\"panel-body gray-box\">\r\n            <marquee behavior=\"scroll\" direction=\"up\" scrollamount=\"2\"> Hon. Smt. Indra Mallo – VCMD, MAVIM had presented the best practice of “Mitigating the Agricultural Risks through\r\n              Azola and Hydroponic Interventions in drought prone Areas” … MAVIM had been invited by IFAD – Rome on 25th\r\n              Oct 2017 to present this case study in the international K sharing Workshop on “Platform for Agricultural Risk\r\n              Management | Managing Risks to improve farmers’ livelihoods”.</marquee>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"panel-default\">\r\n          <h2>TRAINING</h2>\r\n          <div class=\"panel-body gray-box\">\r\n            <p>\r\n              <img class=\"training-img\" src=\"./assets/saving.jpg\" alt=\"training\">\r\n            </p>\r\n            <ul>\r\n              <li>Capacity Building Training</li>\r\n              <li>SHG Concept Training</li>\r\n              <li>Leadership Development training</li>\r\n              <li>Gender Sensitization Training</li>\r\n              <li>Functional Literacy</li>\r\n              <li>Agriculture Training</li>\r\n              <li>Panchayat Raj Institutions</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/public/mavim/mavim.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MavimComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var MavimComponent = (function () {
    function MavimComponent(router) {
        this.router = router;
    }
    MavimComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/public/mavim/mavim.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")],
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */]])
    ], MavimComponent);
    return MavimComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/public/work/work.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"box-body \">\r\n  <!-- <div class=\"row\" style=\"text-align:center;background-color:white;\">\r\n      <img src=\"./assets/mavim.jpg\" align=\"middle\" style=\" width:35%; \">\r\n    </div> -->\r\n    <div class=\"col-md-12\" style=\"margin-top:10px;\">\r\n      <div class=\"col-md-12\">\r\n          <div class=\"col-md-2\">\r\n              <label style=\"font-size:15px\">\r\n                  <span> CMRC WORK IMAGES </span>\r\n              </label>\r\n          </div>\r\n      \r\n      </div>\r\n  </div>\r\n  <div class=\"mavim_work\">\r\n    <div class=\"col-md-12\">\r\n      <div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\">\r\n\r\n        <div class=\"carousel-inner\">\r\n          <div class=\"item active\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"col-md-offset-2 col-md-8\">\r\n                <img src=\"./assets/work_1.jpg\" class=\"slide_img w3-animate-right\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"col-md-offset-2 col-md-8\">\r\n                <img src=\"./assets/work_3.jpg\" class=\"slide_img w3-animate-right\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"col-md-offset-2 col-md-8\">\r\n                <img src=\"./assets/work_5.jpg\" class=\"slide_img w3-animate-right\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"col-md-12 w3-animate-right\">\r\n              <div class=\"col-md-offset-2 col-md-4\">\r\n                <img src=\"./assets/work_img11.jpg\" class=\"slide_img\">\r\n              </div>\r\n              <div class=\"col-md-4\">\r\n                <img src=\"./assets/work_img6.jpg\" class=\"slide_img\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"col-md-12 w3-animate-right\">\r\n              <div class=\"col-md-offset-2 col-md-4\">\r\n                <img src=\"./assets/work_img7.jpg\" class=\"slide_img\">\r\n              </div>\r\n              <div class=\"col-md-4\">\r\n                <img src=\"./assets/work_img8.jpg\" class=\"slide_img\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"item\">\r\n            <div class=\"col-md-12 w3-animate-right\">\r\n              <div class=\"col-md-offset-2 col-md-4\">\r\n                <img src=\"./assets/work_img9.jpg\" class=\"slide_img\">\r\n              </div>\r\n              <div class=\"col-md-4\">\r\n                <img src=\"./assets/work_img10.jpg\" class=\"slide_img\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <a class=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\">\r\n          <span class=\"glyphicon glyphicon-chevron-left slide_indicator\"></span>\r\n          <span class=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a class=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\">\r\n          <span class=\"glyphicon glyphicon-chevron-right slide_indicator\"></span>\r\n          <span class=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- <div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class='list-group gallery'>\r\n      <div class='col-sm-4 col-xs-6 col-md-3'>\r\n        <a class=\"thumbnail fancybox\" rel=\"ligthbox\" href=\"http://pipsum.com/300x320.jpg\">\r\n          <img class=\"img-responsive\" alt=\"\" src=\"http://pipsum.com/320x320\" />\r\n          <div class='text-right'>\r\n            <small class='text-muted'>Image Title</small>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div class='col-sm-4 col-xs-6 col-md-3'>\r\n        <a class=\"thumbnail fancybox\" rel=\"ligthbox\" href=\"http://pipsum.com/300x320.jpg\">\r\n          <img class=\"img-responsive\" alt=\"\" src=\"http://pipsum.com/320x320\" />\r\n          <div class='text-right'>\r\n            <small class='text-muted'>Image Title</small>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div class='col-sm-4 col-xs-6 col-md-3'>\r\n        <a class=\"thumbnail fancybox\" rel=\"ligthbox\" href=\"http://pipsum.com/300x320.jpg\">\r\n          <img class=\"img-responsive\" alt=\"\" src=\"http://pipsum.com/320x320\" />\r\n          <div class='text-right'>\r\n            <small class='text-muted'>Image Title</small>\r\n          </div>    \r\n        </a>\r\n      </div>\r\n      <div class='col-sm-4 col-xs-6 col-md-3'>\r\n        <a class=\"thumbnail fancybox\" rel=\"ligthbox\" href=\"http://pipsum.com/300x320.jpg\">\r\n          <img class=\"img-responsive\" alt=\"\" src=\"http://pipsum.com/320x320\" />\r\n          <div class='text-right'>\r\n            <small class='text-muted'>Image Title</small>\r\n          </div>  \r\n        </a>\r\n      </div>  \r\n      <div class='col-sm-4 col-xs-6 col-md-3'>\r\n        <a class=\"thumbnail fancybox\" rel=\"ligthbox\" href=\"http://pipsum.com/300x320.jpg\">\r\n          <img class=\"img-responsive\" alt=\"\" src=\"http://pipsum.com/320x320\" />\r\n          <div class='text-right'>\r\n            <small class='text-muted'>Image Title</small>\r\n          </div>       \r\n        </a>\r\n      </div>\r\n      <div class='col-sm-4 col-xs-6 col-md-3'>\r\n        <a class=\"thumbnail fancybox\" rel=\"ligthbox\" href=\"http://pipsum.com/300x320.jpg\">\r\n          <img class=\"img-responsive\" alt=\"\" src=\"http://pipsum.com/320x320\" />\r\n          <div class='text-right'>\r\n            <small class='text-muted'>Image Title</small>\r\n          </div>     \r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n<!-- container / end -->"

/***/ }),

/***/ "../../../../../src/app/components/public/work/work.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WorkComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


//import '../../../../../src/config.js'
//import '../work/work.component.js';
var WorkComponent = (function () {
    function WorkComponent(router) {
        this.router = router;
        this._message = "Hey from parent";
    }
    WorkComponent.prototype.abc = function () {
        alert("clicked from child");
    };
    WorkComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/public/work/work.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")],
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */]])
    ], WorkComponent);
    return WorkComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/sc/base.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SCBaseComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




//import {} from '../vo'
var SCBaseComponent = (function () {
    function SCBaseComponent(_voService, _globalURL, lang) {
        this._voService = _voService;
        this._globalURL = _globalURL;
        this.lang = lang;
        this.selectLang = "en";
        this.today = new Date();
    }
    SCBaseComponent.prototype.ngOnInit = function () {
    };
    SCBaseComponent.prototype.setLang = function (lang_) {
        if (lang_ === "en") {
            this.lang.en = true;
            this.lang.mr = false;
        }
        if (lang_ === "mr") {
            this.lang.mr = true;
            this.lang.en = false;
        }
        debugger;
    };
    SCBaseComponent.prototype.SignOut = function () {
        sessionStorage.clear();
    };
    SCBaseComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/sc/index.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_3__environments_language_config__["a" /* LangulageConf */]])
    ], SCBaseComponent);
    return SCBaseComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/sc/dashboard/dashboard.component.html":
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "../../../../../src/app/components/sc/dashboard/dashboard.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SCDashboardComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var SCDashboardComponent = (function () {
    function SCDashboardComponent(_voservice, _access_token, _globalURL, router) {
        this._voservice = _voservice;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this.router = router;
        _globalURL.isLoading = false;
        this.shgLoanDetails = null;
        this.memberLoanDetails = null;
        this.SHGNameAndId = null;
        this.selectedShgId = null;
        this.membersNameAndId = null;
        this.selectedMemberId = null;
        this.memLoanRepaymentDetails = null;
        this.LoanId = null;
        this.Action = null;
        this.amount = null;
        this.totalLoanAmt = 0;
        this.totalPayable = 0;
        this.totalPrinciple = 0;
        if (sessionStorage.getItem("access_token") == "")
            router.navigate(['../login']);
    }
    SCDashboardComponent.prototype.ngOnInit = function () {
        this._globalURL.isLoading = true;
        this.loanSHGLoanData();
    };
    // naviagetToRepayment(memid: any, loanAmt: any) {
    //     this._globalURL.selectedMemId = memid;
    //     this._globalURL.loanAmount = loanAmt;
    //     this.router.navigate(['/vo/loanrepayment']);
    // }
    SCDashboardComponent.prototype.loanSHGLoanData = function () {
        var _this = this;
        debugger;
        this._voservice.get((this._globalURL.MEMBER_LOAN_DETAILS + "" + 2), sessionStorage.getItem("access_token"))
            .then(function (res) {
            debugger;
            // this.memberLoanDetails = res.Data;
            _this.memLoanRepaymentDetails = null;
            _this._globalURL.isLoading = false;
        })
            .catch(function (res) {
        });
    };
    SCDashboardComponent.prototype.save = function (data) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        // let fial = (this._globalURL.CALCULATE_REPAYMENT + "?amount=" + this.amount + 
        // "&interest=" + data.interest + "&tenure=" + data.tenure + "&effectiveDate=" + data.effectiveDate);
        this._voservice.get((this._globalURL.CALCULATE_REPAYMENT + "?amount=" + this.amount +
            "&interest=" + data.interest + "&tenure=" + data.tenure + "&effectiveDate=" + data.effectiveDate), sessionStorage.getItem("access_token"))
            .then(function (res) {
            _this.memLoanRepaymentDetails = res.Data;
            for (var item in res.Data) {
                _this.totalLoanAmt = _this.totalLoanAmt + res.Data[item].FixedPayableAmt;
                _this.totalPayable = _this.totalPayable + res.Data[item].TotalPayableAmt;
                _this.totalPrinciple = _this.totalPrinciple + res.Data[item].InterestAmt;
                debugger;
            }
            _this._globalURL.isLoading = false;
            //this.loadLoanRepayment();
        });
    };
    SCDashboardComponent.prototype.setLoanId = function (loanId, amount) {
        var _this = this;
        this.memLoanRepaymentDetails = null;
        this.LoanId = loanId;
        this.amount = amount;
        this._voservice.get((this._globalURL.GET_REPAYMENT + this.LoanId), sessionStorage.getItem("access_token"))
            .then(function (res) {
            debugger;
            _this.memLoanRepaymentDetails = res.Data;
        })
            .catch(function (res) {
        });
    };
    SCDashboardComponent.prototype.UpdateStatus = function () {
        var _this = this;
        this.Action;
        this.LoanId;
        debugger;
        this._globalURL.isLoading = true;
        this._voservice.get((this._globalURL.UPDATE_STATUS + "?status=" + this.Action + "&loanId=" + this.LoanId), sessionStorage.getItem("access_token"))
            .then(function (res) {
            _this._globalURL.isLoading = true;
            //this._globalURL.isSaveSuccessMessage = true;
            _this.loanSHGLoanData();
        });
    };
    SCDashboardComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/sc/dashboard/dashboard.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */]])
    ], SCDashboardComponent);
    return SCDashboardComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/sc/index.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\" style=\"\">\r\n    <header class=\"main-header\">\r\n        <!-- Logo -->\r\n        <a class=\"logo\" style=\"background-color:#3c8dbc;height:51px;\">\r\n            <!-- mini logo for sidebar mini 50x50 pixels -->\r\n            <span class=\"logo-mini\">\r\n                <b>A</b>LT</span>\r\n            <!-- logo for regular state and mobile devices -->\r\n            <span class=\"logo-lg\">\r\n                <b>Scrutiny Committe (SC)</b>\r\n            </span>\r\n        </a>\r\n        <!-- Header Navbar: style can be found in header.less -->\r\n        <nav class=\"navbar navbar-static-top\">\r\n            <!-- Sidebar toggle button-->\r\n            <!-- <a href=\"#\" class=\"sidebar-toggle\" data-toggle=\"push-menu\" role=\"button\">\r\n                <span class=\"sr-only\">Toggle navigation</span>\r\n            </a> -->\r\n            <!-- <ul class=\"nav navbar-nav\">\r\n                <li class=\"\"><a href=\"#\" class=\"company_title\" style=\"padding: 5px 0px;\"><img src=\"images/cmrc_logo.jpg\" width=\"30px\"> &nbsp;  प्रगती लोकसंचलित साधन केंद्र ता. कर्जत जि.रायगड  </a>\r\n                    <small class=\"pull-right\" style=\"color: #fff; padding-right: 18px;\">उमरोली स्कुरटिनी  कमिटी  </small></li>\r\n                <!-- <span>एक जुटीतून अवतरेल समृद्धीची नवप्रभा माविम </span> -->\r\n            <!--</ul> -->\r\n            <div class=\"col-md-2  col-md-offset-8\" style=\"margin-top:6px;\">\r\n   \r\n              <select class=\"language-select\" #lang_=\"ngModel\" name=\"lang_\" [(ngModel)]=\"selectLang\" (change)=\"setLang(lang_.value)\" style=\"outline: 0;height: 40px;box-shadow: none;border: 0px !important;height: 2.5;line-height: 2;background: black;overflow: hidden;margin: 0;padding: 5px;color: #fff;float:right\">\r\n                  <option value=\"en\" selected>ENGLISH</option>\r\n                  <option value=\"mr\">मराठी</option>\r\n              </select>\r\n          </div>\r\n            <!-- <label>\r\n                <input type=\"radio\" #selectEnLang value=\"en\" name=\"lang\" [checked]=\"lang.en\" (click)=\"setLang(selectEnLang.value)\">English</label>\r\n            <label>\r\n                <input type=\"radio\" #selectMrLang value=\"mr\" name=\"lang\" [checked]=\"lang.mr\" (click)=\"setLang(selectMrLang.value)\">मराठी</label> -->\r\n            <div class=\"navbar-custom-menu\">\r\n                <ul class=\"nav navbar-nav\">\r\n\r\n\r\n                    <li class=\"dropdown user\">\r\n                        <a class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                            <img src=\"dist/img/user2-160x160.jpg\" class=\"user-image\" alt=\"\">\r\n\r\n\r\n              <span class=\"hidden-xs\">\r\n                <a href=\"#\">\r\n                  <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f5/Reset_button.svg/737px-Reset_button.svg.png\" width=\"20px;\">\r\n                </a>\r\n              </span>\r\n            </a>\r\n            <ul class=\"dropdown-menu\" style=\"min-width: 94px;\">\r\n              <!-- Menu Footer-->\r\n              <!-- <li class=\"user-footer\"> -->\r\n              <!-- <div class=\"pull-left\">\r\n                  <a class=\"btn btn-default btn-flat\" data-toggle=\"modal\" data-target=\"#changePasswordModal\">Change Password</a>\r\n              </div> -->\r\n              <li>\r\n\r\n                <div class=\"text-center\">\r\n                  <a routerLink='/login'>\r\n                    <button class=\"sign_out\" id=\"#click-button2\" (click)=\"SignOut()\">SIGN OUT</button>\r\n                  </a>\r\n                </div>\r\n              </li>\r\n              <!-- </li> -->\r\n            </ul>\r\n          </li>\r\n\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n  <!-- Left side column. contains the logo and sidebar -->\r\n  <aside class=\"main-sidebar\">\r\n    <!-- sidebar: style can be found in sidebar.less -->\r\n    <section class=\"sidebar\">\r\n      <!-- Sidebar user panel -->\r\n      <div class=\"user-panel\">\r\n        <div class=\"pull-left image\">\r\n          <img src=\"dist/img/user2-160x160.jpg\" class=\"img-circle\" alt=\"\">\r\n        </div>\r\n        <div class=\"pull-left info\">\r\n          <!-- <p>Scrutiny Committe (SC)</p> -->\r\n          <!-- <a href=\"#\"><i class=\"fa fa-circle text-success\"></i> Online</a> -->\r\n        </div>\r\n      </div>\r\n      <!-- search form -->\r\n      <form action=\"#\" method=\"get\" class=\"sidebar-form\">\r\n        <div class=\"input-group\">\r\n          <!-- <input type=\"text\" name=\"q\" class=\"form-control\" placeholder=\"Search...\"> -->\r\n          <!-- <span class=\"input-group-btn\">\r\n              <button type=\"submit\" name=\"search\" id=\"search-btn\" class=\"btn btn-flat\">\r\n                  <i class=\"fa fa-search\"></i>\r\n              </button>\r\n          </span> -->\r\n        </div>\r\n      </form>\r\n      <!-- /.search form -->\r\n      <!-- sidebar menu: : style can be found in sidebar.less -->\r\n      <ul class=\"sidebar-menu\" data-widget=\"tree\">\r\n        <li class=\"treeview\">\r\n          <!-- <a href=\"#\">\r\n              <i class=\"fa fa-table\" aria-hidden=\"true\"></i> <span>Manage Saving Group </span>\r\n              <span class=\"pull-right-container\">\r\n                  <i class=\"fa fa-angle-left pull-right\"></i>\r\n              </span>\r\n          </a>  -->\r\n          <!-- <a routerLink=\"scrutinycommitte\">SCRUTINY COMMITTE (SC) </a> -->\r\n\r\n        </li>\r\n        <!-- <li class=\"treeview\">\r\n            <a href=\"#\">\r\n                <i class=\"fa fa-money\" aria-hidden=\"true\"></i> <span>Transaction </span>\r\n                <span class=\"pull-right-container\">\r\n                    <i class=\"fa fa-angle-left pull-right\"></i>\r\n                </span>\r\n            </a>\r\n\r\n        </li> -->\r\n        <!-- <li class=\"treeview\">\r\n            <a href=\"#\">\r\n                <i class=\"fa fa-flag-o\"></i> <span>Reports </span>\r\n                <span class=\"pull-right-container\">\r\n                    <i class=\"fa fa-angle-left pull-right\"></i>\r\n                </span>\r\n            </a>\r\n            <ul class=\"treeview-menu\">\r\n                <li class=\"#\"><a href=\"saving_group_wise_repayment_report.php\"><i class=\"fa fa-circle-o\"></i><span>Saving Group Wise Repayment Report</span></a></li>\r\n                <li><a href=\"member_wise_repayment_report.php\"><i class=\"fa fa-circle-o text-red\"></i> <span>Member Wise Repayment Report </span></a></li>\r\n            </ul>\r\n        </li> -->\r\n        <!-- <li><a href=\"loan.php\"><i class=\"fa fa-circle-o text-aqua\"></i> <span>कर्ज </span></a></li> -->\r\n\r\n        <li>\r\n          <a routerLink=\"/sc/loan\">\r\n            <i class=\"fa fa-circle-o\"></i>\r\n            <span *ngIf=\"lang.en\">LOAN</span>\r\n            <span *ngIf=\"lang.mr\">कर्ज</span>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a routerLink=\"/sc/members\">\r\n            <i class=\"fa fa-circle-o\"></i>\r\n            <span *ngIf=\"lang.en\"> MEMBERS</span>\r\n            <span *ngIf=\"lang.mr\">सदस्य</span>\r\n          </a>\r\n        </li>\r\n        <!-- <li><a href=\"finance.php\"><i class=\"fa fa-dashboard text-yellow\"></i> <span>लेजर  </span></a></li> -->\r\n        <!-- <li><a href=\"setting.php\"><i class=\"fa fa-cog\" aria-hidden=\"true\"></i><span> Setting  </span></a></li>             -->\r\n      </ul>\r\n    </section>\r\n    <!-- /.sidebar -->\r\n  </aside>\r\n  <!-- Content Wrapper. Contains page content -->\r\n  <div class=\"content-wrapper\">\r\n    <!-- /.content -->\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <!-- /.content-wrapper -->\r\n  <!-- Control Sidebar -->\r\n  <aside class=\"control-sidebar control-sidebar-dark\">\r\n    <!-- Create the tabs -->\r\n    <ul class=\"nav nav-tabs nav-justified control-sidebar-tabs\">\r\n      <li>\r\n        <a href=\"#control-sidebar-home-tab\" data-toggle=\"tab\">\r\n          <i class=\"fa fa-home\"></i>\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"#control-sidebar-settings-tab\" data-toggle=\"tab\">\r\n          <i class=\"fa fa-gears\"></i>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n    <!-- Tab panes -->\r\n\r\n  </aside>\r\n  <!-- /.control-sidebar -->\r\n  <!-- Add the sidebar's background. This div must be placed\r\n       immediately after the control sidebar -->\r\n  <div class=\"control-sidebar-bg\"></div>\r\n</div>\r\n<!--SC Change  password-->\r\n<div id=\"scChangePasswordModal\" class=\"modal\" role=\"dialog\">\r\n  <div class=\"modal-dialog\">\r\n    <!-- Modal content-->\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        <h4 class=\"modal-title text-center\">Change Password</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form class=\"form-horizontal\" #ChangePasswordForm=\"ngForm\">\r\n          <div class=\"box-body\">\r\n            <div class=\"row\">\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"usr\" class=\"col-sm-6 control-label\">Old Password</label>\r\n                <div class=\"col-sm-6\">\r\n                  <input type=\"password\" class=\"form-control\" (ngModel)=\"OldPassword\" id=\"OldPassword\" placeholder=\"Please Entre Old Password\"\r\n                         name=\"OldPassword\" #OldPassword=\"ngModel\">\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"form-group\">\r\n                <label for=\"inputcurrentPassword\" class=\"col-sm-6 control-label\">New Password</label>\r\n                <div class=\"col-sm-6\">\r\n                  <input type=\"password\" class=\"form-control\" (ngModel)=\"NewPassword\" id=\"NewPassword\" placeholder=\"Please Entre Old Password\"\r\n                         name=\"NewPassword\" #NewPassword=\"ngModel\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"form-group\">\r\n                <label for=\"inputcurrentPassword\" class=\"col-sm-6 control-label\">Conform Password</label>\r\n                <div class=\"col-sm-6\">\r\n                  <input type=\"password\" class=\"form-control\" (ngModel)=\"ConfirmPassword\" placeholder=\"Please Entre Conform Password\" id=\"ConfirmPassword\"\r\n                         name=\"ConfirmPassword\" #ConfirmPassword=\"ngModel\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-default\">Save</button>\r\n              <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/sc/loan/loan.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div>\r\n                <!-- <h4 class=\"loan_detail\">MEMBERS LOAN DETAILS</h4> -->\r\n                <h3>\r\n                    <span *ngIf=\"selectedLoanStatus ==2\">\r\n                        <span *ngIf=\"lang.en\">NEW LOAN REQUEST DETAILS</span>\r\n                        <span *ngIf=\"lang.mr\">नवीन कर्ज विनंती तपशील</span>\r\n                    </span>\r\n                    <span *ngIf=\"selectedLoanStatus ==1\">\r\n                        <span *ngIf=\"lang.en\">APPROVED LOANS DETAILS</span>\r\n                        <span *ngIf=\"lang.mr\">मंजूर कर्ज तपशील</span>\r\n                    </span>\r\n                    <span *ngIf=\"selectedLoanStatus ==4\">\r\n                        <span *ngIf=\"selectedLoanStatus ==1\">\r\n                            <span *ngIf=\"lang.en\">REJECTED LOANS DETAILS</span>\r\n                            <span *ngIf=\"lang.mr\">अस्वीकृत कर्ज तपशील</span>\r\n                        </span>\r\n                    </span>\r\n                    <span *ngIf=\"selectedLoanStatus ==3\">\r\n                        <span *ngIf=\"selectedLoanStatus ==1\">\r\n                            <span *ngIf=\"lang.en\">CLOSED LOANS DETAILS</span>\r\n                            <span *ngIf=\"lang.mr\">बंद कर्ज तपशील</span>\r\n                        </span>\r\n                    </span>\r\n                </h3>\r\n            </div>\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n                    <ul class=\"nav navbar-nav item\">\r\n                        <li class=\"active\">\r\n                            <a routerLink='/sc/loan' (click)=\"loanSHGLoanData(2)\" routerLinkActive=\"active\">\r\n                                <span *ngIf=\"lang.en\">NEW LOAN REQUEST</span>\r\n                                <span *ngIf=\"lang.mr\">नवीन कर्ज विनंती</span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink='/sc/loan' (click)=\"loanSHGLoanData(1)\" routerLinkActive=\"active\">\r\n                                <span *ngIf=\"lang.en\">APPROVED LOAN </span>\r\n                                <span *ngIf=\"lang.mr\">मंजूर कर्ज</span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink='/sc/loan' (click)=\"loanSHGLoanData(4)\" routerLinkActive=\"active\">\r\n                                <span *ngIf=\"lang.en\">REJECTED LOAN</span>\r\n                                <span *ngIf=\"lang.mr\">अस्वीकृत कर्ज</span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink='/sc/loan' (click)=\"loanSHGLoanData(3)\" routerLinkActive=\"active\">\r\n                                <span *ngIf=\"lang.en\">CLOSED LOAN</span>\r\n                                <span *ngIf=\"lang.mr\">बंद कर्ज</span>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <!-- <button type=\"button\" class=\"btn btn-primary\">नवीन बचतगट बनवा </button> -->\r\n                <div *ngIf=\"memberLoanDetails.length >= 1\" class=\"box-body\">\r\n                    <table class=\"table table-bordered\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">LOAN ID</span>\r\n                                    <span *ngIf=\"lang.mr\">कर्ज आयडी</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">APPLICATION FORM</span>\r\n                                    <span *ngIf=\"lang.mr\">अर्ज</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">MEMBER NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">सदस्याचे नाव</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SHG NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">एसएचजी चे नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">SHARE AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">सामायिक रक्कम</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">LOAN AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">कर्जाचे कारण</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">LOAN REASON</span>\r\n                                    <span *ngIf=\"lang.mr\">कर्जाचे कारण</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">REQUEST DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">विनंतीची तारीख</span>\r\n                                </th>\r\n                                <th *ngIf=\"selectedLoanStatus ==2\">\r\n                                    <span *ngIf=\"lang.en\">ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\">कृती</span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let memberLoanDetail of memberLoanDetails\">\r\n                                <td>{{memberLoanDetail.LoanId}}</td>\r\n                                <td>\r\n                                    <span *ngIf=\"memberLoanDetail.Photo == null\">\r\n                                        <span *ngIf=\"lang.en\">NO IMAGE</span>\r\n                                        <span *ngIf=\"lang.mr\">फोटो नाही</span>\r\n                                    </span>\r\n                                    <span *ngIf=\"memberLoanDetail.Photo != null\">\r\n                                        <a target=\"_blank\" href=\"{{memberLoanDetail.Photo}}\">\r\n                                            <span *ngIf=\"lang.en\">SEE FORM</span>\r\n                                            <span *ngIf=\"lang.mr\">फॉर्म पहा</span>\r\n                                        </a>\r\n                                    </span>\r\n                                </td>\r\n                                <td>{{memberLoanDetail.MemberFirstName}} {{memberLoanDetail.MemberLastName}}</td>\r\n                                <td>{{memberLoanDetail.SHGName}}</td>\r\n                                <td>{{memberLoanDetail.ShareAmount | currency: 'INR'}}</td>\r\n                                <td>{{memberLoanDetail.LoanAmount | currency: 'INR'}}</td>\r\n                                <td>{{memberLoanDetail.LoanReason}}</td>\r\n                                <td>{{memberLoanDetail.RequestDate | date: 'dd-MMM-yyyy'}}</td>\r\n                                <td *ngIf=\"selectedLoanStatus ==2\">\r\n                                    <button class=\"btn btn-primary\" (click)=\"setLoanId(memberLoanDetail)\" data-toggle=\"modal\" data-target=\"#loanApplicationActionForm\">\r\n                                        <span *ngIf=\"lang.en\">ACTION</span>\r\n                                        <span *ngIf=\"lang.mr\">कृती</span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    TOTAL SUM\r\n                                </td>\r\n                                <td colspan=\"4\"></td>\r\n                                <td>\r\n                                    {{totalLoanAmount | currency: 'INR'}}\r\n                                </td>\r\n                            </tr>\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<div *ngIf=true>\r\n    <div id=\"loanApplicationActionForm\" class=\"modal\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\" style=\"padding:5px;width: 830px;\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" [style.display]=\"none\">&times;</button>\r\n                    <h4 class=\"modal-title\">APPROVE OR REJECT LOAN APPLICATION FORM for - {{memberDetailsCallBack.MemberFirstName}} {{memberDetailsCallBack.MemberLastName}}</h4>\r\n                    <p>\r\n                        TOTAL AVAILABLE FUND - {{totalApprovedAmt}}\r\n                    </p>\r\n                </div>\r\n                <form #loanForm=\"ngForm\" class=\"input-group\" style=\"padding-left: 30px;\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\">LOAN AMOUNT </span>\r\n                                    <span *ngIf=\"lang.mr\">कर्जाची रक्कम</span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" disabled [(ngModel)]=\"amount\" class=\"form-control\" id=\"amount\" name=\"amount\" required maxlength=\"50\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\">APPROVED LOAN AMOUNT </span>\r\n                                    <span *ngIf=\"lang.mr\">मंजूर कर्जाची रक्कम</span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" (ngModel)=\"approvedLoanAmt\" (input)=\"checkIfAmountExceed($event.target.value)\" class=\"form-control\" id=\"approvedLoanAmt\"\r\n                                    name=\"approvedLoanAmt\" maxlength=\"50\">\r\n                                <div *ngIf=\"ifAmountExceed\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Approve Amount can not be more than request amount </span>\r\n                                    <span *ngIf=\"lang.mr\"> मंजूर रक्कम विनंतीच्या रकमेपेक्षा अधिक असू शकत नाही</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> MEMBER SHARE AMOUNT </span>\r\n                                    <span *ngIf=\"lang.mr\">सदस्याची सामाइक रक्कम</span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"shareAmount\" id=\"shareAmount\" name=\"shareAmount\" maxlength=\"50\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\">INTEREST RATE PER MONTH</span>\r\n                                    <span *ngIf=\"lang.mr\">व्याज दर </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" (ngModel)=\"interest\" class=\"form-control\" id=\"interest\" name=\"interest\" maxlength=\"50\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\">TENURE </span>\r\n                                    <span *ngIf=\"lang.mr\">मिळकत</span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <select (ngModel)=\"tenure\" name=\"tenure\" class=\"form-control\" id=\"tenure\" name=\"tenure\">\r\n                                    <option value=\"6\">6 Month</option>\r\n                                    <option value=\"7\">7 Month</option>\r\n                                    <option value=\"8\">8 Month</option>\r\n                                    <option value=\"9\">9 Month</option>\r\n                                    <option value=\"10\">10 Month</option>\r\n                                    <option value=\"11\">11 Month</option>\r\n                                    <option value=\"12\">12 Month</option>\r\n                                    <option value=\"13\">13 Month</option>\r\n                                    <option value=\"14\">14 Month</option>\r\n                                    <option value=\"15\">15 Month</option>\r\n                                    <option value=\"16\">16 Month</option>\r\n                                    <option value=\"17\">17 Month</option>\r\n                                    <option value=\"18\">18 Month</option>\r\n                                    <option value=\"19\">19 Month</option>\r\n                                    <option value=\"20\">20 Month</option>\r\n                                    <option value=\"21\">21 Month</option>\r\n                                    <option value=\"22\">22 Month</option>\r\n                                    <option value=\"23\">23 Month</option>\r\n                                    <option value=\"24\">24 Month</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\">EFFECTIVE START DATE </span>\r\n                                    <span *ngIf=\"lang.mr\">प्रभावी प्रारंभ तारीख</span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"date\" (ngModel)=\"effectiveDate\" class=\"form-control\" id=\"effectiveDate\" name=\"effectiveDate\" required maxlength=\"50\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button class=\"btn btn-primary\" style=\"margin-top:9px;\" type=\"button\" (click)=\"calculateRepayment(loanForm.value)\">CACLULATE REPAYMENT</button>\r\n                    <table class=\"table table-bordered\" cellspacing=\"0\" style=\"margin-top:8px;\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"># INSTALLMENT</span>\r\n                                    <span *ngIf=\"lang.mr\"># हप्ता</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">MONTH</span>\r\n                                    <span *ngIf=\"lang.mr\">महिना</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">PRINCIPAL AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">मूळ रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">INTEREST AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">व्याजाची रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TOTAL PAYABLE AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">एकूण देण्याची रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">OUTSTANDING AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">थकबाकी रक्कम</span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tr *ngFor=\"let memberLoanDetail of memLoanRepaymentDetails; let rowIndex=index\">\r\n                            <td>{{rowIndex+1}}</td>\r\n                            <td>{{memberLoanDetail.Date | date: 'dd-MMM-yyyy'}}</td>\r\n                            <td>{{memberLoanDetail.FixedPayableAmt}}</td>\r\n                            <td>{{memberLoanDetail.InterestAmt}}</td>\r\n                            <td>{{memberLoanDetail.TotalPayableAmt}}</td>\r\n                            <td>{{memberLoanDetail.OutstandingAmt}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <b>\r\n                                    <span *ngIf=\"lang.en\">TOTAL SUM</span>\r\n                                    <span *ngIf=\"lang.mr\">एकूण बेरीज</span>\r\n                                </b>\r\n                            </td>\r\n                            <td>-</td>\r\n                            <td>\r\n                                <b>{{totalLoanAmt}}</b>\r\n                            </td>\r\n                            <td>\r\n                                <b>{{totalPrinciple}}</b>\r\n                            </td>\r\n                            <td>\r\n                                <b>{{totalPayable}}</b>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    <div class=\"\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">APPROVE</span>\r\n                                        <span *ngIf=\"lang.mr\">मंजूर</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"radio\" name=\"Action\" (change)=\"setStatus(1)\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-2\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">REJECT</span>\r\n                                        <span *ngIf=\"lang.mr\">नकार</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"radio\" name=\"Action\" (change)=\"setStatus(4)\" />\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-4\" *ngIf=\"showComment\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">REJECT REASON</span>\r\n                                        <span *ngIf=\"lang.mr\">नकाराचे कारण </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\"></span>\r\n                                    </label>\r\n                                    <textarea (ngModel)=\"RejectReason\" name=\"RejectReason\" #RejectReason=\"ngModel\">\r\n                                        </textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">LOAN APPROVED DATE</span>\r\n                                        <span *ngIf=\"lang.mr\">कर्जाची मंजूर तारीख </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"date\" (ngModel)=\"ApprovedDate\" class=\"form-control\" id=\"ApprovedDate\" name=\"ApprovedDate\" required #ApprovedDate=\"ngModel\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">SELECT PAYMENT MODE</span>\r\n                                        <span *ngIf=\"lang.mr\">पेमेंट मोड निवडा </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" (ngModel)=\"selectedPaymentModeId\" required name=\"selectedPaymentModeId\" #selectedPaymentModeId=\"ngModel\">\r\n                                        <option [value]=\"1\">Cash At Hand</option>\r\n                                        <option [value]=\"2\">Cash At Bank</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"selectedPaymentModeId.invalid && selectedPaymentModeId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!selectedPaymentModeId.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Please select payment mode !</span>\r\n                                            <span *ngIf=\"lang.mr\">कृपया पेमेंट मोड निवडा ! </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\" style=\"margin-top:10px;\">\r\n                        <div class=\"col-md-4\" style=\"float:right;\">\r\n                            <input class=\"btn btn-primary\" type=\"button\" (click)=\"UpdateStatus(loanForm.value); loanForm.reset()\" data-dismiss=\"modal\"\r\n                                value=\"SAVE ACTION\" />\r\n                            <input class=\"btn btn-default\" type=\"button\" (click)=\"clear(); loanForm.reset()\" value=\"CANCEL\" data-dismiss=\"modal\" />\r\n\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/sc/loan/loan.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SCLoanComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var SCLoanComponent = (function () {
    function SCLoanComponent(_voservice, _access_token, _globalURL, lang, router) {
        this._voservice = _voservice;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this.lang = lang;
        this.router = router;
        this.isSharedPaid = false;
        this.disable = false;
        this.shareAmr = null;
        this.isShareAmt = false;
        this.shgId = 0;
        this.ifAmountExceed = false;
        _globalURL.isLoading = false;
        this.shgLoanDetails = null;
        this.memberLoanDetails = null;
        this.SHGNameAndId = null;
        this.selectedShgId = null;
        this.membersNameAndId = null;
        this.selectedMemberId = null;
        this.memLoanRepaymentDetails = null;
        this.LoanId = null;
        this.Action = null;
        this.amount = null;
        this.shareAmount = null;
        this.LoanDetails = null;
        this.totalLoanAmt = 0;
        this.totalPayable = 0;
        this.totalPrinciple = 0;
        this.selectedLoanStatus = 0;
        this.totalLoanAmount = 0;
        this.disable = false;
        this.calculateButtonValue = "SAVE ACTION";
        if (sessionStorage.getItem("access_token") == "")
            router.navigate(['../login']);
        //s this._globalURL.isSaveSuccessMessage =  ;
    }
    SCLoanComponent.prototype.ngOnInit = function () {
        this._globalURL.isLoading = true;
        this.selectedLoanStatus = 2;
        this.loanSHGLoanData(2);
        this.getFund();
        this.showComment = false;
    };
    SCLoanComponent.prototype.loanSHGLoanData = function (loanStatus) {
        var _this = this;
        debugger;
        this.selectedLoanStatus = loanStatus;
        this._globalURL.isLoading = true;
        this._voservice.get((this._globalURL.MEMBER_LOAN_DETAILS + "" + loanStatus), sessionStorage.getItem("access_token"))
            .then(function (res) {
            debugger;
            _this.memberLoanDetails = res.Data;
            for (var item in _this.memberLoanDetails)
                _this.totalLoanAmount = _this.totalLoanAmount + _this.memberLoanDetails[item].LoanAmount;
            _this.memLoanRepaymentDetails = null;
            _this._globalURL.isLoading = false;
        })
            .catch(function (res) {
        });
    };
    SCLoanComponent.prototype.clear = function () {
        this.memLoanRepaymentDetails = null;
        this.disable = false;
    };
    SCLoanComponent.prototype.calculateRepayment = function (data) {
        var _this = this;
        debugger;
        this.disable = true;
        this.calculateButtonValue = "calculating ...";
        //this.memLoanRepaymentDetails = null;
        this._globalURL.isLoading = true;
        this.totalLoanAmt = 0;
        this.totalPayable = 0;
        this.totalPrinciple = 0;
        this._voservice.get((this._globalURL.CALCULATE_REPAYMENT + "?amount=" + data.approvedLoanAmt +
            "&interest=" + data.interest + "&tenure=" + data.tenure + "&effectiveDate=" + data.effectiveDate), sessionStorage.getItem("access_token"))
            .then(function (res) {
            _this.memLoanRepaymentDetails = res.Data;
            for (var item in res.Data) {
                _this.totalLoanAmt = _this.totalLoanAmt + res.Data[item].FixedPayableAmt;
                _this.totalPayable = _this.totalPayable + res.Data[item].TotalPayableAmt;
                _this.totalPrinciple = _this.totalPrinciple + res.Data[item].InterestAmt;
            }
            _this._globalURL.isLoading = false;
            //this.loadLoanRepayment();
        });
    };
    SCLoanComponent.prototype.setLoanId = function (loanData) {
        debugger;
        this.disable = false;
        this.memLoanRepaymentDetails = null;
        this.LoanId = loanData.LoanId;
        this.amount = loanData.LoanAmount;
        this.memberDetailsCallBack = loanData;
        // if (loanData.ShareAmount != null || loanData.ShareAmount != 0)
        //     this.isShareAmt = true;
        this.shareAmount = loanData.ShareAmount;
        this.isSharedPaid = this.shareAmount == 0 || this.shareAmount == null ? false : true;
        this.memberId = loanData.MemberId;
        this.shgId = loanData.SHGId;
    };
    SCLoanComponent.prototype.setStatus = function (id) {
        this.Action = id;
        this.showComment = id == 1 ? false : true;
    };
    SCLoanComponent.prototype.UpdateStatus = function (data) {
        var _this = this;
        this.disable = false;
        var loanData = {
            'LoanAmount': this.amount, 'LoanApprovedAmount': data.approvedLoanAmt,
            'Status': this.Action, 'EffectiveStartDate': data.effectiveDate,
            'LoanId': this.LoanId, 'IntrestRate': data.interest, 'Tenure': data.tenure,
            'ShareAmount': this.isSharedPaid ? null : data.shareAmount, 'MemberId': this.memberId,
            'PaymentMode': data.selectedPaymentModeId, 'RejectReason': data.RejectReason,
            'ApprovedDate': data.ApprovedDate, 'SHGId': this.shgId
        };
        // this.Action;
        // this.LoanId;
        debugger;
        this._globalURL.isLoading = true;
        this._voservice.post(this._globalURL.UPDATE_STATUS, loanData, sessionStorage.getItem("access_token"))
            .then(function (res) {
            _this._globalURL.isLoading = true;
            _this._globalURL.isSaveSuccessMessage = true;
            _this.showMessage = true;
            if (_this.Action == "1")
                _this.message = "LOAN APPLICATION APPROVED SUCCESSFULLY";
            else
                _this.message = "LOAN APPLICATION REJECTED SUCCESSFULLY";
            setInterval(function () {
                _this.showMessage = false;
            }, 6000);
            _this.loanSHGLoanData(_this.selectedLoanStatus);
        });
    };
    SCLoanComponent.prototype.getFund = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this.totalApprovedAmt = 0;
        this._voservice.get(this._globalURL.GET_ALL_VO_FUND_DETAILS + 2, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                //this.reRenderDT();
                for (var item in res.Data) {
                    _this.totalApprovedAmt = _this.totalApprovedAmt + res.Data[item].ApproveAmount;
                }
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (res) {
            _this._globalURL.isLoading = false;
        });
    };
    SCLoanComponent.prototype.checkIfAmountExceed = function (enteredAmt) {
        debugger;
        if (this.amount < enteredAmt)
            this.ifAmountExceed = true;
        else
            this.ifAmountExceed = false;
    };
    SCLoanComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/sc/loan/loan.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */]])
    ], SCLoanComponent);
    return SCLoanComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/sc/members/member.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n  </div>\r\n  <div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n  </div>\r\n  <div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n  </div>\r\n  \r\n<section class=\"content-header\">\r\n    <label class=\"heading-title\">\r\n      <span *ngIf=\"lang.en\">VO MEMBERS FORM</span>\r\n      <span *ngIf=\"lang.mr\"> व्हीओ सदस्य फॉर्म</span>\r\n    </label>\r\n  </section>\r\n  \r\n<!-- <div *ngIf=\"showMessage\">\r\n        <message-selector [message]=\"message\">\r\n        </message-selector>\r\n    </div> -->\r\n<section class=\"content\">\r\n    <!-- <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <span>\r\n               \r\n                <h3>\r\n                    <span *ngIf=\"getVoMemberDetail\">\r\n                        <span *ngIf=\"lang.en\">VO MEMBERS</span>\r\n                        <span *ngIf=\"lang.mr\">व्हीवो सदस्य  </span>\r\n                    </span>\r\n                    <span *ngIf=\"getscMemberDetail\">\r\n                        <span *ngIf=\"lang.en\">SC MEMBERS</span>\r\n                        <span *ngIf=\"lang.mr\">एससी सदस्य </span>\r\n                    </span>                  \r\n                </h3>\r\n            </span>\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n                    <ul class=\"nav navbar-nav item\">\r\n                        <li class=\"active\">\r\n                            <a routerLink='/sc/members' (click)=\"getVoMembersDetails()\" routerLinkActive=\"active\">\r\n                            <span *ngIf=\"lang.en\">VO MEMBERS</span>\r\n                            <span *ngIf=\"lang.mr\">व्हीवो सदस्य </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a routerLink='/sc/members' (click)=\"getAllSCMemberDetails()\" routerLinkActive=\"active\">\r\n                        <span *ngIf=\"lang.en\">SC MEMBERS</span>\r\n                        <span *ngIf=\"lang.mr\">एससी सदस्य </span></a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table datatable class=\"table table-bordered\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">VO NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">व्हीवोचेे नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">MEMBER NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">सदस्याचे नाव  </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">DESIGANTION</span>\r\n                                    <span *ngIf=\"lang.mr\">पद </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let voMember of voMembers\">\r\n                                <td>{{voMember.VOName | uppercase}}</td>\r\n                                <td>{{voMember.MemberFullName | uppercase}}</td>\r\n                                <td>{{voMember.Designation | uppercase}}</td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"box box-default\">\r\n            <!-- <button type=\"button\" class=\"btn btn-primary\">नवीन बचतगट बनवा </button> -->\r\n            <div class=\"box-body\">\r\n              <table datatable class=\"\" cellspacing=\"0\" width=\"100%\">\r\n                <thead>\r\n                  <tr>                   \r\n                    <th>\r\n                      <span *ngIf=\"lang.en\"> MEMBER NAME</span>\r\n                      <span *ngIf=\"lang.mr\"> सदस्याचे नाव </span>\r\n                    </th>\r\n                    <th>\r\n                      <span *ngIf=\"lang.en\"> DESIGNATION</span>\r\n                      <span *ngIf=\"lang.mr\"> पद</span>\r\n                    </th>\r\n                    <th>\r\n                        <span *ngIf=\"lang.en\"> SHG NAME</span>\r\n                        <span *ngIf=\"lang.mr\">एसएचजी चे नाव</span>\r\n                      </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let voMember of voMembers\">  \r\n                    <td>{{voMember.MemberFullName | uppercase}}</td>\r\n                    <td>{{voMember.Designation | uppercase}}</td>\r\n                    <td>{{voMember.SHGName | uppercase}}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    \r\n\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/sc/members/member.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ALLSCMembers; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var ALLSCMembers = (function () {
    function ALLSCMembers(_voService, _globalURL, _access_token, _router, lang, _common_message) {
        this._voService = _voService;
        this._globalURL = _globalURL;
        this._access_token = _access_token;
        this._router = _router;
        this.lang = lang;
        this._common_message = _common_message;
        this.voMembers = null;
        this.showErrorMessage = false;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
        this.getVoMemberDetail = true;
        this.getscMemberDetail = false;
    }
    ALLSCMembers.prototype.ngOnInit = function () {
        // this.getVoMembersDetails();
        this.getAllMembersVoDetails();
    };
    ALLSCMembers.prototype.getAllMembersVoDetails = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.GET_ALL_VO_SC_MEMEBER, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                //this.reRenderDT();
                _this.voMembers = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = "Unfortunatelly there is a technical problem while getting the details.";
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    ALLSCMembers.prototype.getVoMembersDetails = function () {
        var _this = this;
        this.getVoMemberDetail = true;
        this.getscMemberDetail = false;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.GET_MEMBERS_OF_VO, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.voMembers = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                alert();
            }
        })
            .catch(function (err) {
            ;
        });
    };
    ALLSCMembers.prototype.getAllSCMemberDetails = function () {
        var _this = this;
        this.getVoMemberDetail = false;
        this.getscMemberDetail = true;
        debugger;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.GET_SC_MEMBERS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true)
                _this.voMembers = res.Data;
            _this._globalURL.isLoading = false;
        })
            .catch(function (err) {
            alert("error");
        });
    };
    ALLSCMembers = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/sc/members/member.component.html"),
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_5__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_6__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], ALLSCMembers);
    return ALLSCMembers;
}());



/***/ }),

/***/ "../../../../../src/app/components/sc/scrutinycommitte/scrutinycommitte.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <h1>\r\n        Scrutiny Committe\r\n        <small>Control Panel</small>\r\n    </h1>\r\n    <ol class=\"breadcrumb\">\r\n        <li>\r\n            <a href=\"#\">\r\n                <i class=\"fa fa-dashboard\"></i> Home </a>\r\n        </li>\r\n        <li class=\"active\">Scrutiny Committe Detail</li>\r\n    </ol>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createSCForm\">Create New Scrutiny Committe </button>\r\n                </div>\r\n\r\n                <!-- <button type=\"button\" class=\"btn btn-primary\">नवीन बचतगट बनवा </button> -->\r\n                <div class=\"box-body\">\r\n                    <table  datatable class=\"display nowrap\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>VO Name</th>\r\n                                <th>SC Member Name</th>\r\n                                <th>President</th>\r\n                                <th>Vice President</th>\r\n                                <th>Members</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <!-- <tr *ngFor=\"let savingGroup of savingGroups\">\r\n                                <td>{{savingGroup.Code}}</td>\r\n                                <td>{{savingGroup.Name | uppercase }}</td>\r\n                                <td>{{savingGroup.SchemeName| uppercase}}</td>\r\n                                <td>{{savingGroup.DateOfFormation | date: 'dd-MMM-yyyy'}}</td>\r\n                                <td>{{savingGroup.NumberOfMembers}}</td>\r\n                                <td>\r\n                                    <button title=\"View Details\" class=\"Lastbutton\" data-toggle=\"modal\" data-target=\"#viewShgMasterForm\" (click)='viewSHGDetail(savingGroup.Id)'>\r\n                                        <span class=\"material-icons\">visibility</span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr> -->\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- Modal -->\r\n<div id=\"createSCForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">New Scrutiny Committe Form</h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #VOForm=\"ngForm\" class=\"input-group\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">VO Name\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"Code\" class=\"form-control\" id=\"Code\" name=\"Code\" #Code=\"ngModel\">\r\n                                    <div *ngIf=\"Code.invalid && Code.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        Please Enter SHG Code\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">SC Member Name\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"Name\" class=\"form-control\" id=\"Name\" name=\"Name\" #Name=\"ngModel\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">                       \r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">President\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                   <input type=\"text\" class=\"form-control\" id=\"President\" name=\"President\"\">\r\n                                </div>\r\n                            </div>                    \r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"date\">Vice President\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" (ngModel)=\"VicePresident\" class=\"form-control\" id=\"VicePresident\" name=\"VicePresident\" #VicePresident=\"ngModel\"> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">Members\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"Address\" class=\"form-control\" id=\"Place\" name=\"Address\" required\r\n                                        #Address=\"ngModel\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\">Add SC</button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "../../../../../src/app/components/sc/scrutinycommitte/scrutinycommitte.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ScrunityCommitteComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var ScrunityCommitteComponent = (function () {
    function ScrunityCommitteComponent() {
    }
    ScrunityCommitteComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/sc/scrutinycommitte/scrutinycommitte.component.html"),
        })
    ], ScrunityCommitteComponent);
    return ScrunityCommitteComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/AccountTransaction/accounttransaction.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">   \r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showSuccessMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n</div>\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-5\">\r\n                <label class=\"heading-title\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" routerLink=\"../Finance\" style=\"margin-bottom:10px;\">\r\n                        <span *ngIf=\"lang.en\">BACK</span>\r\n                        <span *ngIf=\"lang.mr\">परत जा    </span></button>\r\n                  \r\n                    <span *ngIf=\"lang.en\">  GENERAL LEDGER ENTRIES</span>\r\n                    <span *ngIf=\"lang.mr\">जनरल  लेजर  </span>\r\n                </label>\r\n            </div>\r\n            <div class=\"col-md-7\">\r\n                <button class=\"btn btn-primary\" (click)=\"ExportProfitAndLoss(1)\">\r\n                    <span>\r\n                        <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                    </span> PROFIT AND LOSS PDF\r\n                </button>\r\n                <button class=\"btn btn-primary\" (click)=\"ExportProfitAndLoss(2)\">\r\n                    <span>\r\n                        <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                    </span> PROFIT PDF\r\n                </button>\r\n                <button class=\"btn btn-primary\" (click)=\"ExportProfitAndLoss(3)\">\r\n                    <span>\r\n                        <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                    </span> LOSS PDF\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <form #Loadform=\"ngForm\">\r\n                <div class=\"well well-lg row\" style=\"margin-left:0px;margin-right:0px;\">\r\n\r\n                    <div class=\"col-md-5\">\r\n                        <label>\r\n                            <span *ngIf=\"lang.en\"> SELECT FROM DATE</span>\r\n                            <span *ngIf=\"lang.mr\">पासून </span>\r\n                        </label>\r\n                        <input class=\"form-control\" type=\"date\" (ngModel)=\"lastFinanceYearOrFromDt\" name=\"lastFinanceYearOrFromDt\" required #lastdate=\"ngModel\">\r\n\r\n                        <div *ngIf=\"lastdate.invalid && lastdate.touched\" class=\"alert-danger\">\r\n                            <p>\r\n                                PLEASE SELECT FROM DATE..!\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-7\">\r\n                        <div class=\"col-md-10\">\r\n                            <label>\r\n                                <span *ngIf=\"lang.en\">SELECT TO DATE</span>\r\n                                <span *ngIf=\"lang.mr\">पर्यंत </span>\r\n                            </label>\r\n                            <input class=\"form-control\" type=\"date\" (ngModel)=\"todaysOrToDt\" name=\"todaysOrToDt\" required #TodaysOrToDate=\"ngModel\">\r\n                            <div *ngIf=\"TodaysOrToDate.invalid && TodaysOrToDate.touched\" class=\"alert-danger\">\r\n                                <p>\r\n                                    PLEASE SELECT TO DATE..!\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-2\">\r\n                            <button type=\"button\" style=\"margin-top: 24px;\" [disabled]=\"Loadform.invalid\" class=\"btn btn-primary\" (click)=\"loadGlTypeDetails(Loadform.value)\">\r\n                                <span *ngIf=\"lang.en\">LOAD</span>\r\n                                <span *ngIf=\"lang.mr\">दाखवा </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <label>\r\n                            <span *ngIf=\"lang.en\">SELECT ACCOUNT TYPE</span>\r\n                            <span *ngIf=\"lang.mr\">खाते प्रकार निवडा  </span>\r\n                    </label>\r\n                    <select class=\"form-control\" [(ngModel)]=\"selectGLType\" name=\"selectGLType\" (change)=\"getSelectedGLTypeDetails(selectGLType)\">\r\n                        <option [value]=\"1\">ASSETS</option>\r\n                        <option [value]=\"2\">LIABILITIES</option>\r\n                        <option [value]=\"3\">INCOME</option>\r\n                        <option [value]=\"4\">EXPENSES</option>\r\n                        <option [value]=\"6\">CASH AT BANK</option>\r\n                        <option [value]=\"5\">CASH IN HAND</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <h4 class=\"btn-warning text-center\" style=\"background-color: cadetblue;padding: 6px;\">DETAILS FOR\r\n                        <b>{{selectGLType == 1 ? \"ASSETS\" : selectGLType == 2 ? \"LIABILITIES\" : selectGLType == 3 ? \"INCOME\"\r\n                            : \"EXPENSES\"}}</b>\r\n                        ACCOUNT TYPE ( FROM -{{lastFinanceYearOrFromDt}} till - {{todaysOrToDt}} )\r\n                        <span>\r\n                            <button class=\"btn btn-primary\" (click)=\"ExportGlTransactionDetailsToPdf()\" value=\"Export PDF\">\r\n                                <span>\r\n                                    <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                                </span> EXPORT PDF</button>\r\n                        </span>\r\n                        <span>\r\n                            <button class=\"btn btn-primary\" (click)=\"ExportDetailedBalancesheettoPdf()\" value=\"Export ALL PDF\">\r\n                                <span>\r\n                                    <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                                </span> EXPORT ALL PDF</button>\r\n                        </span>\r\n                    </h4>\r\n                    <table datatable class=\"table table-bordered common_table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> FROM </span>\r\n                                    <span *ngIf=\"lang.mr\">पासून </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> FROM NAME </span>\r\n                                    <span *ngIf=\"lang.mr\">च्याकडून </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> TO </span>\r\n                                    <span *ngIf=\"lang.mr\">पर्यंत </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> TO NAME </span>\r\n                                    <span *ngIf=\"lang.mr\">च्याकडे </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> SUB LEDGER </span>\r\n                                    <span *ngIf=\"lang.mr\">सबलेजर </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> TRANSACTION DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">व्यवहार तारीख </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> REF ID</span>\r\n                                    <span *ngIf=\"lang.mr\">शिफारस क्रमांक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> PAYMENT MODE</span>\r\n                                    <span *ngIf=\"lang.mr\">रक्कम माध्यम </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let glTypeAccTransactionDetail of glTypeAccTransactionDetails\">\r\n                                <td>\r\n                                    <a routerLink=\"{{glTypeAccTransactionDetail.TransactionTypeName}}\">{{glTypeAccTransactionDetail.FromName}}</a>\r\n                                </td>\r\n                                <td>\r\n                                    <a routerLink=\"{{glTypeAccTransactionDetail.TransactionTypeName}}\"> {{glTypeAccTransactionDetail.FromId == 2 ? glTypeAccTransactionDetail.CMRCName : glTypeAccTransactionDetail.FromId\r\n                                        == 3 ? glTypeAccTransactionDetail.VOName : glTypeAccTransactionDetail.FromId == 4\r\n                                        ? glTypeAccTransactionDetail.SHGName : glTypeAccTransactionDetail.MemberName}}\r\n                                    </a>\r\n                                </td>\r\n                                <td>\r\n                                    <a routerLink=\"{{glTypeAccTransactionDetail.TransactionTypeName}}\">{{glTypeAccTransactionDetail.ToName}}</a>\r\n                                </td>\r\n                                <td>\r\n                                    <a routerLink=\"{{glTypeAccTransactionDetail.TransactionTypeName}}\">{{glTypeAccTransactionDetail.ToId == 2 ? glTypeAccTransactionDetail.CMRCName : glTypeAccTransactionDetail.ToId\r\n                                        == 3 ? glTypeAccTransactionDetail.VOName : glTypeAccTransactionDetail.ToId == 4 ?\r\n                                        glTypeAccTransactionDetail.SHGName : glTypeAccTransactionDetail.MemberName}}</a>\r\n                                </td>\r\n                                <td>\r\n                                    <a routerLink=\"{{glTypeAccTransactionDetail.TransactionTypeName}}\">{{glTypeAccTransactionDetail.SLTypeName}}</a>\r\n                                </td>\r\n                                <td>\r\n                                    <a routerLink=\"{{glTypeAccTransactionDetail.TransactionTypeName}}\">{{glTypeAccTransactionDetail.Amount}}</a>\r\n                                </td>\r\n                                <td>\r\n                                    <a routerLink=\"{{glTypeAccTransactionDetail.TransactionTypeName}}\">{{glTypeAccTransactionDetail.TransactionDate | date}}</a>\r\n                                </td>\r\n                                <td>\r\n                                    <a routerLink=\"{{glTypeAccTransactionDetail.TransactionTypeName}}\">{{glTypeAccTransactionDetail.RefId}}</a>\r\n                                </td>\r\n                                <td>\r\n                                    <a routerLink=\"{{glTypeAccTransactionDetail.TransactionTypeName}}\">{{glTypeAccTransactionDetail.PaymentMode == 1 ? \"CASH IN HAND\" : \"CASH AT BANK\"}}</a>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>TOTAL</td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>{{totalAmt}}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- data table end -->\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/vo/AccountTransaction/accounttransaction.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VOViewAccountTransctionComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var VOViewAccountTransctionComponent = (function () {
    function VOViewAccountTransctionComponent(_voservice, _access_token, _globalURL, router, lang, globalVariable, _common_message, commonService, exportToPDF) {
        this._voservice = _voservice;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this.router = router;
        this.lang = lang;
        this.globalVariable = globalVariable;
        this._common_message = _common_message;
        this.commonService = commonService;
        this.exportToPDF = exportToPDF;
        this.showErrorMessage = false;
        this.showSuccessMessage = false;
        this.showWarningMessage = false;
        if (sessionStorage.getItem("access_token") == "")
            router.navigate(['../login']);
    }
    VOViewAccountTransctionComponent.prototype.ngOnInit = function () {
        this.selectGLType = this.globalVariable.selectedGLTypeId;
        this.getSelectedGLTypeDetails(this.globalVariable.selectedGLTypeId);
    };
    VOViewAccountTransctionComponent.prototype.getSelectedGLTypeDetails = function (glType) {
        var _this = this;
        this._globalURL.isLoading = true;
        this.lastFinanceYearOrFromDt = "1 APR " + (new Date().getFullYear() - 1);
        this.todaysOrToDt = this.commonService.getTodaysDate();
        this.totalAmt = 0;
        this.selectGLType = glType;
        this._voservice.get(this._globalURL.GET_SELECTED_GL_TYPE_DETAILS + 3 + "&glType=" + glType + "&frDt=null&toDt=null", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    _this.glTypeAccTransactionDetails = JSON.parse(res._body).Data;
                    for (var item in _this.glTypeAccTransactionDetails)
                        _this.totalAmt = _this.totalAmt + _this.glTypeAccTransactionDetails[item].Amount;
                }
                else {
                    _this.message = _this._common_message.WarningMsg;
                    _this.showWarningMessage = true;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                    _this.glTypeAccTransactionDetails = res.Data;
                    for (var item in _this.glTypeAccTransactionDetails)
                        _this.totalAmt = _this.totalAmt + _this.glTypeAccTransactionDetails[item].Amount;
                }
                else {
                    _this.message = _this._common_message.WarningMsg;
                    _this.showWarningMessage = true;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            _this._globalURL.isLoading = false;
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOViewAccountTransctionComponent.prototype.loadGlTypeDetails = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        debugger;
        // this.lastFinanceYearOrFromDt = frDt;
        // this.todaysOrToDt = toDt;
        this.totalAmt = 0;
        this._voservice.get(this._globalURL.GET_SELECTED_GL_TYPE_DETAILS + 3 + "&glType=" + this.selectGLType + "&frDt=" + data.lastFinanceYearOrFromDt + "&toDt=" + data.todaysOrToDt, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    _this.glTypeAccTransactionDetails = JSON.parse(res._body).Data;
                    for (var item in _this.glTypeAccTransactionDetails)
                        _this.totalAmt = _this.totalAmt + _this.glTypeAccTransactionDetails[item].Amount;
                }
                else {
                    _this.message = _this._common_message.WarningMsg;
                    _this.showWarningMessage = true;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                    _this.glTypeAccTransactionDetails = res.Data;
                    for (var item in _this.glTypeAccTransactionDetails)
                        _this.totalAmt = _this.totalAmt + _this.glTypeAccTransactionDetails[item].Amount;
                }
                else {
                    _this.message = _this._common_message.WarningMsg;
                    _this.showWarningMessage = true;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            _this._globalURL.isLoading = false;
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOViewAccountTransctionComponent.prototype.ExportGlTransactionDetailsToPdf = function () {
        this._globalURL.isLoading = true;
        var reportName = this.selectGLType == 1 ? "ASSETS" : this.selectGLType == 2 ? "LIABILITIES" : this.selectGLType == 3 ? "INCOME" : "EXPENSES";
        debugger;
        var reportData = {
            "TransactionDetails": this.glTypeAccTransactionDetails,
            "Total": this.totalAmt
        };
        var headerData = {
            "VOName": this.globalVariable.VOName,
            "Code": this.globalVariable.voBaseCode,
            "frDt": this.lastFinanceYearOrFromDt,
            "toDt": this.todaysOrToDt,
            "reportName": reportName
        };
        this.exportToPDF.RExportGLTransactionDetailsToPdf(reportData, headerData);
        this._globalURL.isLoading = false;
    };
    VOViewAccountTransctionComponent.prototype.ExportDetailedBalancesheettoPdf = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.GET_DETAILED_BALANCESHEET + 3, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                var headerData = {
                    "VOName": _this.globalVariable.VOName,
                    "Code": _this.globalVariable.voBaseCode,
                    "frDt": _this.lastFinanceYearOrFromDt,
                    "toDt": _this.todaysOrToDt
                };
                _this.exportToPDF.ExportDetailedbalancesheetToPDF(res.Data, headerData);
                _this._globalURL.isLoading = false;
            }
            else {
                _this.message = _this._common_message.WarningMsg;
                _this.showWarningMessage = true;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).
            catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    //interface for r_type,
    // r_type = 1: Profit and Loss Hisgh Level Report
    // r_type = 2: Profit Detailed Transactin reports
    // r_type = 3: Loss Detailed Transactin reports
    VOViewAccountTransctionComponent.prototype.ExportProfitAndLoss = function (r_type) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        var final_URL;
        //        if (this.todaysOrToDt == null && this.lastFinanceYearOrFromDt)
        final_URL = this._globalURL.GET_PROFIT_AND_LOSS + 3 + "&fromDt=null&toDt=null";
        // else
        //     final_URL = this._globalURL.GET_PROFIT_AND_LOSS + 3 + "&fromDt=" + this.lastFinanceYearOrFromDt + "&toDt=" + this.todaysOrToDt;
        this._voservice.get(this._globalURL.GET_PROFIT_AND_LOSS + 3 + "&fromDt=null&toDt=null", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                var headerData = {
                    "VOName": _this.globalVariable.VOName,
                    "Code": _this.globalVariable.voBaseCode,
                    "frDt": _this.lastFinanceYearOrFromDt,
                    "toDt": _this.todaysOrToDt
                };
                _this.exportToPDF.ExportProfitAndLossToPDF(res.Data, headerData, r_type);
                _this._globalURL.isLoading = false;
            }
            else {
                _this.message = _this._common_message.WarningMsg;
                _this.showWarningMessage = true;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOViewAccountTransctionComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/AccountTransaction/accounttransaction.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_8__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_6__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_7__services_reports_exportpdf__["a" /* ExportToPDF */]])
    ], VOViewAccountTransctionComponent);
    return VOViewAccountTransctionComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/VO.BaseComponent.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VOBaseComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_platform_browser__ = __webpack_require__("../../../platform-browser/esm5/platform-browser.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









//import {} from '../vo'
//import {translate} from 'google-translate-api';
var VOBaseComponent = (function () {
    function VOBaseComponent(_voService, _globalURL, _access_token, lang, globalVariable, _router, _common_message, titleService) {
        this._voService = _voService;
        this._globalURL = _globalURL;
        this._access_token = _access_token;
        this.lang = lang;
        this.globalVariable = globalVariable;
        this._router = _router;
        this._common_message = _common_message;
        this.titleService = titleService;
        this.selectLang = "en";
        this.setTitle("VILLAGE ORGANIZATION");
        this.voBaseDetails = null;
        this.today = new Date;
    }
    VOBaseComponent.prototype.setTitle = function (newTitle) {
        this.titleService.setTitle(newTitle);
    };
    VOBaseComponent.prototype.ngOnInit = function () {
        this.getVODetail();
    };
    VOBaseComponent.prototype.setLang = function (lang_) {
        if (lang_ === "en") {
            this.lang.en = true;
            this.lang.mr = false;
        }
        if (lang_ === "mr") {
            this.lang.mr = true;
            this.lang.en = false;
        }
    };
    VOBaseComponent.prototype.changePassword = function (changePasswordCredentials) {
        debugger;
        //this._voService.post(this._globalURL.CHANGE_PASSWORD, changePasswordCredentials)
        this._voService.post(this._globalURL.CHANGE_PASSWORD, changePasswordCredentials, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == 200) {
                alert("Password");
            }
            else {
            }
        }).catch(function (err) {
            alert("Failed");
        });
    };
    VOBaseComponent.prototype.getVODetail = function () {
        var _this = this;
        debugger;
        debugger;
        var finalUrl = "";
        if (sessionStorage.getItem("roleId") == "3") {
            this._globalURL.get_GET_USER_PROFILE_DETAIL = "";
            finalUrl = this._globalURL.GET_USER_PROFILE_DETAIL + (sessionStorage.getItem("roleId") == null ? "3" : sessionStorage.getItem("roleId"));
        }
        else
            finalUrl = this._globalURL.GET_USER_PROFILE_DETAIL;
        this._voService.get(finalUrl, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.voBaseDetails = res.Data;
                _this.dist = _this.voBaseDetails.District;
                _this.VillageName = _this.voBaseDetails.Village;
                _this.globalVariable.voBaseCode = res.Data.Code;
                _this.globalVariable.cmrcBaseCode = res.Data.ParentCode;
                _this.globalVariable.VOName = res.Data.Name;
                _this.globalVariable.CMRCName = res.Data.CMRCName;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOBaseComponent.prototype.SignOut = function () {
        sessionStorage.clear();
        sessionStorage.setItem("roleId", null);
    };
    VOBaseComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/index.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_5__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_4__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_7__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_6__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_8__angular_platform_browser__["b" /* Title */]])
    ], VOBaseComponent);
    return VOBaseComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/attendance/attendance.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showSuccessMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n</div>\r\n\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-5\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\"> ATTENDENCE DETAILS FORM</span>\r\n                    <span *ngIf=\"lang.mr\">हजेरीचा तपशील फॉर्म</span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<section class=\"content\">\r\n    <div class=\"row\" *ngIf=\"isMeetingListData\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <!-- <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"showOrAttendanceForm(1)\">\r\n                        <span *ngIf=\"lang.en\">MARK ATTENDANCE</span>\r\n                        <span *ngIf=\"lang.mr\">हजेरी भरा</span>\r\n                    </button>\r\n                </div> -->\r\n                <div class=\"col-md-12\" style=\"margin-top:7px;\">\r\n                    <div class=\"col-md-2\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"showOrAttendanceForm(1)\">\r\n                            <span *ngIf=\"lang.en\">MARK ATTENDANCE</span>\r\n                            <span *ngIf=\"lang.mr\">हजेरी भरा</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"col-md-8\">\r\n                            <label class=\"form-label\">\r\n                                <span *ngIf=\"lang.en\">SELECT DATE WHEN YOU WANT TO SEE THE MEETING DETAILS</span>\r\n                                <span *ngIf=\"lang.mr\">तारीख निवडा जेव्हा आपण बैठकीचे तपशील पाहू इच्छिता तेव्हा</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                                <ng-datepicker class=\"dt-picker-format\"  [(ngModel)]=\"ActualMeetingDate\"#selectedMeetingDt name=\"ActualMeetingDate\" [options]=\"options\">\r\n                                    </ng-datepicker>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <input type=\"date\" placeholder=\"Select Date\" #date (ngModel)=\"date\" name=\"date\"> -->\r\n                    <div class=\"col-md-2\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"loanMeetingDetails(selectedMeetingDt)\" style=\"margin-bottom:10px;\">\r\n                            <span *ngIf=\"lang.en\">LOAD MEETINGS</span>\r\n                            <span *ngIf=\"lang.mr\">मिटींग्स पाहा</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <table *ngIf=\"meetingDetails != null\"  class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>EXPECTED MEETING DATE</th>\r\n                                <th>ACTUAL MEETING DATE</th>\r\n                                <th>MEETING COLLECTED DATE</th>\r\n                                <th>MEETING PLACE</th>\r\n                                <th>REASON</th>\r\n                                <th>DECISION</th>\r\n                                <th>COMMENT</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>{{meetingDetails[0].MeetingDate}}</td>\r\n                                <td>{{meetingDetails[0].ActualMeetingDateInNumber}}</td>\r\n                                <td>{{meetingDetails[0].ActualMeetingDate}}</td>\r\n                                <td>{{meetingDetails[0].Address}}</td>\r\n                                <td>{{meetingDetails[0].MeetingReason}}</td>\r\n                                <td>{{meetingDetails[0].MeetingDecision}}</td>\r\n                                <td>{{meetingDetails[0].Comment}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table datatable class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">MEMBER NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">मिटींग निर्णय</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">PRESENT</span>\r\n                                    <span *ngIf=\"lang.mr\">मिटींगचे कारण</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ABSENT REASON</span>\r\n                                    <span *ngIf=\"lang.mr\">मिटींगचे कारण</span>\r\n                                </th>\r\n                                <!-- <th>\r\n                                    <span *ngIf=\"lang.en\">MEMBER OF TIME TAKEN</span>\r\n                                    <span *ngIf=\"lang.mr\">वेळ घेतलेला सदस्य</span>\r\n                                </th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let meetingDetail of meetingDetails\">\r\n                                <td>{{meetingDetail.VOMemberName}}</td>\r\n                                <td>{{meetingDetail.IsAbsent != true ? \"NO\" : \"YES\"}}</td>\r\n                                <td>{{meetingDetail.AbsentReason}}</td>\r\n                                <!-- <td>{{meetingDetail.NoOfMembers}}</td> -->\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\" *ngIf=\"editisMeetingListData\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"col-md-3\">\r\n                        <button class=\"btn btn-primary\" routerLink=\"#\" (click)=\"naviagateToAttendance()\">BACK</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <form #saveAttendance=\"ngForm\">\r\n                <div class=\"box box-default\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"col-md-3\">\r\n                                <b>\r\n                                    <span *ngIf=\"lang.en\">EXPECTED MEETING DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">प्रत्यक्षात मिटींगची तारीख</span>\r\n                                </b>\r\n                                <p>\r\n                                    {{voMeetingDt}}\r\n                                    <!-- <input class=\"form-control\" type=\"number\" placeholder=\"Entre meetaing date\" (ngModel)=\"ActualMeetingDate\" name=\"ActualMeetingDate\"\r\n                                                #ActualMeetingDate=\"ngModel\"> -->\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <b>\r\n                                    <span *ngIf=\"lang.en\">ENTER ACTUAL MEETING DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">प्रत्यक्षात मिटींगची तारीख</span>\r\n                                </b>\r\n                                <p>\r\n                                    <input class=\"form-control\" type=\"number\" placeholder=\"Entre meetaing date\" (ngModel)=\"ActualMeetingDate\" name=\"ActualMeetingDate\"\r\n                                        #ActualMeetingDate=\"ngModel\">\r\n                                </p>\r\n                                <div *ngIf=\"ActualMeetingDate.invalid && ActualMeetingDate.touched\" class=\"alert-danger\">\r\n                                    <p>\r\n                                        PLEASE SELECT MEETING DATE..!\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <b>\r\n                                    <span *ngIf=\"lang.en\">MEETING PLACE</span>\r\n                                    <span *ngIf=\"lang.mr\">मिटींगचे स्थळ</span>\r\n                                </b>\r\n                                <p>\r\n                                    <input class=\"form-control\" type=\"text\" placeholder=\"Entre meetaing place\" (ngModel)=\"address\" name=\"Address\" required #address=\"ngModel\">\r\n                                </p>\r\n                                <div *ngIf=\"address.invalid && address.touched\" class=\"alert-danger\">\r\n                                    <p>\r\n                                        PLEASE ENTER MEETING PLACE..!\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                                <b>\r\n                                    <span *ngIf=\"lang.en\">MEETING REASON</span>\r\n                                    <span *ngIf=\"lang.mr\">मिटींगचे कारण</span>\r\n                                </b>\r\n                                <p>\r\n                                    <textarea class=\"form-control\" placeholder=\"Entre Meeting reason\" required #MeetingReason=\"ngModel\" name=\"MeetingReason\"\r\n                                        (ngModel)=\"MeetingReason\">\r\n                                            </textarea>\r\n                                </p>\r\n                                <div *ngIf=\"MeetingReason.invalid && MeetingReason.touched\" class=\"alert-danger\">\r\n                                    <p>\r\n                                        PLEASE ENTER MEETING REASON..!\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"box box-default\" style=\"margin-top:10px;\">\r\n                    <div class=\"box-body\">\r\n                        <table datatable class=\"table table-bordered common_table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">MEMBER FULL NAME</span>\r\n                                        <span *ngIf=\"lang.mr\">सदस्याचे पूर्ण नाव</span>\r\n\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">DESIGNATION</span>\r\n                                        <span *ngIf=\"lang.mr\">पद</span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">PRESENT</span>\r\n                                        <span *ngIf=\"lang.mr\">उपस्थित</span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">ABESENT</span>\r\n                                        <span *ngIf=\"lang.mr\">गैरहजर</span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">ABSENT REASON</span>\r\n                                        <span *ngIf=\"lang.mr\">गैरहजेरीचे कारण</span>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let memberName of memberNames\">\r\n                                    <td>\r\n                                        {{memberName.MemberFullName}}\r\n                                    </td>\r\n                                    <td>{{memberName.Designation}}\r\n\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"radio\" name=\"{{memberName.MemberId}}\" value=\"p\" (ngModel)=\"p\" #p=\"ngModel\">\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type=\"radio\" name=\"{{memberName.MemberId}}\" value=\"a\" (ngModel)=\"a\" #a=\"ngModel\">\r\n                                    </td>\r\n                                    <td>\r\n                                        <textarea class=\"form-control\" class=\"\" name=\"{{memberName.MemberId + 'r'}}\" (ngModel)=\"absentReason\" #absentReason=\"ngModel\">\r\n                                            </textarea>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <b>\r\n                                    <span *ngIf=\"lang.en\"> MEETING DECISION:</span>\r\n                                    <span *ngIf=\"lang.mr\">मिटींगचा निर्णय </span>\r\n                                </b>\r\n                                <p>\r\n                                    <textarea class=\"form-control\" placeholder=\"Entre Meeting decision\" required #MeetingDecision=\"ngModel\" name=\"MeetingDecision\"\r\n                                        (ngModel)=\"MeetingDecision\">\r\n                                    </textarea>\r\n                                </p>\r\n                                <div *ngIf=\"MeetingDecision.invalid && MeetingDecision.touched\" class=\"alert-danger\">\r\n                                    <p>\r\n                                        PLEASE ENTER MEETING DICISION..!\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <b>\r\n                                    <span *ngIf=\"lang.en\"> OTHER COMMENT</span>\r\n                                    <span *ngIf=\"lang.mr\">इतर कमेंट </span>\r\n                                </b>\r\n                                <p>\r\n                                    <textarea class=\"form-control\" placeholder=\"Entre Any comment\" #Comment=\"ngModel\" name=\"Comment\" (ngModel)=\"Comment\">\r\n                                    </textarea>\r\n                                </p>\r\n                                <div *ngIf=\"Comment.invalid && Comment.touched\" class=\"alert-danger\">\r\n                                    <p>\r\n                                        PLEASE ENTER COMMENT..! IS OPTONAL\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <!-- <input type=\"submit\" class=\"btn btn-primary\" (click)=\"SaveMeetingAttendance(saveAttendance.value)\" value=\"SAVE MEETING\"> -->\r\n                                <div class=\"col-md-3\">\r\n                                    <button type=\"submit\" [disabled]=\"saveAttendance.invalid\" class=\"btn btn-primary\" (click)=\"SaveMeetingAttendance(saveAttendance.value)\">\r\n\r\n                                        <span *ngIf=\"lang.en\"> SAVE </span>\r\n                                        <span *ngIf=\"lang.mr\">जतन करा </span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/vo/attendance/attendance.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AttendanceComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_date_fns_locale_en__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var AttendanceComponent = (function () {
    function AttendanceComponent(_voservice, _access_token, globalvariable, _globalURL, lang, _common_message, router, commonService) {
        this._voservice = _voservice;
        this._access_token = _access_token;
        this.globalvariable = globalvariable;
        this._globalURL = _globalURL;
        this.lang = lang;
        this._common_message = _common_message;
        this.router = router;
        this.commonService = commonService;
        // @ViewChild(DataTableDirective)
        // dtElement: DataTableDirective;
        // dtInstance: DataTables.Api;
        // public dtTrigger: Subject<any> = new Subject();
        this.editisMeetingListData = false;
        this.isMeetingListData = true;
        this.ActualMeetingDate = new Date();
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_7_date_fns_locale_en__,
            //minDate: new Date(Date.now()), // Minimal selectable date
            minDate: new Date("2016-03-03"),
            //maxDate: new Date(Date.now()),  // Maximal selectable date
            barTitleIfEmpty: 'Click to select a date'
        };
        if (sessionStorage.getItem("access_token") == "")
            router.navigate(['../login']);
    }
    AttendanceComponent.prototype.ngOnInit = function () {
        this.getAllVOMembers();
        this.getVOMeetingDate();
        this.getAllVOMembers();
    };
    AttendanceComponent.prototype.ngAfterViewInit = function () {
        //this.dtTrigger.next();
    };
    AttendanceComponent.prototype.getVOMeetingDate = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.GET_VO_MEETING_DT, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true)
                _this.voMeetingDt = res.Data;
        }).catch(function (res) {
            console.log(res);
        });
    };
    AttendanceComponent.prototype.getAllVOMembers = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.GET_ALL_VO_SC_MEMEBER, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.memberNames = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                });
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
        //this.reRenderDT();
        this._globalURL.isLoading = false;
    };
    AttendanceComponent.prototype.loanMeetingDetails = function (date) {
        var _this = this;
        date = this.commonService.convertToDate(date);
        this._globalURL.isLoading = true;
        this.meetingDetails = null;
        this._voservice.get(this._globalURL.GET_ATTENDANCE_DETAILS + "?datetime=" + date, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    _this.meetingDetails = JSON.parse(res._body).Data;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                    _this.meetingDetails = res.Data;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    AttendanceComponent.prototype.getMeetingDetails = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.GET_ATTENDANCE_DETAILS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    _this.meetingDetails = JSON.parse(res._body).Data;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                    _this.meetingDetails = res.Data;
                    _this._globalURL.isLoading = true;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    AttendanceComponent.prototype.showOrAttendanceForm = function (id) {
        if (id == 1) {
            this.getAllVOMembers();
            this.isMeetingListData = false;
            this.editisMeetingListData = true;
        }
        else {
            this.isMeetingListData = true;
        }
    };
    AttendanceComponent.prototype.SaveMeetingAttendance = function (data) {
        var _this = this;
        this._globalURL.isLoading = true;
        var memberIdAndPresentStatus = new Array({ Key: 0, Value: "" });
        memberIdAndPresentStatus.pop();
        for (var item in data) {
            for (var memAttItem in this.memberNames) {
                if (item == this.memberNames[memAttItem].MemberId) {
                    memberIdAndPresentStatus.push({ Key: parseInt(item), Value: data[item] == "p" ? "1" : data[item + "r"] });
                }
            }
        }
        var meetingAttendanceData = {
            "ActualMeetingDate": data.ActualMeetingDate,
            "Address": data.Address,
            "Comment": data.Comment,
            "MeetingDecision": data.MeetingDecision,
            "MeetingReason": data.MeetingReason,
            "MemberIdAndPresentStatus": memberIdAndPresentStatus
        };
        this._voservice.post(this._globalURL.MARK_MEETING_ATTENDANCE, meetingAttendanceData, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.status == 1) {
                _this._globalURL.isLoading = false;
                _this.showSuccessMessage = true;
                _this.message = _this._common_message.SaveMeetingAttendenceMsg;
                setInterval(function () {
                    _this.showSuccessMessage = false;
                }, 5000);
            }
            if (res.status == 2) {
                _this._globalURL.isLoading = false;
                _this.showErrorMessage = true;
                _this.message = _this._common_message.SaveErrorAttendenceMsg;
                setInterval(function () {
                    _this.showErrorMessage = false;
                });
            }
            if (res.status == 3) {
                _this._globalURL.isLoading = false;
                _this.showErrorMessage = true;
                _this.message = _this._common_message.SaveErrorAttendenceMsg;
                setInterval(function () {
                    _this.showErrorMessage = false;
                });
            }
            _this._globalURL.isLoading = false;
        })
            .catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    AttendanceComponent.prototype.naviagateToAttendance = function () {
        this.editisMeetingListData = false;
        this.isMeetingListData = true;
    };
    AttendanceComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/attendance/attendance.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_5__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_2__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_8__services_common_service__["a" /* CommonService */]])
    ], AttendanceComponent);
    return AttendanceComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/dashboard/dashboard.component.html":
/***/ (function(module, exports) {

module.exports = "<!-- Main content -->\r\n<section class=\"content\">\r\n  <!-- Info boxes -->\r\n\r\n  <div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n  </div>\r\n  <section class=\"content-header\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\" style=\"padding:3px;\">\r\n        <div class=\"col-md-5\">\r\n          <label class=\"heading-title\">\r\n            <span *ngIf=\"lang.en\">VO DASHBOARD DETAILS</span>\r\n            <span *ngIf=\"lang.mr\">व्हीओ डॅशबोर्ड तपशील </span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n      <div class=\"box-body vo-detail\">\r\n        <table class=\"table\" style=\"width:100%\">\r\n          <thead>\r\n            <tr *ngFor=\"let count of SHGAndMembersCount\" style=\"border:1px solid #fff\">\r\n              <th class=\"finance-heading-name\">\r\n                <a *ngIf=\"count.Type == 'SHG'\" routerLink=\"/vo/shg_master\">\r\n                  <div class=\"dashboard-finance-details\">\r\n                    <h5>\r\n                      <b>\r\n                        <span *ngIf=\"lang.en\">TOTAL SHG</span>\r\n                        <span *ngIf=\"lang.mr\">एकूण एसएचजी</span>\r\n                      </b>\r\n                    </h5>\r\n                  </div>\r\n                </a>\r\n                <a *ngIf=\"count.Type == 'Member'\" routerLink=\"/vo/shg_master\">\r\n                  <div class=\"dashboard-finance-details\">\r\n                    <h5>\r\n                      <b>\r\n                        <span *ngIf=\"lang.en\">TOTAL MEMBERS</span>\r\n                        <span *ngIf=\"lang.mr\"> एकूण सदस्य</span>\r\n                      </b>\r\n                    </h5>\r\n                  </div>\r\n                </a>\r\n              </th>\r\n              <th class=\"finance-heading-value\">\r\n                <a *ngIf=\"count.Type == 'SHG'\" routerLink=\"/vo/shg_master\">\r\n                  <div class=\"dashboard-finance-details\">\r\n                    <h5>\r\n                      <b>{{count.Count}}</b>\r\n                    </h5>\r\n                  </div>\r\n                </a>\r\n                <a *ngIf=\"count.Type == 'Member'\" routerLink=\"/vo/shg_master\">\r\n                  <div class=\"dashboard-finance-details\">\r\n                    <h5>\r\n                      <b>{{count.Count}} </b>\r\n                    </h5>\r\n                  </div>\r\n                </a>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th class=\"finance-heading-name\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  <b>\r\n                    <span *ngIf=\"lang.en\">CUMULATIVE CMRC FUND </span>\r\n                    <span *ngIf=\"lang.mr\"> सीएमआरसी प्राप्त निधी </span>\r\n                  </b>\r\n                </h5>\r\n              </th>\r\n              <th class=\"finance-heading-value\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  <B> {{financeDetails.TotalCumulativeFundAmt | currency: 'INR'}}</B>\r\n                </h5>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th class=\"finance-heading-name\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  {{financeDetails.FundType | uppercase}}\r\n                  <span *ngIf=\"lang.en\">START DATE </span>\r\n                  <span *ngIf=\"lang.mr\"> सीएमआरसी प्रारंभ दिनांक </span>\r\n                </h5>\r\n              </th>\r\n              <th class=\"finance-heading-value\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  <B> {{financeDetails.VOStartDate | date}}</B>\r\n                </h5>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th class=\"finance-heading-name\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  <b>\r\n                    <span *ngIf=\"lang.en\">TOTAL LOAN DISTRIBUTED </span>\r\n                    <span *ngIf=\"lang.mr\"> एकूण कर्ज वितरण </span>\r\n                  </b>\r\n                </h5>\r\n              </th>\r\n              <th class=\"finance-heading-value\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  <B>{{financeDetails.TotalLoanAmtSpent | currency: 'INR'}}</B>\r\n                </h5>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th class=\"finance-heading-name\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  <b>\r\n                    <span *ngIf=\"lang.en\">TOTAL REPAID AMOUNT </span>\r\n                    <span *ngIf=\"lang.mr\">परतफेड केलेली रक्कम</span>\r\n                  </b>\r\n                </h5>\r\n              </th>\r\n              <th class=\"finance-heading-value\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  <B>{{financeDetails.TotalRepaymentAmount | currency: 'INR'}}</B>\r\n                </h5>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th class=\"finance-heading-name\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  <b>\r\n                    <span *ngIf=\"lang.en\">TOTAL OUTSTANDING LOAN AMT </span>\r\n                    <span *ngIf=\"lang.mr\">थकबाकी कर्ज रक्कम</span>\r\n                  </b>\r\n                </h5>\r\n              </th>\r\n              <th class=\"finance-heading-value\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  <B>{{financeDetails.TotalOutstandingRepaymentAmount | currency: 'INR'}}</B>\r\n                </h5>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th class=\"finance-heading-name\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  <b>\r\n                    <span *ngIf=\"lang.en\">NET INCOME/LOSS </span>\r\n                    <span *ngIf=\"lang.mr\"> निव्वळ नफा /नुकसान</span>\r\n                  </b>\r\n                </h5>\r\n              </th>\r\n              <th class=\"finance-heading-value\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  <B>{{balancesheet.NetProfitOrLoss | currency: 'INR'}}</B>\r\n                </h5>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th class=\"finance-heading-name\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  <b>\r\n                    <span *ngIf=\"lang.en\">TOTAL AVAILABLE AMT </span>\r\n                    <span *ngIf=\"lang.mr\"> एकूण उपलब्ध रक्कम </span>\r\n                  </b>\r\n                </h5>\r\n\r\n              </th>\r\n              <th class=\"finance-heading-value\">\r\n                <h5 class=\"dashboard-finance-details\">\r\n                  <B>{{balancesheet.CashInHandAmount + balancesheet.cashAtBankAmount | currency: 'INR'}}</B>\r\n                </h5>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-8\">\r\n      <div class=\"box-body box_section\">\r\n        <table class=\"table table-bordered common_table\">\r\n          <caption class=\"text-center btn-info\" style=\"color:#fff; background-color: cadetblue\">\r\n            <h5 style=\"text-align: center; margin:-3px 10px;\">\r\n              <span *ngIf=\"lang.en\">\r\n                <label class=\"table-head\">VILLAGE ORGANIZATION PROFILE</label>\r\n              </span>\r\n              <span *ngIf=\"lang.mr\">\r\n                <label class=\"table-head\"> ग्रामसंस्था प्रोफाइल </label>\r\n              </span>\r\n              <button class=\"btn btn-primary pdf-button\" (click)=\"voProfileDetails()\">\r\n                <span>\r\n                  <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                </span> PDF\r\n              </button>\r\n            </h5>\r\n          </caption>\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">VO NAME </span>\r\n                <span *ngIf=\"lang.mr\"> ग्रामसंस्थेचे नांव </span>\r\n              </th>\r\n              <td colspan=\"3\">{{voDetails.Name | uppercase}}</td>\r\n            </tr>\r\n            <br>\r\n          </thead>\r\n          <tbody style=\"margin-top:12px;\">\r\n            <tr>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">AREA </span>\r\n                <span *ngIf=\"lang.mr\">क्षेत्र </span>\r\n              </th>\r\n              <td>{{voDetails.Area| uppercase}}</td>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">PAN CARD NUMBER </span>\r\n                <span *ngIf=\"lang.mr\">पॅन कार्ड नंबर</span>\r\n              </th>\r\n              <td>{{voDetails.PanCardNumber}}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">VILLAGE NAME </span>\r\n                <span *ngIf=\"lang.mr\">गावाचे नाव </span>\r\n              </th>\r\n              <td>{{voDetails.Village | uppercase}}</td>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> VO FORMATION DATE </span>\r\n                <span *ngIf=\"lang.mr\">ग्रामसंस्था स्थापना दिनांक </span>\r\n              </th>\r\n              <td>{{voDetails.FormationDate | date:'dd-MMM-yyyy'}}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">ADDRESS </span>\r\n                <span *ngIf=\"lang.mr\">पत्ता </span>\r\n              </th>\r\n              <td>{{voDetails.Address | uppercase}}</td>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">BANK AC/NUMBER </span>\r\n                <span *ngIf=\"lang.mr\">बँक खाते क्रमांक </span>\r\n              </th>\r\n              <td>{{voDetails.BankAccountNumber}}</td>\r\n\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">TALUKA </span>\r\n                <span *ngIf=\"lang.mr\">तालुका </span>\r\n              </th>\r\n              <td>{{voDetails.Taluka | uppercase}}</td>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">BANK NAME </span>\r\n                <span *ngIf=\"lang.mr\">बँकेचे नाव</span>\r\n              </th>\r\n              <td>{{voDetails.BankName | uppercase}}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">DISTRICT </span>\r\n                <span *ngIf=\"lang.mr\">जिल्हा </span>\r\n              </th>\r\n              <td>{{voDetails.District | uppercase}}</td>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> BRANCH NAME</span>\r\n                <span *ngIf=\"lang.mr\">शाखेचे नाव </span>\r\n              </th>\r\n              <td>{{voDetails.BranchName | uppercase}}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">PINCODE</span>\r\n                <span *ngIf=\"lang.mr\">पिन कोड </span>\r\n              </th>\r\n              <td>{{voDetails.PinCode}}</td>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">BANK ADDRESS</span>\r\n                <span *ngIf=\"lang.mr\">बँकेचा पत्ता </span>\r\n              </th>\r\n              <td>{{voDetails.BankAddress | uppercase}}</td>\r\n            </tr>\r\n            <tr>\r\n            </tr>\r\n            <tr>\r\n              <th></th>\r\n              <td></td>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">IFSC CODE</span>\r\n                <span *ngIf=\"lang.mr\">आयएफएससी कोड </span>\r\n              </th>\r\n              <td>{{voDetails.IFSCCode}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!-- end Scheme SHG Table -->\r\n\r\n  <!-- Start Scheme Scheme Table -->\r\n\r\n\r\n  <div class=\"row\" style=\"margin-top:20px;margin-left:0px;margin-right:0px;\">\r\n    <div class=\"box-body box_section\">\r\n      <table class=\"table table-bordered common_table\">\r\n        <caption class=\"text-center btn-info\" style=\"color:#fff; background-color: cadetblue\">\r\n          <h5 style=\"text-align: center; margin:-3px 10px;\">\r\n              <div *ngIf=\"isSchemLoading\" style=\"top:50%;float: left;z-index:99999;\">\r\n                  <div>\r\n                    <img src=\"/assets/pdf/loadwait.gif\" class=\"image-set\" style=\"height:50px;width:50px;\">\r\n                  </div>\r\n                </div>\r\n            <span *ngIf=\"lang.en\">\r\n              <label class=\"table-head\">SCHEME & CASTE WISE SHG DATA</label>\r\n            </span>\r\n            <span *ngIf=\"lang.mr\">\r\n              <label class=\"table-head\"> योजनेनुसार व प्रवर्गानुसार बचतगटाची माहिती </label>\r\n            </span>\r\n            <button class=\"btn btn-primary pdf-button\" (click)=\"R38_SchemeAndCastWiseSHGDetailPDF()\">\r\n              <span>\r\n                <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n              </span> PDF\r\n            </button>\r\n          </h5>\r\n        </caption>\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">SR. NO.</span>\r\n              <span *ngIf=\"lang.mr\"> अं.क्र. </span>\r\n            </th>\r\n\r\n            <th>\r\n              <span *ngIf=\"lang.en\">SCHEME NAME</span>\r\n              <span *ngIf=\"lang.mr\"> योजनेचे नाव </span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">TOTAL SHG</span>\r\n              <span *ngIf=\"lang.mr\">एकूण बचत गट </span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">SC</span>\r\n              <span *ngIf=\"lang.mr\">एससी</span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">ST</span>\r\n              <span *ngIf=\"lang.mr\">एसटी</span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">NT +</span>\r\n              <span *ngIf=\"lang.mr\">एनटी +</span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">OBC</span>\r\n              <span *ngIf=\"lang.mr\">ओबीसी</span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">MINORITY</span>\r\n              <span *ngIf=\"lang.mr\">अल्पसंख्यक </span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">OPEN</span>\r\n              <span *ngIf=\"lang.mr\">खुला </span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">TOTAL MEMBERS</span>\r\n              <span *ngIf=\"lang.mr\">एकूण सदस्य </span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">SCHEME WISE %</span>\r\n              <span *ngIf=\"lang.mr\">योजनेनुसार % </span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let schemeWiseSHGCaste_ of schemeWiseSHGCasteData; let rowIndex=index\">\r\n            <td>{{rowIndex+1}}</td>\r\n            <td>{{schemeWiseSHGCaste_.SchemeName}}</td>\r\n            <td>{{schemeWiseSHGCaste_.TotalSHGCount}}</td>\r\n            <td *ngFor=\"let castData of schemeWiseSHGCaste_.Data\">{{castData.totalMem}}</td>\r\n            <td>{{schemeWiseSHGCaste_.TotalMembers}}</td>\r\n            <td>\r\n              <b>{{schemeWiseSHGCaste_.TotalMembersPercentage}} %</b>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>-</td>\r\n            <td>\r\n              <b>\r\n                <span *ngIf=\"lang.en\">TOTAL</span>\r\n                <span *ngIf=\"lang.mr\">एकूण </span>\r\n              </b>\r\n            </td>\r\n            <td>{{shgCount}}</td>\r\n            <td *ngFor=\"let castData_ of casteWiseData\">\r\n              <b>{{castData_.totalMem}}</b>\r\n            </td>\r\n            <td>\r\n              <b>{{memebrCount}}</b>\r\n            </td>\r\n            <td>\r\n              <b>100 %</b>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>-</td>\r\n            <td>-</td>\r\n            <td>\r\n              <b>\r\n                <span *ngIf=\"lang.en\">CASTE WISE (%)</span>\r\n                <span *ngIf=\"lang.mr\">प्रवर्गानुसार (%) </span>\r\n              </b>\r\n            </td>\r\n            <td *ngFor=\"let castData_ of casteWiseData\">\r\n              <b>{{castData_.percentage}} %</b>\r\n            </td>\r\n            <td>-</td>\r\n            <td>-</td>\r\n          </tr>\r\n          <!--          <tr>\r\n              <td colspan=\"3\">Caste Wise (%)</td>\r\n              <td *ngFor=\"let castData_ of schemeWiseSHGCaste_.Caste\">{{castData_.percentage}}</td>\r\n            </tr> -->\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- end Scheme SHG Table -->\r\n  <!-- Marital  and Status wise Member data  -->\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\" style=\"margin-top:18px;\">\r\n      <div class=\"box-body box_section\">\r\n        <table class=\"table table-bordered common_table\">\r\n          <caption class=\"text-center btn-info\" style=\"color:#fff;  background-color: cadetblue\">\r\n            <h5 style=\"text-align: center; margin:-3px 10px;\">\r\n              <span *ngIf=\"lang.en\">\r\n                <label class=\"table-head\">MARITAL STATUS WISE MEMBER DATA\r\n                  <P>\r\n                    <small style=\"color:#fff;  background-color: cadetblue\">TOTAL MEMBERS - ({{totalMembers}})</small>\r\n                  </P>\r\n                </label>\r\n              </span>\r\n              <span *ngIf=\"lang.mr\">\r\n                <label class=\"table-head\">वैवाहिक स्थितीनुसार सदस्याची माहिती\r\n                  <P>\r\n                    <small style=\"color:#fff;  background-color: cadetblue\">एकूण सदस्य - ({{totalMembers}})</small>\r\n                  </P>\r\n                </label>\r\n              </span>\r\n              <button class=\"btn btn-primary pdf-button\" (click)=\"maritalStatusWiseDataForVo()\">\r\n                <span>\r\n                  <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                </span>\r\n                PDF\r\n              </button>\r\n            </h5>\r\n          </caption>\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">STATUS</span>\r\n                <span *ngIf=\"lang.mr\">स्थिती</span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">TOTAL MEMBERS</span>\r\n                <span *ngIf=\"lang.mr\">एकूण सदस्य संख्या </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">TOTAL MEMBERS (%)</span>\r\n                <span *ngIf=\"lang.mr\">एकूण सदस्य(%)</span>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let marritalStatusData of GetMarritalStatusData\">\r\n              <td>{{marritalStatusData.Status}}</td>\r\n              <td>{{marritalStatusData.TotalMembers}}</td>\r\n              <td>{{marritalStatusData.TotalMemberPer}} %</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6\" style=\"margin-top:18px;\">\r\n      <div class=\"box-body box_section\">\r\n        <table class=\"table table-bordered common_table\">\r\n          <caption class=\"text-center btn-info\" style=\"color:#fff;  background-color: cadetblue\">\r\n            <h5 style=\"margin:-3px 10px;\">\r\n              <span *ngIf=\"lang.en\">\r\n                <label class=\"table-head\">AGE WISE MEMBERS DATA\r\n                  <P>\r\n                    <small style=\"color:#fff;  background-color: cadetblue\">TOTAL MEMBERS - ({{totalMembers}})</small>\r\n                  </P>\r\n                </label>\r\n              </span>\r\n              <span *ngIf=\"lang.mr\">\r\n                <label class=\"table-head\">वयानुसार सदस्याची माहिती\r\n                  <P>\r\n                    <small style=\"color:#fff;  background-color: cadetblue\">एकूण सदस्य - ({{totalMembers}})</small>\r\n                  </P>\r\n                </label>\r\n              </span>\r\n              <button class=\"btn btn-primary pdf-button\" (click)=\"ageWiseDataForVo()\">\r\n                <span>\r\n                  <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                </span>\r\n                PDF\r\n              </button>\r\n            </h5>\r\n          </caption>\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">AGE GROUP</span>\r\n                <span *ngIf=\"lang.mr\">वयो मर्यादा </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">TOTAL MEMBERS</span>\r\n                <span *ngIf=\"lang.mr\">एकूण सदस्य संख्या </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\">TOTAL MEMBERS(%)</span>\r\n                <span *ngIf=\"lang.mr\">एकूण सदस्य(%)</span>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let getAgeWiseData of GetAgeWiseData\">\r\n              <td>{{getAgeWiseData.AgeGroup}}</td>\r\n              <td>{{getAgeWiseData.TotalMember}}</td>\r\n              <td>{{getAgeWiseData.TotalMemberPer}} %</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!--  End Marital  and Status wise Member data  -->\r\n\r\n  <div class=\"row\" style=\"margin-top:18px;margin-left:0px;margin-right:0px;\">\r\n    <div class=\"box-body box_section\">\r\n      <table class=\"table table-bordered common_table\">\r\n        <caption class=\"text-center btn-info\" style=\"color:#fff;  background-color: cadetblue\">\r\n          <h5 style=\"text-align: center; margin:-3px 10px;\">\r\n            <span *ngIf=\"lang.en\" style=\"color:#fff;  background-color: cadetblue\">\r\n              <label class=\"table-head\">TOTAL PURPOSE WISE LOAN DISTRIBUTION DATA\r\n                <p>\r\n                  <small style=\"color:#fff;  background-color: cadetblue\">\r\n                    TOTAL LOAN CONSUMED MEMBERS - {{caste_total_loan_con_mem}} AND APPROVED LOAN AMOUNT {{totalLoanApprovedAmt | currency: 'INR'}}\r\n                  </small>\r\n                </p>\r\n              </label>\r\n            </span>\r\n            <span *ngIf=\"lang.mr\">\r\n              <label class=\"table-head\">उद्देशानुसार कर्जवाटपाची माहिती\r\n                <p>\r\n                  <small style=\"color:#fff;  background-color: cadetblue\">\r\n                    कर्ज घेतलेले एकूण सदस्य- {{caste_total_loan_con_mem}} आणि मंजूर केलेली कर्जाची रक्कम {{totalLoanApprovedAmt | currency: 'INR'}}\r\n                  </small>\r\n                </p>\r\n              </label>\r\n            </span>\r\n\r\n            <button class=\"btn btn-primary pdf-button\" (click)=\"R41PurposewiseLoanDistExportToPdf()\">\r\n              <span>\r\n                <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n              </span>\r\n              PDF\r\n            </button>\r\n          </h5>\r\n        </caption>\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">TYPE</span>\r\n              <span *ngIf=\"lang.mr\">प्रकार</span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">TOTAL MEMBERS</span>\r\n              <span *ngIf=\"lang.mr\">एकूण सदस्य संख्या </span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">TOTAL MEMBERS(%)</span>\r\n              <span *ngIf=\"lang.mr\">एकूण सदस्य (%)</span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">TOTAL AMOUNT</span>\r\n              <span *ngIf=\"lang.mr\">एकूण रक्कम</span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">TOTAL AMOUNT (%)</span>\r\n              <span *ngIf=\"lang.mr\">एकूण रक्कम(%)</span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let getPurposeWiseData of GetPurposeWiseData\">\r\n            <td>{{getPurposeWiseData.LoanType}}</td>\r\n            <td>{{getPurposeWiseData.TotalMember}}</td>\r\n            <td>{{getPurposeWiseData.TotalMemberPer}} %</td>\r\n            <td>{{getPurposeWiseData.TotalAmount | currency: 'INR'}}</td>\r\n            <td>{{getPurposeWiseData.TotalAmountPer}} %</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span *ngIf=\"lang.en\">TOTAL</span>\r\n              <span *ngIf=\"lang.mr\">एकूण </span>\r\n            </td>\r\n            <td>\r\n              <b>{{purpose_total_mem}}</b>\r\n            </td>\r\n            <td>\r\n              <b>{{purpose_total_mem_per}} %</b>\r\n            </td>\r\n            <td>\r\n              <b>{{purpose_total_amt | currency: 'INR'}}</b>\r\n            </td>\r\n            <td>\r\n              <b>{{purpose_total_amt_per}} %</b>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\" style=\"margin-top:20px;margin-left:0px;margin-right:0px;\">\r\n    <div class=\"box-body  box_section\">\r\n      <table class=\"table table-bordered common_table\">\r\n        <caption class=\"text-center btn-info\" style=\"color:#fff;  background-color: cadetblue\">\r\n          <h5 style=\"text-align: center; margin:-3px 10px;\">\r\n            <span *ngIf=\"lang.en\" style=\"color:#fff;  background-color: cadetblue\">\r\n              <label class=\"table-head\">CAST WISE LOAN DISTRIBUTION DATA\r\n                <p>\r\n                  <small style=\"color:#fff;  background-color: cadetblue\">\r\n                    TOTAL LOAN CONSUMED MEMBERS - {{caste_total_loan_con_mem}} AND APPROVED LOAN AMOUNT - {{totalLoanApprovedAmt |currency: 'INR'}}\r\n                  </small>\r\n                </p>\r\n              </label>\r\n            </span>\r\n            <span *ngIf=\"lang.mr\" style=\"color:#fff;  background-color: cadetblue\">\r\n              <label class=\"table-head\">प्रवर्गानुसार कर्जवाटपाची माहिती\r\n                <p>\r\n                  <small style=\"color:#fff;  background-color: cadetblue\">\r\n                    एकूण सदस्य - {{totalMembers}} आणि मंजूर केलेली कर्जाची रक्कम - {{totalLoanApprovedAmt |currency: 'INR'}}\r\n                  </small>\r\n                </p>\r\n              </label>\r\n            </span>\r\n            <button class=\"btn btn-primary pdf-button\" (click)=\"castWiseLoanDistributionDataForVo()\">\r\n              <span>\r\n                <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n              </span>\r\n              PDF\r\n            </button>\r\n          </h5>\r\n        </caption>\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">CASTE</span>\r\n              <span *ngIf=\"lang.mr\">प्रवर्ग </span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">TOTAL MEMBERS</span>\r\n              <span *ngIf=\"lang.mr\">एकूण सदस्य संख्या </span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">TOTAL MEMBERS(%)</span>\r\n              <span *ngIf=\"lang.mr\">एकूण सदस्य(%)</span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">LOAN CONSUMED BY</span>\r\n              <span *ngIf=\"lang.mr\">कर्ज घेतलेले </span>\r\n              <br>\r\n              <span *ngIf=\"lang.en\">TOTAL MEMBERS</span>\r\n              <span *ngIf=\"lang.mr\">एकूण सदस्य संख्या </span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">LOAN CONSUMED BY</span>\r\n              <span *ngIf=\"lang.mr\">कर्ज घेतलेले </span>\r\n              <br>\r\n              <span *ngIf=\"lang.en\">TOTAL MEMBERS (%)</span>\r\n              <span *ngIf=\"lang.mr\">एकूण सदस्य (%)</span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">LOAN NOT CONSUMED</span>\r\n              <span *ngIf=\"lang.mr\"> कर्ज न घेतलेले </span>\r\n              <br>\r\n              <span *ngIf=\"lang.en\">BY TOTAL MEMBERS </span>\r\n              <span *ngIf=\"lang.mr\">एकूण सदस्य संख्या</span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">LOAN NOT CONSUMED </span>\r\n              <span *ngIf=\"lang.mr\"> कर्ज न घेतलेले </span>\r\n              <br>\r\n              <span *ngIf=\"lang.en\"> BY TOTAL MEMBERS (%)</span>\r\n              <span *ngIf=\"lang.mr\">एकूण सदस्य (%)</span>\r\n            </th>\r\n            <th>\r\n              <span *ngIf=\"lang.en\">TOTAL</span>\r\n              <span *ngIf=\"lang.mr\">एकूण</span>\r\n              <br>\r\n              <span *ngIf=\"lang.en\">CONSUMED LOAN</span>\r\n              <span *ngIf=\"lang.mr\">घेतलेले कर्ज </span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let getCasteWiseData of GetCasteWiseData\">\r\n            <td>{{getCasteWiseData.CasteName}}</td>\r\n            <td>{{getCasteWiseData.TotalMember}}</td>\r\n            <td>{{getCasteWiseData.TotalMemberPer}} %</td>\r\n            <td>{{getCasteWiseData.TotalLoanConsumedMembers}}</td>\r\n            <td>{{getCasteWiseData.TotalLoanConsumedMembersPer}} %</td>\r\n            <td>{{getCasteWiseData.TotalLoanNotConsumedMembers}}</td>\r\n            <td>{{getCasteWiseData.TotalLoanNotConsumedMembersPer}} %</td>\r\n            <td>{{getCasteWiseData.TotalLoanConsumedLoanAmount | currency: 'INR'}}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span *ngIf=\"lang.en\">TOTAL</span>\r\n              <span *ngIf=\"lang.mr\">एकूण</span>\r\n            </td>\r\n            <td>\r\n              <b>{{caste_total_mem}}</b>\r\n            </td>\r\n            <td>\r\n              <b>{{caste_total_mem_per}} %</b>\r\n            </td>\r\n            <td>\r\n              <b>{{caste_total_loan_con_mem}}</b>\r\n            </td>\r\n            <td>\r\n              <b>{{caste_total_loan_con_mem_per}} %</b>\r\n            </td>\r\n            <td>\r\n              <b>{{caste_total_loan_not_con_mem}}</b>\r\n            </td>\r\n            <td>\r\n              <b>{{caste_total_loan_not_con_mem_per}} %</b>\r\n            </td>\r\n            <td>\r\n              <b>{{caste_total_loan_amt | currency: 'INR'}}</b>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\" style=\"margin-left:0px;margin-right:0px;\">\r\n    <h5 class=\"btn-warning text-center\" style=\"background-color: cadetblue;padding: 6px;\">\r\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"getBalanceSheet()\">\r\n        REFRESH\r\n      </button>\r\n      BALANCESHEET\r\n      <small style=\"color: #fff\">( FROM -{{lastFinanceYearOrFromDt}} till - {{todaysOrToDt}} )</small>\r\n      <span>\r\n        <button class=\"btn btn-primary pdf-button\" (click)=\"ExportBalancesheetToPdf()\" value=\"Export PDF\" style=\"margin:-3px 10px;\">\r\n          <span>\r\n            <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n          </span>\r\n          PDF\r\n        </button>\r\n      </span>\r\n    </h5>\r\n  </div>\r\n\r\n  <div class=\"row\" style=\"margin-left:0px;margin-right:0px;\">\r\n    <div class=\"col-md-12 well well-lg \" style=\" padding: 10px;\">\r\n      <div class=\"col-md-5\">\r\n        <label>\r\n          SELECT FROM DATE\r\n        </label>\r\n        <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"balanceSheetFromDt\" #frDt [options]=\"options\">\r\n        </ng-datepicker>\r\n        <!-- <input class=\"form-control\" type=\"date\" #balanceSheetFromDt> -->\r\n      </div>\r\n      <div class=\"col-md-7\">\r\n        <div class=\"col-md-9\">\r\n          <label>\r\n            SELECT TO DATE\r\n          </label>\r\n          <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"balanceSheetToDt\" #toDt [options]=\"options\">\r\n          </ng-datepicker>\r\n          <!-- <input class=\"form-control\" type=\"date\" #balanceSheetToDt> -->\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"loanBalancesheet(frDt, toDt)\" style=\"margin-top:21px;\">\r\n            LOAD\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-12 box_section\">\r\n    <div class=\"col-md-6\" style=\"padding-right: 0px;\">\r\n      <div class=\"box-body\" style=\"padding-right: 0px;\">\r\n        <table class=\"table table-bordered common_table\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                LIABILITIES\r\n              </th>\r\n              <th>\r\n                AMOUNT\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(2)\">\r\n                  CURRENT LIABILITIES\r\n                </a>\r\n              </td>\r\n              <td>\r\n                <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(2)\">\r\n                  {{balancesheet.LiabilityAmount | currency: 'INR'}}\r\n                </a>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(3)\">\r\n                  NET INCOME/ LOSS\r\n                </a>\r\n              </td>\r\n              <td>\r\n                {{balancesheet.NetProfitOrLoss | currency: 'INR'}}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                TOTAL\r\n              </th>\r\n              <td>{{balancesheet.TotalLiability | currency: 'INR'}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6\" style=\"padding-left: 0px;\">\r\n      <div class=\"box-body\" style=\"padding-left: 0px;\">\r\n        <table class=\"table table-bordered common_table\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                ASSETS </th>\r\n              <th>\r\n                AMOUNT\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(1)\">\r\n                  CURRENT ASSET\r\n                </a>\r\n              </td>\r\n              <td>\r\n                <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(1)\">\r\n                  {{balancesheet.AssetAmount | currency: 'INR'}}\r\n                </a>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                CASH IN HAND\r\n              </td>\r\n              <td>{{balancesheet.CashInHandAmount | currency: 'INR'}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                CASH AT BANK\r\n              </td>\r\n              <td>{{balancesheet.cashAtBankAmount | currency:'INR'}}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>\r\n                TOTAL\r\n              </th>\r\n              <td>{{balancesheet.TotalAsset | currency: 'INR'}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\" style=\"margin-top:18px;\">\r\n      <div class=\"box-body box_section\">\r\n        <table class=\"table table-bordered common_table\">\r\n          <thead>\r\n            <tr>\r\n              <th colspan=\"2\">\r\n                INCOME & EXPENDITURE\r\n\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <thead>\r\n            <tr>\r\n              <td>INCOME</td>\r\n              <td>{{balancesheet.IncomeAmount | currency: 'INR'}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>EXPENSE</td>\r\n              <td>{{balancesheet.ExpenseAmount | currency: 'INR'}}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>NET PROFIT/LOSS</td>\r\n              <td>{{balancesheet.IncomeAmount - balancesheet.ExpenseAmount | currency: 'INR'}}</td>\r\n            </tr>\r\n          </thead>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n</section>\r\n\r\n<!-- /.content -->"

/***/ }),

/***/ "../../../../../src/app/components/vo/dashboard/dashboard.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VoDashboardComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_date_fns_locale_en__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var VoDashboardComponent = (function () {
    function VoDashboardComponent(_voservice, _access_token, _common_message, _globalURL, router, lang, globalvariable, commonService, exportToPDF) {
        this._voservice = _voservice;
        this._access_token = _access_token;
        this._common_message = _common_message;
        this._globalURL = _globalURL;
        this.router = router;
        this.lang = lang;
        this.globalvariable = globalvariable;
        this.commonService = commonService;
        this.exportToPDF = exportToPDF;
        this.balanceSheetToDt = new Date();
        this.balanceSheetFromDt = new Date();
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_10_date_fns_locale_en__,
            //minDate: new Date(Date.now()), // Minimal selectable date
            minDate: new Date("2016-03-03"),
            // maxDate: new Date(Date.now()),  // Maximal selectable date
            barTitleIfEmpty: 'Click to select a date'
        };
        this.isDataCountLoaded = true;
        this.shgCount = 0;
        this.memebrCount = 0;
        this.totalshgCount = 0;
        this.totalMemCount = 0;
        this.totalCastCount = 0;
        this.memebersDataCasteWise = new Array();
        this.schemeWiseSHGCasteData = null;
        this.casteWiseData = null;
        this.isSchemLoading = false;
        this.totalApprovedAmt = 0;
        _globalURL.isLoading = false;
        this.schemeWiseMemebers = null;
        this.schemeWiseSHG = null;
        this.CasteWiseMembers = null;
        this.SHGAndMembersCount = 0;
        this.shgCount = 0;
        this.memebrCount = 0;
        this.totalshgCount = 0;
        this.totalMemCount = 0;
        this.totalCastCount = 0;
        this.schemeWiseSHGCasteData = null;
        this.casteWiseData = null;
        this.voDetails = null;
        if (sessionStorage.getItem("access_token") == "")
            router.navigate(['../login']);
    }
    VoDashboardComponent.prototype.ngOnInit = function () {
        this.balanceSheetFromDt = new Date("1 APR " + (new Date().getFullYear()));
        this.balanceSheetToDt = new Date();
        this.getBalanceSheet();
        this._globalURL.isLoading = true;
        this.schemeWiseSHGCasteData = null;
        this.casteWiseData = null;
        this.loanDashboardData();
        // this.getVODetail();
        this.totalMembers = 0;
        this.totalLoanApprovedAmt = 0;
        this.purpose_total_mem = 0;
        this.purpose_total_mem = 0;
        this.purpose_total_mem_per = 0;
        this.purpose_total_amt = 0;
        this.purpose_total_amt_per = 0;
        this.caste_total_mem = 0;
        this.caste_total_mem_per = 0;
        this.caste_total_loan_con_mem = 0;
        this.caste_total_loan_con_mem_per = 0;
        this.caste_total_loan_not_con_mem = 0;
        this.caste_total_loan_not_con_mem_per = 0;
        this.caste_total_loan_amt = 0;
        this.getFund();
        this.getVODetail();
    };
    VoDashboardComponent.prototype.loanDashboardData = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this.isSchemLoading = true;
        //this._globalURL.get_GET_SHEMEWISE_SHG = "";
        this._voservice.get(this._globalURL.GET_SHEMEWISE_SHG, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this.isSchemLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.schemeWiseSHGCasteData = res.Data;
                _this.casteWiseData = _this.schemeWiseSHGCasteData[0].Caste;
                _this.isSchemLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this.isSchemLoading = false;
            }
        })
            .catch(function (err) {
            _this.showErrorMessage = true;
            console.log(err);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this.isSchemLoading = false;
        });
        //this._globalURL.get_TOTAL_SHGANDMEMBER_COUNT = "";
        this._voservice.get(this._globalURL.TOTAL_SHGANDMEMBER_COUNT, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                for (var item in res.Data) {
                    if (res.Data[item].Type == "SHG")
                        _this.shgCount = _this.shgCount + res.Data[item].Count;
                    else
                        _this.memebrCount = _this.memebrCount + res.Data[item].Count;
                }
                for (var item in res.Data) {
                    if (res.Data[item].Type == "Member")
                        _this.totalMembers = _this.totalMembers + res.Data[item].Count;
                }
                _this.SHGAndMembersCount = res.Data;
                _this.isDataCountLoaded = false;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
        //this._globalURL.get_GET_MARRITAL_STATUS_WISE_DATA = "";
        this._voservice.get(this._globalURL.GET_MARRITAL_STATUS_WISE_DATA, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    var data = JSON.parse(res._body);
                    _this.GetMarritalStatusData = data.Data;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                    _this.GetMarritalStatusData = res.Data;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
        //this._globalURL.get_GET_AGE_WISE_DATA = "";
        this._voservice.get(this._globalURL.GET_AGE_WISE_DATA, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    var data = JSON.parse(res._body);
                    _this.GetAgeWiseData = data.Data;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                    _this.GetAgeWiseData = res.Data;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
        //  this._globalURL.get_GET_LOAN_PURPOSE_WISE_DATA = "";
        this._voservice.get(this._globalURL.GET_LOAN_PURPOSE_WISE_DATA, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    var data = JSON.parse(res._body);
                    _this.GetPurposeWiseData = data.Data;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                    _this.GetPurposeWiseData = res.Data;
                    for (var item in res.Data) {
                        _this.totalLoanApprovedAmt = _this.totalLoanApprovedAmt + res.Data[item].TotalAmount;
                        _this.purpose_total_mem = _this.purpose_total_mem + res.Data[item].TotalMember;
                        _this.purpose_total_mem_per = _this.purpose_total_mem_per + res.Data[item].TotalMemberPer;
                        _this.purpose_total_amt = _this.purpose_total_amt + res.Data[item].TotalAmount;
                        _this.purpose_total_amt_per = _this.purpose_total_amt_per + res.Data[item].TotalAmountPer;
                    }
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
        //this._globalURL.get_GET_LOAN_CASTE_WISE_DATA = "";
        this._voservice.get(this._globalURL.GET_LOAN_CASTE_WISE_DATA, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.GetCasteWiseData = res.Data;
                for (var item in res.Data) {
                    _this.caste_total_mem = _this.caste_total_mem + res.Data[item].TotalMember;
                    _this.caste_total_mem_per = _this.caste_total_mem_per + res.Data[item].TotalMemberPer;
                    _this.caste_total_loan_con_mem = _this.caste_total_loan_con_mem + res.Data[item].TotalLoanConsumedMembers;
                    _this.caste_total_loan_con_mem_per = _this.caste_total_loan_con_mem_per + res.Data[item].TotalLoanConsumedMembersPer;
                    _this.caste_total_loan_not_con_mem = _this.caste_total_loan_not_con_mem + res.Data[item].TotalLoanNotConsumedMembers;
                    _this.caste_total_loan_not_con_mem_per = _this.caste_total_loan_not_con_mem_per + res.Data[item].TotalLoanNotConsumedMembersPer;
                    _this.caste_total_loan_amt = _this.caste_total_loan_amt + res.Data[item].TotalLoanConsumedLoanAmount;
                }
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
        //this._globalURL.get_GET_FINANCE_DETAILS = "";
        this._voservice.get(this._globalURL.GET_FINANCE_DETAILS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.financeDetails = res.Data;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VoDashboardComponent.prototype.getBalanceSheet = function () {
        var _this = this;
        this.lastFinanceYearOrFromDt = "1 APR " + (new Date().getFullYear());
        this.todaysOrToDt = this.commonService.getTodaysDate();
        this._globalURL.isLoading = true;
        var balFinalUrl = "";
        if (sessionStorage.getItem("roleId") == "3") {
            this._globalURL.get_GET_BALANCESHEET = "";
            balFinalUrl = this._globalURL.GET_BALANCESHEET + (sessionStorage.getItem("roleId") == null ? "3" : sessionStorage.getItem("roleId")) + "&frDt=" + this.lastFinanceYearOrFromDt + "&toDt=" + this.todaysOrToDt;
        }
        else
            balFinalUrl = this._globalURL.GET_BALANCESHEET + "&frDt=null&toDt=null";
        this._voservice.get(balFinalUrl, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    _this.balancesheet = JSON.parse(res._body).Data;
                    _this.globalvariable.CashInHand = _this.balancesheet.CashInHandAmount;
                    _this.globalvariable.CashAtBank = _this.balancesheet.cashAtBankAmount;
                    _this.globalvariable.TotalAvailableAmount = _this.balancesheet.CashInHandAmount + _this.balancesheet.cashAtBankAmount;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            else {
                if (res.Status == true) {
                    _this.balancesheet = res.Data;
                    _this.globalvariable.CashInHand = _this.balancesheet.CashInHandAmount;
                    _this.globalvariable.CashAtBank = _this.balancesheet.cashAtBankAmount;
                    _this.globalvariable.TotalAvailableAmount = _this.balancesheet.CashInHandAmount + _this.balancesheet.cashAtBankAmount;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VoDashboardComponent.prototype.loanBalancesheet = function (frDt, toDt) {
        var _this = this;
        this.lastFinanceYearOrFromDt = this.commonService.convertToDate(frDt);
        this.todaysOrToDt = this.commonService.convertToDate(toDt);
        var balFinalUrl = "";
        //this._globalURL.get_GET_BALANCESHEET = "";
        if (sessionStorage.getItem("roleId") == "3") {
            this._globalURL.get_GET_BALANCESHEET = "";
            balFinalUrl = this._globalURL.GET_BALANCESHEET + (sessionStorage.getItem("roleId") == null ? "3" : sessionStorage.getItem("roleId")) + "&frDt=" + this.lastFinanceYearOrFromDt + "&toDt=" + this.todaysOrToDt;
        }
        else
            balFinalUrl = this._globalURL.GET_BALANCESHEET + "&frDt=null&toDt=null";
        this._voservice.get(balFinalUrl, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    _this.balancesheet = JSON.parse(res._body).Data;
                    _this.globalvariable.CashInHand = _this.balancesheet.CashInHandAmount;
                    _this.globalvariable.CashAtBank = _this.balancesheet.cashAtBankAmount;
                    _this.globalvariable.TotalAvailableAmount = _this.balancesheet.CashInHandAmount + _this.balancesheet.cashAtBankAmount;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            else {
                if (res.Status == true) {
                    _this.balancesheet = res.Data;
                    _this.globalvariable.CashInHand = _this.balancesheet.CashInHandAmount;
                    _this.globalvariable.CashAtBank = _this.balancesheet.cashAtBankAmount;
                    _this.globalvariable.TotalAvailableAmount = _this.balancesheet.CashInHandAmount + _this.balancesheet.cashAtBankAmount;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VoDashboardComponent.prototype.ExportBalancesheetToPdf = function () {
        this._globalURL.isLoading = true;
        this.globalvariable.CashInHand = this.balancesheet.CashInHandAmount;
        this.globalvariable.CashAtBank = this.balancesheet.cashAtBankAmount;
        this.globalvariable.TotalAvailableAmount = this.balancesheet.CashInHandAmount + this.balancesheet.cashAtBankAmount;
        var reportData = {
            "balancesheet": this.balancesheet,
            "CashInHand": this.globalvariable.CashInHand,
            "CashAtBank": this.globalvariable.CashAtBank,
            "TotalAvailableAmount": this.globalvariable.TotalAvailableAmount
        };
        var headerData = {
            "VOName": this.globalvariable.VOName,
            "Code": this.globalvariable.voBaseCode,
            "frDt": this.lastFinanceYearOrFromDt,
            "toDt": this.todaysOrToDt
        };
        var forVoName = {
            "VOName": this.voDetails.Name,
            "Code": this.voDetails.Code,
        };
        this.exportToPDF.RExportBalancesheetToPdf(reportData, headerData, forVoName);
        this._globalURL.isLoading = false;
    };
    VoDashboardComponent.prototype.R38_SchemeAndCastWiseSHGDetailPDF = function () {
        this._globalURL.isLoading = true;
        var forVoName = {
            "Name": this.voDetails.Name,
            "Code": this.voDetails.Code,
            "CMRCName": this.voDetails.CMRCName,
            "ParentCode": this.voDetails.ParentCode,
        };
        //this.schemeWiseSHGCasteData
        this.exportToPDF.R38_SchemeAndCastWiseSHGDetails(this.schemeWiseSHGCasteData, this.casteWiseData, this.shgCount, this.memebrCount, forVoName);
        this._globalURL.isLoading = false;
    };
    VoDashboardComponent.prototype.getVODetail = function () {
        var _this = this;
        debugger;
        var finalUrl = "";
        if (sessionStorage.getItem("roleId") == "3") {
            this._globalURL.get_GET_USER_PROFILE_DETAIL = "";
            finalUrl = this._globalURL.GET_USER_PROFILE_DETAIL + (sessionStorage.getItem("roleId") == null ? "3" : sessionStorage.getItem("roleId"));
        }
        else
            finalUrl = this._globalURL.GET_USER_PROFILE_DETAIL;
        this._voservice.get(finalUrl, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.voDetails = res.Data;
                _this._globalURL.isLoading = false;
                _this._common_message.Message;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VoDashboardComponent.prototype.getFund = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this.totalApprovedAmt = 0;
        this._voservice.get(this._globalURL.GET_ALL_VO_FUND_DETAILS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                //this.reRenderDT();
                for (var item in res.Data) {
                    _this.totalApprovedAmt = _this.totalApprovedAmt + res.Data[item].ApproveAmount;
                }
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VoDashboardComponent.prototype.naviagateToAccTransaction = function (glTypeId) {
        this.globalvariable.selectedGLTypeId = glTypeId;
        this.router.navigate(['/vo/AccTransaction']);
    };
    //Download PDF forAgeWiseGroupDetails
    VoDashboardComponent.prototype.R148_AgeWiseGroupDetailPDF = function (data) {
        this._globalURL.isLoading = true;
        this.exportToPDF.R7_AgeWiseGroupDetails(data);
        this._globalURL.isLoading = false;
    };
    VoDashboardComponent.prototype.R41PurposewiseLoanDistExportToPdf = function () {
        this._globalURL.isLoading = true;
        var totalData = {
            "TotalMember": this.purpose_total_mem.toString(),
            "TotalMemberPer": this.purpose_total_mem_per.toString(),
            "TotalAmount": this.purpose_total_amt.toString(),
            "TotalAmountPer": this.purpose_total_amt_per.toString()
        };
        var VoName = {
            "Name": this.voDetails.Name,
            "Code": this.voDetails.Code,
        };
        this.exportToPDF.R41PurposewiseLoanDistExportToPdf(this.GetPurposeWiseData, totalData, VoName);
        this._globalURL.isLoading = false;
    };
    VoDashboardComponent.prototype.voProfileDetails = function () {
        this._globalURL.isLoading = true;
        var forVoName = {
            "Name": this.voDetails.Name,
        };
        this.exportToPDF.voProfileDetails(this.voDetails, forVoName);
        this._globalURL.isLoading = false;
    };
    VoDashboardComponent.prototype.maritalStatusWiseDataForVo = function () {
        this._globalURL.isLoading = true;
        var VoName = {
            "Name": this.voDetails.Name,
        };
        this.exportToPDF.maritalStatusWiseDataForVo(this.GetMarritalStatusData, this.voDetails, VoName);
        this._globalURL.isLoading = false;
    };
    VoDashboardComponent.prototype.ageWiseDataForVo = function () {
        this._globalURL.isLoading = true;
        var VoName = {
            "Name": this.voDetails.Name,
            "Code": this.voDetails.Code,
        };
        this.exportToPDF.ageWiseDataForVo(this.GetAgeWiseData, VoName);
        this._globalURL.isLoading = false;
    };
    VoDashboardComponent.prototype.castWiseLoanDistributionDataForVo = function () {
        this._globalURL.isLoading = true;
        var total = {
            "CastTotalMembers": this.caste_total_mem.toString(),
            "CastTotalMemberPer": this.caste_total_mem_per.toString(),
            "CastTotalLoanConsumedMem": this.caste_total_loan_con_mem.toString(),
            "CastTotalLoanConsumedMemberPer": this.caste_total_loan_con_mem_per.toString(),
            "CastTotalLoanNotConsumedMem": this.caste_total_loan_not_con_mem.toString(),
            "CastTotalLoanNotConsumedMemPer": this.caste_total_loan_not_con_mem_per.toString(),
            "CasteTotalLoanAmt": this.caste_total_loan_amt.toString()
        };
        var VoName = {
            "Name": this.voDetails.Name,
            "Code": this.voDetails.Code,
        };
        this.exportToPDF.castWiseLoanDistributionDataForVo(this.GetCasteWiseData, total, VoName);
        this._globalURL.isLoading = false;
    };
    VoDashboardComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'vo-dashboard',
            template: __webpack_require__("../../../../../src/app/components/vo/dashboard/dashboard.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/vo/dashboard/dashboard.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_5__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_9__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_6__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_7__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_8__services_reports_exportpdf__["a" /* ExportToPDF */]])
    ], VoDashboardComponent);
    return VoDashboardComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/dashboard/dashboard.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".image-set{\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n.dashboard-finance-details{\r\n    text-align: left;\r\n    padding-left: 10px;\r\n    color: rgb(18, 13, 34);\r\n    font-weight: bold;\r\n  }\r\n  .table>tbody>tr>td{\r\n    padding-left:9px !important;\r\n    padding:6px !important;\r\n    line-height:1.1 !important;\r\n  }\r\n  \r\n  .finance-heading-name{\r\n    background-color: #acb4b8;\r\n    padding:0px !important;\r\n  }\r\n  .finance-heading-value{\r\n    background-color: #dad4d6;\r\n    padding:0px !important;\r\n  }\r\n  .finance-main-content{\r\n    background-color: #d1e1ee;\r\n  }\r\n  .box_section{\r\n    box-shadow: 0 1px 8px 0, 0 0 0 1px #daccb00d;\r\n    background: #ffffff;\r\n    border-top: 3px solid #eeaeb738;\r\n\r\n  }\r\n  table{\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n  width: 100%;\r\n}\r\n   .box_section{\r\n    overflow:auto;\r\n}\r\n   .vo-detail{\r\n  box-shadow: 0 1px 8px 0, 0 0 0 1px #daccb00d;\r\n  background: #ffffff;\r\n  border-top: 3px solid #eeaeb738;\r\n}\r\n.image-set{\r\n  height:25px;\r\n  width:25px;\r\n}\r\n.pdf-button{\r\n  float:right;\r\n}\r\n.table>tbody>tr>td{\r\n  padding-left:18px;\r\n}\r\n.table-head{\r\n  margin-top:10px;\r\n  font-size:17px;\r\n}\r\n.btn-warning{\r\n  font-size: 17px;\r\n}\r\n.table>tbody>tr>td{\r\n  padding-left:9px;\r\n}\r\n.table>thead>tr>th{\r\n  padding-left:4px;\r\n}\r\n  /* .table>thead>tr>th {\r\n    text-align:center;\r\n  }\r\n  \r\n  .table>tbody>tr>td {\r\n    text-align:center;\r\n  }\r\n  .table>tbody>tr>th, .table>tfoot>tr>th, .table>thead>tr>td, .table>tbody>tr>td, .table>tfoot>tr>td {\r\n    text-align: center;\r\n    border-top: 1px solid #f4f4f4;\r\n  } */\r\n\t", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/vo/finance/finance.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<!-- <div *ngIf=\"showSuccessMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div> -->\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n</div>\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-5\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\"> FINANCE DETAILS FORM</span>\r\n                    <span *ngIf=\"lang.mr\">वित्त फॉर्म</span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>   \r\n</section>\r\n<div class=\"col-md-12\">\r\n    <h5 class=\"btn-warning text-center\" style=\"background-color: cadetblue;padding: 6px;\">\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"getBalanceSheet()\">\r\n            <span *ngIf=\"lang.en\">REFRESH</span>\r\n            <span *ngIf=\"lang.mr\">रीफ्रेश </span>\r\n        </button>\r\n        <span *ngIf=\"lang.en\">BALANCESHEET</span>\r\n        <span *ngIf=\"lang.mr\"> बॅलेन्स शीट</span>\r\n        <small style=\"color: #fff\">( FROM -{{lastFinanceYearOrFromDt}} till - {{todaysOrToDt}} )</small>\r\n        <span>\r\n            <button class=\"btn btn-primary pdf-button\" (click)=\"ExportBalancesheetToPdf()\" value=\"Export PDF\" style=\"margin:-3px 10px;\">\r\n                <span *ngIf=\"lang.en\">\r\n                    <span>\r\n                        <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                    </span>\r\n                    PDF\r\n                </span>\r\n                <span *ngIf=\"lang.mr\">\r\n                    <span>\r\n                        <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" /> PDF\r\n                    </span>\r\n                </span>\r\n            </button>\r\n        </span>\r\n    </h5>\r\n</div>\r\n<form #loadform=\"ngForm\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"col-md-12 well well-lg \" style=\" padding: 10px;\">\r\n            <div class=\"col-md-5\">\r\n                <label>\r\n                    <span *ngIf=\"lang.en\">SELECT FROM DATE</span>\r\n                    <span *ngIf=\"lang.mr\"> पासून </span>\r\n                </label>\r\n                <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"balanceSheetFromDt\" required #frDt [options]=\"options\" name=\"balanceSheetFromDt\">\r\n                </ng-datepicker>\r\n            </div>\r\n            <div *ngIf=\"frDt.invalid && frDt.touched\" class=\"alert-danger\">\r\n                <p>\r\n                    PLEASE SELECT FROM DATE..!\r\n                </p>\r\n            </div>\r\n            <div class=\"col-md-7\">\r\n                <div class=\"col-md-9\">\r\n                    <label>\r\n                        <span *ngIf=\"lang.en\">SELECT TO DATE</span>\r\n                        <span *ngIf=\"lang.mr\">पर्यंत </span>\r\n                    </label>\r\n                    <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"balanceSheetToDt\" name=\"balanceSheetToDt\" required #toDt [options]=\"options\">\r\n                    </ng-datepicker>\r\n                </div>\r\n                <div *ngIf=\"toDt.invalid && toDt.touched\" class=\"alert-danger\">\r\n                    <p>\r\n                        PLEASE SELECT TO DATE..!\r\n                    </p>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <button type=\"button\" [disabled]=\"loadform.invalid\" class=\"btn btn-primary\" (click)=\"loanBalancesheet(frDt,toDt)\" style=\"margin-top:21px;\">\r\n                        <span *ngIf=\"lang.en\">LOAD</span>\r\n                        <span *ngIf=\"lang.mr\">लोड </span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body  box_section\">\r\n                    <table class=\"table table-bordered common_table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">LIABILITIES</span>\r\n                                    <span *ngIf=\"lang.mr\">देणे </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">रक्कम</span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(2)\">\r\n                                        <span *ngIf=\"lang.en\">CURRENT LIABILITIES</span>\r\n                                        <span *ngIf=\"lang.mr\">चालू देणे </span>\r\n                                    </a>\r\n                                </td>\r\n                                <td>\r\n                                    <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(2)\">\r\n                                        {{balancesheet.LiabilityAmount | currency: 'INR'}}\r\n                                    </a>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(3)\">\r\n                                        <span *ngIf=\"lang.en\">NET INCOME/ LOSS</span>\r\n                                        <span *ngIf=\"lang.mr\">निव्वळ नफा/ नुकसान</span>\r\n                                    </a>\r\n                                </td>\r\n                                <td>\r\n                                    {{balancesheet.NetProfitOrLoss | currency: 'INR'}}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TOTAL</span>\r\n                                    <span *ngIf=\"lang.mr\">एकूण</span>\r\n                                </th>\r\n                                <td>{{balancesheet.TotalLiability | currency: 'INR'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body box_section\">\r\n                    <table class=\"table table-bordered common_table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">ASSETS</span>\r\n                                    <span *ngIf=\"lang.mr\">मालमत्ता</span>\r\n\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">रक्कम</span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(1)\">\r\n\r\n                                        <span *ngIf=\"lang.en\"> CURRENT ASSET</span>\r\n                                        <span *ngIf=\"lang.mr\"> आताची मालमत्ता</span>\r\n\r\n                                    </a>\r\n                                </td>\r\n                                <td>\r\n                                    <a routerLink=\"#\" (click)=\"naviagateToAccTransaction(1)\">\r\n                                        {{balancesheet.AssetAmount | currency: 'INR'}}\r\n                                    </a>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <span *ngIf=\"lang.en\"> CASH IN HAND</span>\r\n                                    <span *ngIf=\"lang.mr\"> रोख रक्कम</span>\r\n\r\n                                </td>\r\n                                <td>{{balancesheet.CashInHandAmount | currency: 'INR'}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <span *ngIf=\"lang.en\"> CASH AT BANK</span>\r\n                                    <span *ngIf=\"lang.mr\"> बँकेतील रक्कम</span>\r\n                                </td>\r\n                                <td>{{balancesheet.cashAtBankAmount | currency:'INR'}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> TOTAL</span>\r\n                                    <span *ngIf=\"lang.mr\"> एकूण</span>\r\n                                </th>\r\n                                <td>{{balancesheet.TotalAsset | currency: 'INR'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <div class=\"col-md-6\" style=\"margin-top:18px;\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body box_section\">\r\n                    <table class=\"table table-bordered common_table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th colspan=\"2\">\r\n                                    <span *ngIf=\"lang.en\"> INCOME & EXPENDITURE</span>\r\n                                    <span *ngIf=\"lang.mr\"> उत्पन्न आणि खर्च</span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <thead>\r\n                            <tr>\r\n                                <td>INCOME</td>\r\n                                <td>{{balancesheet.IncomeAmount | currency: 'INR'}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>EXPENSE</td>\r\n                                <td>{{balancesheet.ExpenseAmount | currency: 'INR'}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>NET PROFIT/LOSS</td>\r\n                                <td>{{balancesheet.IncomeAmount - balancesheet.ExpenseAmount | currency: 'INR'}}</td>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/vo/finance/finance.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VOFinanceComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







//import { Subject } from 'rxjs';





var VOFinanceComponent = (function () {
    function VOFinanceComponent(_cmrcService, _voservice, _globalURL, _access_token, _router, lang, commonService, globalvariable, exportToPDF, _common_message, router) {
        this._cmrcService = _cmrcService;
        this._voservice = _voservice;
        this._globalURL = _globalURL;
        this._access_token = _access_token;
        this._router = _router;
        this.lang = lang;
        this.commonService = commonService;
        this.globalvariable = globalvariable;
        this.exportToPDF = exportToPDF;
        this._common_message = _common_message;
        this.router = router;
        this.showWarningMessage = false;
        this.balanceSheetToDt = new Date();
        this.balanceSheetFromDt = new Date();
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__,
            //minDate: new Date(Date.now()), // Minimal selectable date
            minDate: new Date("2016-03-03"),
            // maxDate: new Date(Date.now()),  // Maximal selectable date
            barTitleIfEmpty: 'Click to select a date'
        };
        if (sessionStorage.getItem("access_token") == "")
            router.navigate(['../login']);
    }
    VOFinanceComponent.prototype.ngOnInit = function () {
        this.getBalanceSheet();
    };
    VOFinanceComponent.prototype.getBalanceSheet = function () {
        var _this = this;
        this.lastFinanceYearOrFromDt = "31 MAR " + (new Date().getFullYear() - 1);
        this.todaysOrToDt = this.commonService.getTodaysDate();
        this._globalURL.isLoading = true;
        var balFinalUrl = "";
        if (sessionStorage.getItem("roleId") == "3")
            balFinalUrl = this._globalURL.GET_BALANCESHEET + (sessionStorage.getItem("roleId") == null ? "3" : sessionStorage.getItem("roleId")) + "&frDt=" + this.lastFinanceYearOrFromDt + "&toDt=" + this.todaysOrToDt;
        else
            balFinalUrl = this._globalURL.GET_BALANCESHEET;
        this._voservice.get(balFinalUrl, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    _this.balancesheet = JSON.parse(res._body).Data;
                    _this.globalvariable.CashInHand = _this.balancesheet.CashInHandAmount;
                    _this.globalvariable.CashAtBank = _this.balancesheet.cashAtBankAmount;
                    _this.globalvariable.TotalAvailableAmount = _this.balancesheet.CashInHandAmount + _this.balancesheet.cashAtBankAmount;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.message = _this._common_message.WarningMsg;
                    _this.showWarningMessage = true;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            else {
                if (res.Status == true) {
                    _this.balancesheet = res.Data;
                    _this.globalvariable.CashInHand = _this.balancesheet.CashInHandAmount;
                    _this.globalvariable.CashAtBank = _this.balancesheet.cashAtBankAmount;
                    _this.globalvariable.TotalAvailableAmount = _this.balancesheet.CashInHandAmount + _this.balancesheet.cashAtBankAmount;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.message = _this._common_message.WarningMsg;
                    _this.showWarningMessage = true;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).
            catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOFinanceComponent.prototype.loanBalancesheet = function (frDt, toDt) {
        var _this = this;
        debugger;
        this.lastFinanceYearOrFromDt = this.commonService.convertToDate(frDt);
        this.todaysOrToDt = this.commonService.convertToDate(toDt);
        var balFinalUrl = "";
        if (sessionStorage.getItem("roleId") == "3")
            balFinalUrl = this._globalURL.GET_BALANCESHEET + (sessionStorage.getItem("roleId") == null ? "3" : sessionStorage.getItem("roleId")) + "&frDt=" + this.lastFinanceYearOrFromDt + "&toDt=" + this.todaysOrToDt;
        else
            balFinalUrl = this._globalURL.GET_BALANCESHEET;
        this._voservice.get(balFinalUrl, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    frDt.control.reset();
                    toDt.control.reset();
                    _this.balancesheet = JSON.parse(res._body).Data;
                    _this.globalvariable.CashInHand = _this.balancesheet.CashInHandAmount;
                    _this.globalvariable.CashAtBank = _this.balancesheet.cashAtBankAmount;
                    _this.globalvariable.TotalAvailableAmount = _this.balancesheet.CashInHandAmount + _this.balancesheet.cashAtBankAmount;
                }
                else {
                    _this.message = _this._common_message.WarningMsg;
                    _this.showWarningMessage = true;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            else {
                if (res.Status == true) {
                    _this.balancesheet = res.Data;
                    _this.globalvariable.CashInHand = _this.balancesheet.CashInHandAmount;
                    _this.globalvariable.CashAtBank = _this.balancesheet.cashAtBankAmount;
                    _this.globalvariable.TotalAvailableAmount = _this.balancesheet.CashInHandAmount + _this.balancesheet.cashAtBankAmount;
                }
                else {
                    _this.message = _this._common_message.WarningMsg;
                    _this.showWarningMessage = true;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOFinanceComponent.prototype.ExportBalancesheetToPdf = function () {
        this.globalvariable.CashInHand = this.balancesheet.CashInHandAmount;
        this.globalvariable.CashAtBank = this.balancesheet.cashAtBankAmount;
        this.globalvariable.TotalAvailableAmount = this.balancesheet.CashInHandAmount + this.balancesheet.cashAtBankAmount;
        var reportData = {
            "balancesheet": this.balancesheet,
            "CashInHand": this.globalvariable.CashInHand,
            "CashAtBank": this.globalvariable.CashAtBank,
            "TotalAvailableAmount": this.globalvariable.TotalAvailableAmount
        };
        var headerData = {
            "VOName": this.globalvariable.VOName,
            "Code": this.globalvariable.voBaseCode,
            "frDt": this.lastFinanceYearOrFromDt,
            "toDt": this.todaysOrToDt
        };
        var headerData = {
            "VOName": this.globalvariable.VOName,
            "Code": this.globalvariable.voBaseCode,
            "frDt": this.lastFinanceYearOrFromDt,
            "toDt": this.todaysOrToDt
        };
        this.exportToPDF.RExportBalancesheetToPdf(reportData, headerData, headerData);
    };
    VOFinanceComponent.prototype.naviagateToAccTransaction = function (glTypeId) {
        this.globalvariable.selectedGLTypeId = glTypeId;
        this.router.navigate(['/vo/AccTransaction']);
    };
    VOFinanceComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/finance/finance.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_4__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_2__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_8__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_6__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_10__services_reports_exportpdf__["a" /* ExportToPDF */],
            __WEBPACK_IMPORTED_MODULE_11__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_2__angular_router__["a" /* Router */]])
    ], VOFinanceComponent);
    return VOFinanceComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/fix_deposite/fixdeposite.component.html":
/***/ (function(module, exports) {

module.exports = "        <!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <h1>\r\n        <h4 class=\"modal-title\">Under Development ...</h4>        \r\n    </h1>\r\n    <ol class=\"breadcrumb\">\r\n        <li><a href=\"#\"><i class=\"fa fa-dashboard\"></i> Home </a></li>\r\n        <li class=\"active\">Dashboard</li>\r\n    </ol>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div>\r\n        <!-- <button type=\"button\" class=\"btn btn-primary\">नवीन बचतगट बनवा </button> -->\r\n        \r\n        <span class=\"pull-right\">\r\n            <!-- <i class=\"fa fa-eye\" aria-hidden=\"true\"></i> -->\r\n            <!-- Trigger the modal with a button -->\r\n            <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#eye_modal\"><i class=\"fa fa-eye\" aria-hidden=\"true\" style=\"font-size: 20px;\" title=\"View Detail\"></i></button>\r\n            <!-- Modal -->\r\n            <div id=\"eye_modal\" class=\"modal fade\" role=\"dialog\">\r\n                <div class=\"modal-dialog\">\r\n                    <!-- Modal content-->\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            <h4 class=\"modal-title\">Saving Group Member Detail</h4>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <div class=\"bachat_gat_info\">\r\n                                <h4><b>What is Bachatgat...</b></h4>\r\n                                <p>\r\n                                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\r\n                                    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\r\n                                    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n                                    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\r\n                                    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\r\n                                    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                                </p>\r\n                                <br>\r\n                                <h4><b>Bachatgat Rules</b></h4>\r\n                                <p>\r\n                                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\r\n                                    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\r\n                                    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n                                    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\r\n                                    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\r\n                                    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                                </p>\r\n                                <br>\r\n                                <h4><b>Bachatgat Advantages</b></h4>\r\n                                <p>\r\n                                    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\r\n                                    tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\r\n                                    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n                                    consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\r\n                                    cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\r\n                                    proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </span>\r\n        <!-- Modal -->\r\n        <div id=\"bachat_gat\" class=\"modal fade\" role=\"dialog\">\r\n            <div class=\"modal-dialog\">\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        <h4 class=\"modal-title\">New Bachatgat Form</h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <!-- <p>नवीन बचतगट बनवा फॉर्म </p> -->\r\n                        <div class=\"\">\r\n                            <!-- <h2>Vertical (basic) form</h2> -->\r\n                            <form action=\"/action_page.php\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">Bachatgat Name :</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"text\" placeholder=\"Enter BachatGat Name\" name=\"text\">\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">Bachatgat Village :</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"text\" placeholder=\"Enter Bachatgat Village\" name=\"text\">\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">Bachatgat Installation Date :</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"text\" placeholder=\"Bachatgat Installation Date \" name=\"text\">\r\n                                </div>\r\n                                <div class=\"divided_intwo\">\r\n                                    <div class=\"col-sm-6 first_intwo\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"text\">Bachatgat Taluka   :</label>\r\n                                            <input type=\"text\" class=\"form-control\" id=\"text\" placeholder=\"Bachatgat Taluka  \" name=\"text\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6 second_intwo\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"text\">Bachatgat District  :</label>\r\n                                            <input type=\"text\" class=\"form-control\" id=\"text\" placeholder=\"Bachatgat District\" name=\"text\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"divided_intwo\">\r\n                                    <div class=\"col-sm-6 first_intwo\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"text\">Bachatgat President   :</label>\r\n                                            <input type=\"text\" class=\"form-control\" id=\"text\" placeholder=\"Bachatgat President  \" name=\"text\">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-sm-6 second_intwo\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"text\">Bachatgat Vice-President  :</label>\r\n                                            <input type=\"text\" class=\"form-control\" id=\"text\" placeholder=\"Bachatgat Vice-President\" name=\"text\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"checkbox\">\r\n                                    <label><input type=\"checkbox\" name=\"remember\"> remember me </label>\r\n                                </div>\r\n                                <!-- <button type=\"submit\" class=\"btn btn-default\">जतन करा </button> -->\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-default pull-left\" data-dismiss=\"modal\">Close</button>\r\n                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Save</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <br><br>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>"

/***/ }),

/***/ "../../../../../src/app/components/vo/fix_deposite/fixdeposite.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FixDepositeComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var FixDepositeComponent = (function () {
    function FixDepositeComponent() {
    }
    FixDepositeComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/fix_deposite/fixdeposite.component.html")
        }),
        __metadata("design:paramtypes", [])
    ], FixDepositeComponent);
    return FixDepositeComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/fund/fund.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n</div>\r\n\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n            <div class=\"col-md-4\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\"> FUND DETAILS FORM</span>\r\n                    <span *ngIf=\"lang.mr\"> फंडचे तपशील फॉर्म </span>\r\n\r\n\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <div class=\"col-md-3\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createFundForm\" style=\"float:left;margin-top:7px;\">\r\n                            <span *ngIf=\"lang.en\"> ADD NEW FUND REQUEST</span>\r\n                            <span *ngIf=\"lang.mr\">नवीन फंडाची विनंती करा</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"col-md-5\">\r\n                        <ul class=\"nav navbar-nav item\" style=\"margin-left:5px;\">\r\n                            <li>\r\n                                <a routerLink='/vo/fund' (click)=\"getFund(1)\" routerLinkActive=\"active\">\r\n                                    <span *ngIf=\"lang.en\"> NEW FUND REQUEST</span>\r\n                                    <span *ngIf=\"lang.mr\">नवीन फंडसाठी विनंती</span>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a routerLink='/vo/fund' (click)=\"getFund(2)\" routerLinkActive=\"active\">\r\n                                    <span *ngIf=\"lang.en\"> APPROVED FUNDS</span>\r\n                                    <span *ngIf=\"lang.mr\">मंजूर फंड</span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <label class=\"\" style=\"margin-top: 13px;font-size: 18px;\">\r\n                            <span *ngIf=\"fundTypeId ==2\">\r\n                                <span *ngIf=\"lang.en\"> ALL APPROVED FUND DETAILS</span>\r\n                                <span *ngIf=\"lang.mr\">सर्व मंजूर केलेले फंडचे तपशील</span>\r\n                            </span>\r\n                            <span *ngIf=\"fundTypeId ==1\">\r\n                                <span *ngIf=\"lang.en\"> ALL PENDING FUND DETAILS</span>\r\n                                <span *ngIf=\"lang.mr\">सर्व प्रलंबित फंडचे तपशील</span>\r\n                            </span>\r\n                        </label>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <!-- <button type=\"button\" class=\"btn btn-primary\">नवीन बचतगट बनवा </button> -->\r\n                <div class=\"box-body\">\r\n                    <table class=\"table table-bordered common_table\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> FUND ID</span>\r\n                                    <span *ngIf=\"lang.mr\">फंड आयडी</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> FROM CMRC</span>\r\n                                    <span *ngIf=\"lang.mr\">सीएमआरसी कडून </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> REQUESTED AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">विनंती केलेली रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">FUND REASON</span>\r\n                                    <span *ngIf=\"lang.mr\">फंडचे कारण</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> REQUESTED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">विनंती दिनांक</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> APPROVED AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">मंजूर रक्कम</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> INTEREST RATE</span>\r\n                                    <span *ngIf=\"lang.mr\">व्याज दर</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> APPROVED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">मंजूर दिनांक</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"fundTypeId ==2\">\r\n                                        <span *ngIf=\"lang.en\"> DOWNLOAD</span>\r\n                                        <span *ngIf=\"lang.mr\">डाऊनलोड</span>\r\n                                    </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"fundTypeId ==2\">\r\n                                        <span *ngIf=\"lang.en\">ACTION</span>\r\n                                        <span *ngIf=\"lang.mr\">कृती</span>\r\n                                    </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let fundDetail of fundDetails\">\r\n                                <td>{{fundDetail.Id}}</td>\r\n                                <td>{{fundDetail.FromCMRCName}}</td>\r\n                                <td>{{fundDetail.RequestAmount | currency: 'INR'}}</td>\r\n                                <td>{{fundDetail.FundReason}}</td>\r\n                                <td>{{fundDetail.RequestDate | date}}</td>\r\n                                <td>{{fundDetail.ApproveAmount | currency: 'INR'}}</td>\r\n                                <td>{{fundDetail.InterestRate}}</td>\r\n                                <td>{{fundDetail.ApprovedDate | date}}</td>\r\n                                <td style=\"width:12%\">\r\n                                    <span *ngIf=\"fundTypeId ==2\">\r\n                                        <button class=\"btn btn-primary\" style=\"color: white; width: 138px;\">\r\n                                            <a style=\"padding: 10px;color:white;\" target=\"_blank\" href=\"{{fundDetail.BankReceiptPhotoURL}}\">\r\n\r\n                                                <span *ngIf=\"lang.en\">BANK RECEIPT</span>\r\n                                                <span *ngIf=\"lang.mr\">बँक रसीद</span>\r\n                                            </a>\r\n                                        </button>\r\n                                        <button class=\"btn btn-primary\" style=\"margin-top:4px;\">\r\n                                            <a style=\"padding: 10px;color:white;\" target=\"_blank\" href=\"{{fundDetail.CheckReceiptPhotoURL}}\">\r\n\r\n                                                <span *ngIf=\"lang.en\">CHECK RECEIPT</span>\r\n                                                <span *ngIf=\"lang.mr\">चेक रसीद</span>\r\n                                            </a>\r\n                                        </button>\r\n                                    </span>\r\n                                </td>\r\n                                <td>\r\n                                    <span *ngIf=\"fundTypeId ==2\">\r\n                                        <button class=\"btn btn-primary\" (click)=\"navigateToFundRepayment(fundDetail.Id)\">\r\n\r\n                                            <span *ngIf=\"lang.en\">SHOW REPAYMENT</span>\r\n                                            <span *ngIf=\"lang.mr\">रिपेमेंट पाहा </span>\r\n                                        </button>\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <b>\r\n                                        <span *ngIf=\"lang.en\">Total</span>\r\n                                        <span *ngIf=\"lang.mr\">एकूण</span>\r\n                                    </b>\r\n                                </td>\r\n                                <td>-</td>\r\n                                <td>\r\n                                    <b>{{totalRequestAmt | currency: 'INR'}}</b>\r\n                                </td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>\r\n                                    <b>{{totalApprovedAmt | currency: 'INR'}}</b>\r\n                                </td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>\r\n                                    <!-- <span *ngIf=\"fundTypeId ==2\"></span> -->\r\n                                </td>\r\n                                <!-- <td>-</td>\r\n                                <td>-</td> -->\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- Modal -->\r\n<div id=\"createFundForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width: 552px; margin-top: 57px;\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">FUND REQUEST FORM</span>\r\n                    <span *ngIf=\"lang.mr\">फंड विनंती अर्ज</span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <form #fundForm=\"ngForm\" class=\"input-group\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">FUND REQUEST AMOUNT</span>\r\n                                        <span *ngIf=\"lang.mr\">फंड विनंती रक्कम</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"number\" [(ngModel)]=\"RequestAmount\" class=\"form-control\" (input)=\"convertToWords($event.target.value)\" id=\"RequestAmount\"\r\n                                        name=\"RequestAmount\" required maxlength=\"7\" #RequestAmountName=\"ngModel\">\r\n                                    <div *ngIf=\"RequestAmountName.invalid && RequestAmountName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!RequestAmountName.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Request Amount is required</span>\r\n                                            <span *ngIf=\"lang.mr\">विनंतीची रक्कम आवश्यक आहे</span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!RequestAmountName.hasError('pattern')\">Request Amount should be only numbers</div> -->\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">FUND REASON</span>\r\n                                        <span *ngIf=\"lang.mr\">फंडचे कारण</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"FundReason\" class=\"form-control\" id=\"FundReason\" name=\"FundReason\" required #FundReason=\"ngModel\">\r\n                                    <div *ngIf=\"FundReason.invalid && FundReason.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!FundReason.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Fund Reason is required</span>\r\n                                            <span *ngIf=\"lang.mr\">फंडचे कारण आवश्यक आहे</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"\">\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-header\">\r\n                                            IN ENGLISH\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <h5 class=\"card-title\">\r\n                                                <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px;text-align:center;\">\r\n                                                    <b>{{convertedWordsInEnglish}}</b>\r\n                                                </div>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-header\">\r\n                                            मराठी मधे\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <h5 class=\"card-title\">\r\n                                                <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px;text-align:center;\">\r\n                                                    <b>{{convertedWordsInMarathi}}</b>\r\n                                                </div>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-header\">\r\n                                            हिंदी में\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <h5 class=\"card-title\">\r\n                                                <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px;text-align:center;\">\r\n                                                    <b>{{convertedWordsInHindi}}</b>\r\n                                                </div>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"form-group\">\r\n                                        <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" [disabled]=\"fundForm.invalid\" (click)=\"SaveFundRequest(fundForm)\">\r\n                                            <span *ngIf=\"lang.en\">SAVE</span>\r\n                                            <span *ngIf=\"lang.mr\">जतन करा</span>\r\n                                        </button>\r\n                                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                            <span *ngIf=\"lang.en\"> CANCEL</span>\r\n                                            <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/vo/fund/fund.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VOFundComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







//import { Subject } from 'rxjs';



var VOFundComponent = (function () {
    function VOFundComponent(_cmrcService, _voservice, _globalURL, _access_token, _router, lang, _commonService, _globalVariable, _common_message, router) {
        this._cmrcService = _cmrcService;
        this._voservice = _voservice;
        this._globalURL = _globalURL;
        this._access_token = _access_token;
        this._router = _router;
        this.lang = lang;
        this._commonService = _commonService;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.router = router;
        if (sessionStorage.getItem("access_token") == "")
            router.navigate(['../login']);
        this.fundDetails = null;
        this.totalRequestAmt = null;
        this.totalApprovedAmt = null;
        this.fundTypeId = 1;
        this.RequestAmount = "";
        this.convertedWordsInEnglish = "";
        this.convertedWordsInHindi = "";
        this.convertedWordsInMarathi = "";
    }
    VOFundComponent.prototype.ngOnInit = function () {
        this.getFund(this.fundTypeId);
    };
    VOFundComponent.prototype.ngAfterViewInit = function () {
    };
    VOFundComponent.prototype.getFund = function (id) {
        var _this = this;
        debugger;
        this.fundTypeId = id;
        this._globalURL.isLoading = true;
        this.fundDetails = null;
        this.totalRequestAmt = 0;
        this.totalApprovedAmt = 0;
        this._voservice.get(this._globalURL.GET_ALL_VO_FUND_DETAILS_FOR_VO + id, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                for (var item in res.Data) {
                    _this.totalRequestAmt = _this.totalRequestAmt + res.Data[item].RequestAmount;
                    _this.totalApprovedAmt = _this.totalApprovedAmt + res.Data[item].ApproveAmount;
                }
                _this.fundDetails = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (err) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOFundComponent.prototype.SaveFundRequest = function (data) {
        var _this = this;
        debugger;
        this.formdata = data;
        this._globalURL.isLoading = true;
        this._voservice.post(this._globalURL.REQUEST_FUND_FROM_CRMC, data.value, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status === 200) {
                    _this.formdata.control.reset();
                    _this._globalURL.isLoading = false;
                    _this.getFund(1);
                    _this.message = _this._common_message.FundRequestMsg;
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                }
                else {
                    _this.message = _this._common_message.FundRequestErrorMsg;
                    _this.showErrorMessage = true;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            }
            else {
                if (res.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.getFund(1);
                    data.control.reset();
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.message = _this._common_message.FundRequestErrorMsg;
                    _this.showErrorMessage = true;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            }
        })
            .catch(function (err) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOFundComponent.prototype.convertToWords = function (num) {
        this.convertedWordsInEnglish = this._commonService.convertDigitToWordsInEnglish(num);
        this.convertedWordsInHindi = this._commonService.convertDigitToWordsInHindi(num);
        this.convertedWordsInMarathi = this._commonService.convertDigitToWordsInMarathi(num);
    };
    VOFundComponent.prototype.navigateToFundRepayment = function (id) {
        this._globalVariable.SelectedFundId = id;
        this._router.navigate(['/vo/fundrepayment']);
    };
    VOFundComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/fund/fund.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")],
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_4__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_2__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_8__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_6__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_2__angular_router__["a" /* Router */]])
    ], VOFundComponent);
    return VOFundComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/fund/fundrepayment.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n</div>\r\n<!-- Main content -->\r\n<section class=\"content \">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n            <p class=\"member_loan_repayment_detail\">\r\n\r\n                <span *ngIf=\"lang.en\"> FUND REPAYMENT DETAILS</span>\r\n                <span *ngIf=\"lang.mr\">परतफेड फंड तपशील </span>\r\n            </p>\r\n            <button type=\"button\" class=\"btn btn-primary\" routerLink=\"/vo/fund\" style=\"margin-bottom:10px;\">\r\n                <span *ngIf=\"lang.en\"> BACK</span>\r\n                <span *ngIf=\"lang.mr\">परत</span>\r\n\r\n            </button>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n                    <table class=\"table table-bordered loan_table_common\">\r\n                        <thead>\r\n                            <tr class=\"show_loan_detail\">\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> FUND ID</span>\r\n                                    <span *ngIf=\"lang.mr\">फंड आयडी</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> FUND APPROVED AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">फंड मंजूर रक्कम</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">APPROVED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">मंजूर दिनांक</span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr class=\"show_loan_detail\">\r\n                                <td>\r\n                                    <b>{{fundDetails.Id}}</b>\r\n                                </td>\r\n                                <td>\r\n                                    <b>{{fundDetails.ApproveAmount| currency: 'INR'}}</b>\r\n                                </td>\r\n                                <td>\r\n                                    <b>{{fundDetails.ApprovedDate |date }}</b>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"clearfix\"></div>\r\n        <div class=\"col-md-12\">\r\n\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#repaymentEntry\" (click)=\"getCalculatedFundRepaymentDetails()\">\r\n                        <span *ngIf=\"lang.en\">MAKE FUND REPAYMENT</span>\r\n                        <span *ngIf=\"lang.mr\">फंड रिपेमेंट करा</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <table class=\"table table-bordered\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>-</th>\r\n                                <th>-</th>\r\n                                <th colspan=\"2\" style=\"text-align: center;\">\r\n                                    <span *ngIf=\"lang.en\">EXPECTED REPAYMENT</span>\r\n                                    <span *ngIf=\"lang.mr\">प्रत्यक्ष रक्कम</span>\r\n\r\n                                </th>\r\n                                <th colspan=\"3\" style=\"text-align: center\">\r\n                                    <span *ngIf=\"lang.en\">ACTUAL REPAYMENT</span>\r\n                                    <span *ngIf=\"lang.mr\">प्रत्यक्षात आलेली परतफेड रक्कम </span>\r\n\r\n                                </th>\r\n                            </tr>\r\n                            <tr class=\"pad_zero\">\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">INSTALLMENT NO</span>\r\n                                    <span *ngIf=\"lang.mr\">स्थापना क्रमांक</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">PAID DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">देय दिनांक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">PRINCIPAL AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">मुद्दल रक्कम</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">INTEREST AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">व्याजाची रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">PRINCIPAL AMOUNT PAID</span>\r\n                                    <span *ngIf=\"lang.mr\">भरलेली मुद्दल रक्कम</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">INTEREST AMOUNT PAID</span>\r\n                                    <span *ngIf=\"lang.mr\">भरलेली व्याजाची रक्कम</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TOTAL AMOUNT PAID</span>\r\n                                    <span *ngIf=\"lang.mr\">भरलेली एकूण रक्कम</span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let fundRepaymentDetail of fundRepaymentDetails; let rowIndex=index\">\r\n                                <td># {{rowIndex+1}}</td>\r\n                                <td>{{fundRepaymentDetail.PaidDate | date: 'dd-MMM-yyyy'}}</td>\r\n                                <td>{{fundRepaymentDetail.ExpectedPrincipleAmt | currency: 'INR'}}</td>\r\n                                <td>{{fundRepaymentDetail.ExpectedInterestAmt | currency: 'INR'}}</td>\r\n                                <td>{{fundRepaymentDetail.ActualPrincipleAmtPaid | currency: 'INR'}}</td>\r\n                                <td>{{fundRepaymentDetail.ActualInterestAmtPaid | currency: 'INR'}}</td>\r\n                                <td>{{fundRepaymentDetail.ActualInterestAmtPaid + fundRepaymentDetail.ActualPrincipleAmtPaid\r\n                                    | currency: 'INR'}}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>-</td>\r\n                                <td>\r\n                                    <span *ngIf=\"lang.en\">TOTAL INTEREST PAID</span>\r\n                                    <span *ngIf=\"lang.mr\">भरलेली व्याजाची एकूण रक्कम</span>\r\n\r\n                                </td>\r\n                                <td>{{totalPrincipalAmtPaid | currency: 'INR'}}</td>\r\n                                <td>{{totalInterestAmtPaid | currency: 'INR'}}</td>\r\n                                <td>-</td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- data table end -->\r\n    </div>\r\n</section>\r\n<!-- Modal -->\r\n<div id=\"repaymentEntry\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width: 930px;\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">REPAYMENT ENTRY FORM</span>\r\n                    <span *ngIf=\"lang.mr\">परतफेड प्रवेश फॉर्म</span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form #repaymentForm=\"ngForm\" class=\"input-group\" novalidate>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n\r\n                                            <span *ngIf=\"lang.en\">EXPECTED PRINCIPAL AMOUNT</span>\r\n                                            <span *ngIf=\"lang.mr\">अपेक्षित मूळ रक्कम</span>\r\n                                            <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                        </label>\r\n                                        <input type=\"number\" disabled value=\"{{calculatedFundRepaymentData.ExpectedPrincipleAmt}}\" class=\"form-control\" id=\"principleAmt\"\r\n                                            name=\"principleAmt\" required maxlength=\"50\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n\r\n                                            <span *ngIf=\"lang.en\"> EXPECTED INTEREST AMOUNT</span>\r\n                                            <span *ngIf=\"lang.mr\">अपेक्षित व्याजाची रक्कम</span>\r\n                                            <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                        </label>\r\n                                        <input type=\"number\" class=\"form-control custom_btn\" disabled value=\"{{calculatedFundRepaymentData.ExpectedInterestAmt}}\"\r\n                                            id=\"InterestAmt\" name=\"InterestAmt\" maxlength=\"50\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n\r\n                                            <span *ngIf=\"lang.en\"> ACTUAL PRINCIPAL AMOUNT</span>\r\n                                            <span *ngIf=\"lang.mr\">वास्तविक मुद्दल रक्कम</span>\r\n                                            <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                                        </label>\r\n                                        <input type=\"number\" (ngModel)=\"actualPrincipleAmt\" name=\"actualPrincipleAmt\" value=\"0\" class=\"form-control\" (input)=\"convertToWords($event.target.value)\"\r\n                                            required maxlength=\"7\" #actualPrincipleAmt=\"ngModel\">\r\n                                        <!-- <div *ngIf=\"actualPrincipleAmt.invalid && actualPrincipleAmt.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                                <div [hidden]=\"!actualPrincipleAmt.hasError('required')\">ActualPrinciple Amount is required</div>\r\n                                                <div [hidden]=\"!actualPrincipleAmt.hasError('pattern')\">ActualPrinciple Amount should be only numbers</div>\r\n                                            </div> -->\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n\r\n                                            <span *ngIf=\"lang.en\"> ACTUAL INTEREST AMOUNT</span>\r\n                                            <span *ngIf=\"lang.mr\">वास्तविक व्याजाची रक्कम</span>\r\n                                            <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                                        </label>\r\n                                        <!-- [value]=\"calculatedFundRepaymentData.ExpectedInterestAmt\" -->\r\n                                        <input type=\"number\" class=\"form-control\" (ngModel)=\"actualIntrestAmt\" (input)=\"convertToWordsForInterest($event.target.value)\"\r\n                                            name=\"actualIntrestAmt\" #actualIntrestAmt=\"ngModel\" maxlength=\"7\" required>\r\n                                        <div *ngIf=\"actualIntrestAmt.invalid && actualIntrestAmt.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <div [hidden]=\"!actualIntrestAmt.hasError('required')\">Actual Intrest Amount is required</div>\r\n                                            <!-- <div [hidden]=\"!actualIntrestAmt.hasError('pattern')\">Actual Intrest Amount should be only numbers</div> -->\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n\r\n                                            <span *ngIf=\"lang.en\"> PAYMENT DATE</span>\r\n                                            <span *ngIf=\"lang.mr\">पेमेंट तारीख</span>\r\n                                            <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                        </label>\r\n                                        <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"PaidDate\" #frDt [options]=\"options\" name=\"PaidDate\">\r\n                                        </ng-datepicker>\r\n                                        <!-- <input type=\"date\" (ngModel)=\"PaidDate\" class=\"form-control\" id=\"PaidDate\" name=\"PaidDate\" required #PaidDate=\"ngModel\"> -->\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\"> PAYMENT MODE</span>\r\n                                        <span *ngIf=\"lang.mr\">देणगी माध्यम </span>\r\n                                    </label>\r\n                                    <div class=\"form-group\">\r\n                                        <select class=\"form-control\" (ngModel)=\"selectedPaymentModeId\" required name=\"selectedPaymentModeId\" #selectedPaymentModeId=\"ngModel\">\r\n                                            <option [value]=\"1\">Cash At Hand</option>\r\n                                            <option [value]=\"2\">Cash At Bank</option>\r\n                                        </select>\r\n                                        <div *ngIf=\"selectedPaymentModeId.invalid && selectedPaymentModeId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <div [hidden]=\"!selectedPaymentModeId.hasError('required')\">Please select payment mode !</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n                                            ATTACH PAYMENT RECEIPT\r\n                                        </label>\r\n                                        <input class=\"custom_btn\" type=\"file\" ng-bind=\"fileData\" placeholder=\"Upload file\" accept=\".png,.jpeg,.jpg,.doc\" style=\"width:100%\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"card\">\r\n                                        <label for=\"text\">\r\n\r\n                                            <span *ngIf=\"lang.en\"> ACTUAL PRINCIPAL AMOUNT</span>\r\n                                            <span *ngIf=\"lang.mr\">वास्तविक मूळ रक्कम</span>\r\n                                        </label>\r\n                                        <div class=\"card-header\">\r\n                                            IN ENGLISH\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <h5 class=\"card-title\">\r\n                                                <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px;text-align:center;\">\r\n                                                    <b>{{convertedWordsInEnglish}}</b>\r\n                                                </div>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-header\">\r\n                                            मराठी मधे\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <h5 class=\"card-title\">\r\n                                                <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px;text-align:center;\">\r\n                                                    <b>{{convertedWordsInMarathi}}</b>\r\n                                                </div>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-header\">\r\n                                            हिंदी में\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <h5 class=\"card-title\">\r\n                                                <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px;text-align:center\">\r\n                                                    <b>{{convertedWordsInHindi}}</b>\r\n                                                </div>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"card\">\r\n                                        <label for=\"text\">\r\n\r\n                                            <span *ngIf=\"lang.en\"> ACTUAL INTEREST AMOUNT</span>\r\n                                            <span *ngIf=\"lang.mr\">वास्तविक व्याजाची रक्कम</span>\r\n                                        </label>\r\n                                        <div class=\"card-header\">\r\n                                            IN ENGLISH\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <h5 class=\"card-title\">\r\n                                                <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px;text-align:center;\">\r\n                                                    <b>{{convertedWordsInEnglishForInterest}}</b>\r\n                                                </div>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-header\">\r\n                                            मराठी मधे\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <h5 class=\"card-title\">\r\n                                                <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px;text-align:center;\">\r\n                                                    <b>{{convertedWordsInMarathiForInterest}}</b>\r\n                                                </div>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-header\">\r\n                                            हिंदी में\r\n                                        </div>\r\n                                        <div class=\"card-body\">\r\n                                            <h5 class=\"card-title\">\r\n                                                <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px;text-align:center;\">\r\n                                                    <b>{{convertedWordsInHindiForInterest}}</b>\r\n                                                </div>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-12\">\r\n                                    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"repaymentForm.invalid\" (click)=\"MarkRepayment(repaymentForm,frDt)\"\r\n                                        data-dismiss=\"modal\">\r\n\r\n                                  SAVE\r\n                                    </button>\r\n                                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                        <span *ngIf=\"lang.en\"> CANCLE</span>\r\n                                        <span *ngIf=\"lang.mr\">रद्द करा</span>\r\n\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"fundDetails != null\"  id=\"fundDetails\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\" style=\"padding:5px;width: 730px;\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n\r\n                    <span *ngIf=\"lang.en\"> FUND DETAILS -</span>\r\n                    <span *ngIf=\"lang.mr\">फंड डी ेएल्स-</span>\r\n                    <b>\r\n                        <span *ngIf=\"lang.en\"> FUND ID -</span>\r\n                        <span *ngIf=\"lang.mr\">फंड आयडी-</span> {{fundDetails.Id}}</b>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n\r\n                                <span *ngIf=\"lang.en\"> FROM CMRC</span>\r\n                                <span *ngIf=\"lang.mr\">फॉर्म सीएमआरसी</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <label for=\"text\">\r\n                            {{fundDetails.FromCMRCName}}\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n\r\n                                <span *ngIf=\"lang.en\"> REQUEST AMOUNT</span>\r\n                                <span *ngIf=\"lang.mr\">विनंती केलेली रक्कम</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                {{fundDetails.RequestAmount}}\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n\r\n                                <span *ngIf=\"lang.en\"> REQUEST DATE</span>\r\n                                <span *ngIf=\"lang.mr\">विनंती केलेली तारीख</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                {{fundDetails.RequestDate | date}}\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n\r\n                                <span *ngIf=\"lang.en\"> APPROVE AMOUNT</span>\r\n                                <span *ngIf=\"lang.mr\">मंजूर रक्कम</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                {{fundDetails.ApproveAmount}}\r\n                                <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n\r\n                                <span *ngIf=\"lang.en\"> FUND APPROVE DATE</span>\r\n                                <span *ngIf=\"lang.mr\">फंड मंजूर तारीख</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                {{fundDetails.ApprovedDate}}\r\n                                <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                            </label>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n\r\n                                <span *ngIf=\"lang.en\"> INTEREST RATE</span>\r\n                                <span *ngIf=\"lang.mr\">व्याज दर</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                {{fundDetails.InterestRate}}\r\n                                <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                            </label>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n\r\n                                <span *ngIf=\"lang.en\"> FUND REASON</span>\r\n                                <span *ngIf=\"lang.mr\">फंडाचे कारण</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                {{fundDetails.FundReason}}\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n\r\n                                <span *ngIf=\"lang.en\"> PRINCIPAL AMOUNT PAID TILL DATE</span>\r\n                                <span *ngIf=\"lang.mr\">आजपर्यंत भरलेली मूळ रक्कम</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                {{fundDetails.PrincipleAmountPaidTillDate}}\r\n                                <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n\r\n                                <span *ngIf=\"lang.en\"> PRINCIPAL REMAINING AMOUNT TO PAY</span>\r\n                                <span *ngIf=\"lang.mr\">भरन्यासाठी उरलेली मूळ रक्कम</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                {{fundDetails.PrincipleRemainingAmtToPay}}\r\n                                <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" id=\"click-button1\" data-dismiss=\"modal\" class=\"pull-right\">\r\n                    <span *ngIf=\"lang.en\"> CLOSE</span>\r\n                    <span *ngIf=\"lang.mr\">बंद करा</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/vo/fund/fundrepayment.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VOFundRepaymentComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__ = __webpack_require__("../../../../../src/app/services/cmrc.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var VOFundRepaymentComponent = (function () {
    function VOFundRepaymentComponent(_cmrcService, _voservice, _globalURL, _access_token, _router, lang, _commonService, _globalVariable, _common_message) {
        this._cmrcService = _cmrcService;
        this._voservice = _voservice;
        this._globalURL = _globalURL;
        this._access_token = _access_token;
        this._router = _router;
        this.lang = lang;
        this._commonService = _commonService;
        this._globalVariable = _globalVariable;
        this._common_message = _common_message;
        this.PaidDate = new Date();
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__,
            //minDate: new Date(Date.now()), // Minimal selectable date
            minDate: new Date("2016-03-03"),
            //maxDate: new Date(Date.now()),  // Maximal selectable date
            barTitleIfEmpty: 'Click to select a date'
        };
        if (sessionStorage.getItem("access_token") == "")
            this._router.navigate(['../login']);
        this.fundDetails = null;
        this.fundRepaymentDetails = null;
        this.totalRequestAmt = null;
        this.totalApprovedAmt = null;
        this.fundTypeId = 1;
        this.RequestAmount = "";
        this.convertedWordsInEnglish = "";
        this.convertedWordsInHindi = "";
        this.convertedWordsInMarathi = "";
    }
    VOFundRepaymentComponent.prototype.ngOnInit = function () {
        this.getFundRepaymentDetails(this._globalVariable.SelectedFundId);
        this.calculatedFundRepaymentData = {};
    };
    VOFundRepaymentComponent.prototype.ngAfterViewInit = function () {
    };
    VOFundRepaymentComponent.prototype.getFundRepaymentDetails = function (id) {
        var _this = this;
        this.fundTypeId = id;
        this.totalInterestAmtPaid = 0;
        this._globalURL.isLoading = true;
        this.totalRequestAmt = 0;
        this.totalApprovedAmt = 0;
        this.totalPrincipalAmtPaid = 0;
        this._voservice.get(this._globalURL.GET_FUND_REPAYMENT_DETAILS_VO + id, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.fundDetails = res.Data;
                _this.fundRepaymentDetails = res.Data.fundRepaymentModelList;
                for (var item in res.Data.fundRepaymentModelList) {
                    _this.totalInterestAmtPaid = _this.totalInterestAmtPaid + res.Data.fundRepaymentModelList[item].ActualInterestAmtPaid;
                    _this.totalPrincipalAmtPaid = _this.totalPrincipalAmtPaid + res.Data.fundRepaymentModelList[item].ActualPrincipleAmtPaid;
                }
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOFundRepaymentComponent.prototype.getCalculatedFundRepaymentDetails = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.GET_CALCULATED_FUND_DETAILS + this._globalVariable.SelectedFundId, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this._globalURL.isLoading = false;
                _this.calculatedFundRepaymentData = res.Data;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOFundRepaymentComponent.prototype.MarkRepayment = function (data, frDt) {
        var _this = this;
        debugger;
        this.ngformdata = data;
        data.value.PaidDate = this._commonService.convertToDate(frDt);
        var fundRepaymentSaveData = {
            "FundId": this._globalVariable.SelectedFundId,
            "InterestRate": this.calculatedFundRepaymentData.InterestRate,
            "ExpectedPrincipleAmt": this.calculatedFundRepaymentData.ExpectedPrincipleAmt,
            "ExpectedInterestAmt": this.calculatedFundRepaymentData.ExpectedInterestAmt,
            "ActualPrincipleAmtPaid": data.value.actualPrincipleAmt,
            "ActualInterestAmtPaid": data.value.actualIntrestAmt == null ? this.calculatedFundRepaymentData.ExpectedInterestAmt : data.value.actualIntrestAmt,
            "PaymentMode": data.value.selectedPaymentModeId,
            "PaidDate": data.value.PaidDate
        };
        this._voservice.post(this._globalURL.SAVE_FUND_REPAYMENT, fundRepaymentSaveData, sessionStorage.getItem("access_token"))
            .then(function (res) {
            debugger;
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    // data.control.reset();
                    _this._globalURL.isLoading = false;
                    _this.message = _this._common_message.FundRepaymentMsg;
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getFundRepaymentDetails(_this._globalVariable.SelectedFundId);
                    _this.message = "LOAN APPLICATION CREATED AND SENT TO SCRUTINY COMMITTEE FOR APPROVAL ";
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 6000);
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                    data.control.reset();
                    _this._globalURL.isLoading = false;
                    _this.message = _this._common_message.FundRepaymentMsg;
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getFundRepaymentDetails(_this._globalVariable.SelectedFundId);
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOFundRepaymentComponent.prototype.convertToWords = function (num) {
        this.convertedWordsInEnglish = this._commonService.convertDigitToWordsInEnglish(num);
        this.convertedWordsInHindi = this._commonService.convertDigitToWordsInHindi(num);
        this.convertedWordsInMarathi = this._commonService.convertDigitToWordsInMarathi(num);
    };
    VOFundRepaymentComponent.prototype.convertToWordsForInterest = function (num) {
        this.convertedWordsInEnglishForInterest = this._commonService.convertDigitToWordsInEnglish(num);
        this.convertedWordsInHindiForInterest = this._commonService.convertDigitToWordsInHindi(num);
        this.convertedWordsInMarathiForInterest = this._commonService.convertDigitToWordsInMarathi(num);
    };
    VOFundRepaymentComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/fund/fundrepayment.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")],
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_5__services_cmrc_services__["a" /* CMRCService */],
            __WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_4__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_2__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_8__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_6__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_10__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], VOFundRepaymentComponent);
    return VOFundRepaymentComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/income/other_income.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n  <loading-selector>\r\n  </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n  <message-selector [message]=\"message\">\r\n  </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n  <error-message-selector [message]=\"message\">\r\n  </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n  <warning-message-selector [message]=\"message\">\r\n  </warning-message-selector>\r\n</div>\r\n<section class=\"content-header\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\" style=\"padding:3px;\">\r\n\r\n      <div class=\"col-md-6\">\r\n        <label class=\"heading-title\">\r\n          <span *ngIf=\"lang.en\"> OTHER INCOME DETAILS FORM</span>\r\n          <span *ngIf=\"lang.mr\"> इतर उत्पन्न तपशील फॉर्म</span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"box box-default\">\r\n        <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n          <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createOtherIncomeForm\" (click)=\"loanSHGNameAndId()\">\r\n            <span *ngIf=\"lang.en\"> CREATE OTHER INCOME</span>\r\n            <span *ngIf=\"lang.mr\">इतर उत्पन्न तयार करा</span>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- <button type=\"button\" class=\"btn btn-primary\">नवीन बचतगट बनवा </button> -->\r\n        <div class=\"box-body\">\r\n          <table datatable class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\"> PAYEE NAME</span>\r\n                  <span *ngIf=\"lang.mr\">प्राप्तकर्ताचे नाव </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">IS SHG MEMBER</span>\r\n                  <span *ngIf=\"lang.mr\">एसएचजी सदस्य आहे का </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">PAID AMOUNT</span>\r\n                  <span *ngIf=\"lang.mr\">दिलेली रक्कम </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">REASON</span>\r\n                  <span *ngIf=\"lang.mr\">कारण </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">RECEIVED DATE</span>\r\n                  <span *ngIf=\"lang.mr\">देणगीची तारीख </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">DOWNLOAD</span>\r\n                  <span *ngIf=\"lang.mr\">डाऊनलोड </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">ACTION</span>\r\n                  <span *ngIf=\"lang.mr\">कृती </span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let otherIncomeDetail of otherIncomeDetails\">\r\n                <td>{{otherIncomeDetail.PayeeName}}</td>\r\n                <td>{{otherIncomeDetail.SHGId == null ? \"NO\" : \"YES\"}}</td>\r\n                <td>{{otherIncomeDetail.Amount | currency: 'INR'}}</td>\r\n                <td>{{otherIncomeDetail.Reason}}</td>\r\n                <td>{{otherIncomeDetail.PaidDate | date}}</td>\r\n                <td>\r\n                  <a href={{otherIncomeDetail.BankPhotoUrl}} target=\"_blank\">\r\n                    <span *ngIf=\"lang.en\">BANK RECEIPT</span>\r\n                    <span *ngIf=\"lang.mr\">बँक रसीद </span>\r\n                  </a> |\r\n                  <a href={{otherIncomeDetail.CheckPhotoUrl}} target=\"_blank\">\r\n                    <span *ngIf=\"lang.en\">CHECK RECEIPT</span>\r\n                    <span *ngIf=\"lang.mr\">चेक रसीद </span>\r\n                  </a>\r\n                </td>\r\n                <td style=\"text-align:center;padding:4px;\">\r\n                  <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteincome\" (click)=\"fordelete(otherIncomeDetail)\">\r\n                    <span *ngIf=\"lang.en\">DELETE</span>\r\n                    <span *ngIf=\"lang.mr\">काढून टाका </span>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <b>\r\n                    <span *ngIf=\"lang.en\">TOTAL</span>\r\n                    <span *ngIf=\"lang.mr\">एकूण </span>\r\n                  </b>\r\n                </td>\r\n                <td>-</td>\r\n                <td>\r\n                  <b>{{totalDonationAmt | currency: 'INR'}}</b>\r\n                </td>\r\n                <td>-</td>\r\n                <td>-</td>\r\n                <td>-</td>\r\n                <td>-</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- data table end -->\r\n</section>\r\n<!-- Modal -->\r\n<div id=\"createOtherIncomeForm\" class=\"modal\" role=\"dialog\">\r\n  <div class=\"modal-dialog\" style=\"padding: 5px; width: 923px; margin-top: 65px;\">\r\n    <!-- Modal content-->\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        <h4 class=\"modal-title\">\r\n          <span *ngIf=\"lang.en\">OTHER INCOME FORM</span>\r\n          <span *ngIf=\"lang.mr\">अन्य उत्पन्ननाचा अर्ज</span>\r\n        </h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"\">\r\n          <form #IncomeForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-7\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"text\">\r\n                      <span *ngIf=\"lang.en\">ENTER PAYEE NAME</span>\r\n                      <span *ngIf=\"lang.mr\">प्राप्तकर्ता चे नाव</span>\r\n                      <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                    </label>\r\n                    <input type=\"text\" (ngModel)=\"PayeeName\" class=\"form-control\" id=\"PayeeName\" name=\"PayeeName\" required #PayeeName=\"ngModel\">\r\n                    <div *ngIf=\"PayeeName.invalid && PayeeName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                      <div [hidden]=\"!PayeeName.hasError('required')\">Payee Name is Requierd !</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"text\">\r\n                      <span *ngIf=\"lang.en\">DONATION AMOUNT</span>\r\n                      <span *ngIf=\"lang.mr\">देणगी रक्कम</span>\r\n                      <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                    </label>\r\n                    <input type=\"text\" (ngModel)=\"Amount\" class=\"form-control\" id=\"Amount\" (input)=\"convertToWords($event.target.value)\" name=\"Amount\"\r\n                      maxlength=\"6\" required #Amount=\"ngModel\">\r\n                    <div *ngIf=\"Amount.invalid && Amount.touched\" class=\"alert-danger comman-error-mesage\">\r\n                      <div [hidden]=\"!Amount.hasError('required')\">Donation Amount is requierd!</div>\r\n                      <div [hidden]=\"!Amount.hasError('pattern')\">Donation Amount should be in digits</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\">INCOME SOURCE</span>\r\n                        <span *ngIf=\"lang.mr\">उत्पन्न स्त्रोत</span>\r\n                        <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                      </label>\r\n                      <select class=\"form-control\" (ngModel)=\"source\" id=\"source\" name=\"source\" required #source=\"ngModel\">\r\n                        <option value=\"DONATION\">DONATION</option>\r\n                        <option value=\"PROMOTION\">PROMOTION</option>\r\n                        <option value=\"OTHER\">OTHER</option>\r\n                      </select>\r\n                      <div *ngIf=\"source.invalid && source.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <div [hidden]=\"!source.hasError('required')\">Income source is requierd !</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\">DONATION REASON</span>\r\n                        <span *ngIf=\"lang.mr\">देणगी कारण</span>\r\n                        <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                      </label>\r\n                      <input type=\"text\" (ngModel)=\"Reason\" class=\"form-control\" id=\"Reason\" name=\"Reason\" required #Reason=\"ngModel\">\r\n                      <div *ngIf=\"Amount.invalid && Amount.touched\" class=\"alert-danger comman-error-mesage\">\r\n                        <div [hidden]=\"!Amount.hasError('required')\">donation reason is requierd !</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        <span *ngIf=\"lang.en\">PAYMENT DATE</span>\r\n                        <span *ngIf=\"lang.mr\">देणगी दिनांक </span>\r\n                        <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                      </label>\r\n                      <!-- <input type=\"date\" class=\"form-control\" (ngModel)=\"PaidDate\" name=\"PaidDate\" id=\"PaidDate\" #PaidDate=\"ngModel\"> -->\r\n               \r\n                      <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"PaidDate\" #frDt [options]=\"options\" name=\"PaidDate\">\r\n                        </ng-datepicker>  \r\n                      <!-- <div *ngIf=\"paymentdate.invalid && paymentdate.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!paymentdate.hasError('required')\">Paid Date is requierd !</div>\r\n                                    </div> -->\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">PAYMENT MODE</span>\r\n                    <span *ngIf=\"lang.mr\">देणगीचे माध्यम </span>\r\n                  </label>\r\n                  <div class=\"form-group\">\r\n                    <select class=\"form-control\" (ngModel)=\"PaymentMode\" id=\"selectedPaymentModeId\" required name=\"PaymentMode\" #PaymentMode=\"ngModel\">\r\n                      <option [value]=\"1\">Cash At Hand</option>\r\n                      <option [value]=\"2\">Cash At Bank</option>\r\n                    </select>\r\n                    <div *ngIf=\"PaymentMode.invalid && PaymentMode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                      <div [hidden]=\"!PaymentMode.hasError('required')\">\r\n                        <span *ngIf=\"lang.en\">Please select payment mode !</span>\r\n                        <span *ngIf=\"lang.mr\">कृपया पगाराचा मोड निवडा !</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        UPLOAD BANK RECEIPT\r\n\r\n                        <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                      </label>\r\n                      <input type=\"file\" ng-bind=\"bankFile\" placeholder=\"Upload Bank File\" accept=\".png,.jpeg,.jpg,.doc\">\r\n                      <!-- <div *ngIf=\"IFSCCode.invalid && IFSCCode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            Please Entre IFSC Code\r\n                                        </div> -->\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"text\">\r\n                        UPLOAD CHECK RECEIPT\r\n                        <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                      </label>\r\n                      <input type=\"file\" ng-bind=\"checkFile\" placeholder=\"Upload Check File\" accept=\".png,.jpeg,.jpg,.doc\">\r\n                      <!-- <div *ngIf=\"IFSCCode.invalid && IFSCCode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            Please Entre IFSC Code\r\n                                        </div> -->\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-5\">\r\n                <div class=\"card\">\r\n                  <div class=\"card-header\">\r\n                    IN ENGLISH\r\n                  </div>\r\n                  <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">\r\n                      <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px;text-align:center;\">\r\n                        <b>{{convertedWordsInEnglish}}</b>\r\n                      </div>\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card\">\r\n                  <div class=\"card-header\">\r\n                    मराठी मध्ये\r\n                  </div>\r\n                  <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">\r\n                      <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px;text-align:center\">\r\n                        <b>{{convertedWordsInMarathi}}</b>\r\n                      </div>\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n                <div class=\"card\">\r\n                  <div class=\"card-header\">\r\n                    हिंदी में\r\n                  </div>\r\n                  <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">\r\n                      <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px;text-align:center;\">\r\n                        <b>{{convertedWordsInHindi}}</b>\r\n                      </div>\r\n                    </h5>\r\n                  </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <div class=\"form-group\">\r\n                    <button *ngIf=\"lang.en\" type=\"button\" [disabled]=\"IncomeForm.invalid\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"createIncome(IncomeForm,frDt,$event.target)\">\r\n                      SAVE\r\n                    </button>\r\n                    <button *ngIf=\"lang.mr\" type=\"button\" [disabled]=\"IncomeForm.invalid\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"createIncome(IncomeForm,frDt,$event.target)\">\r\n                      जतन करा\r\n                    </button>               \r\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                      <span *ngIf=\"lang.en\"> CANCEL</span>\r\n                      <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"deleteincome\" class=\"modal\" role=\"dialog\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        <h4 class=\"modal-title\">\r\n          <span *ngIf=\"lang.en\">DELETE INCOME </span>\r\n          <span *ngIf=\"lang.mr\">आयकर विवरण काढा </span>\r\n        </h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p>\r\n          <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n          <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n        </p>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"\">\r\n          <div class=\"modal-footer\">\r\n            <div class=\"form-group\">\r\n              <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteOtherIncome(deleterecord.Id)\">\r\n                <span *ngIf=\"lang.en\">YES </span>\r\n                <span *ngIf=\"lang.mr\">होय </span>\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                <span *ngIf=\"lang.en\">NO </span>\r\n                <span *ngIf=\"lang.mr\">नाही </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/vo/income/other_income.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VOOtherIncome; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_FileService_file_upload_service__ = __webpack_require__("../../../../../src/app/services/FileService/file_upload.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_date_fns_locale_en__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var VOOtherIncome = (function () {
    function VOOtherIncome(_voService, _globalURL, _commonService, _access_token, _router, lang, _fileUploadService, _common_message) {
        this._voService = _voService;
        this._globalURL = _globalURL;
        this._commonService = _commonService;
        this._access_token = _access_token;
        this._router = _router;
        this.lang = lang;
        this._fileUploadService = _fileUploadService;
        this._common_message = _common_message;
        this.PaidDate = new Date();
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_8_date_fns_locale_en__,
            //minDate: new Date(Date.now()), // Minimal selectable date
            minDate: new Date("2016-03-03"),
            //maxDate: new Date(Date.now()),  // Maximal selectable date
            barTitleIfEmpty: 'Click to select a date'
        };
        this.selectedShgId = null;
        if (sessionStorage.getItem("access_token") == "")
            this._router.navigate(['../login']);
        this.totalDonationAmt = 0;
        this.convertedWordsInEnglish = "";
        this.convertedWordsInHindi = "";
        this.convertedWordsInMarathi = "";
    }
    VOOtherIncome.prototype.ngOnInit = function () {
        this.getOtherIncomeDetails();
    };
    VOOtherIncome.prototype.ngAfterViewInit = function () {
        //this.dtTrigger.next();
        //this.getOtherIncomeDetails();
    };
    VOOtherIncome.prototype.getOtherIncomeDetails = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this.totalDonationAmt = 0;
        this._voService.get(this._globalURL.GET_OTHER_INCOME_DETAILS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.status == 200) {
                if (res.status == 200) {
                    _this.otherIncomeDetails = JSON.parse(res._body).Data;
                    for (var item in _this.otherIncomeDetails) {
                        _this.totalDonationAmt = _this.totalDonationAmt + _this.otherIncomeDetails[item].Amount;
                        _this._globalURL.isLoading = false;
                    }
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
                //this.reRenderDT();
            }
            else {
                if (res.Status == true) {
                    _this.otherIncomeDetails = res.Data;
                    for (var item in _this.otherIncomeDetails)
                        _this.totalDonationAmt = _this.totalDonationAmt + _this.otherIncomeDetails[item].Amount;
                    _this.ShowErrormsg = false;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            //this.reRenderDT();
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOOtherIncome.prototype.loanSHGNameAndId = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.GET_SHG_ID_NAME, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.SHGNameAndId = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOOtherIncome.prototype.loadMembersForSHGId = function (data) {
        var _this = this;
        var selectedShgId = data;
        this._globalURL.isLoading = true;
        var finalUrl = this._globalURL.GET_MEM_ID_NAME + selectedShgId;
        this._voService.get(finalUrl, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.membersNameAndId = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOOtherIncome.prototype.createIncome = function (data, frDt, metadata) {
        var _this = this;
        debugger;
        this.ngFormData = data;
        this._globalURL.isLoading = true;
        //this.todaysOrToDt = this._commonService.convertToDate(PaidDate.value);
        data.value.PaidDate = this._commonService.convertToDate(frDt);
        //data.toDt = this.todaysOrToDt;
        //data.value.PaidDate =  this.todaysOrToDt;
        this._voService.post(this._globalURL.ADD_OTHER_INCOME, data.value, sessionStorage.getItem("access_token"))
            .then(function (res) {
            //metadata.control.reset();
            //data.control.reset();
            // if (res.status === 401) {
            //   sessionStorage.clear();
            //     this.showErrorMessage = true;
            //     this.message = this._common_message.error401message;
            //     setInterval(() => {
            //         this.showErrorMessage = false;
            //     }, 5000);
            //     this._globalURL.isLoading = false;
            //     this._router.navigate(['../login']);
            // }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    var data = JSON.parse(res._body);
                    var bankFile = metadata.form[6].files[0];
                    var bankFileFormData = new FormData();
                    bankFileFormData.append("file", bankFile);
                    bankFileFormData.append("RefId", data.Data);
                    _this._fileUploadService.post((_this._globalURL.ADD_PHOTO + "?folderName=OtherIncomeReceipt" + "&type=" + _this._globalURL.OTHER_INCOME_BANK_RECEIPT + "&RefId=" + data.Data), bankFileFormData, sessionStorage.getItem("access_token"))
                        .then(function (res) {
                        debugger;
                        if (res.Status == undefined) {
                            if (res.status == 200) {
                                _this.getOtherIncomeDetails();
                            }
                            else {
                                _this.showWarningMessage = true;
                                _this.message = _this._common_message.WarningMsg;
                                setInterval(function () {
                                    _this.showWarningMessage = false;
                                }, 5000);
                                _this._globalURL.isLoading = false;
                            }
                        }
                        else {
                            if (res.Status == true) {
                                _this.getOtherIncomeDetails();
                            }
                            else {
                                _this.showWarningMessage = true;
                                _this.message = _this._common_message.WarningMsg;
                                setInterval(function () {
                                    _this.showWarningMessage = false;
                                }, 5000);
                                _this._globalURL.isLoading = false;
                            }
                        }
                    }).catch(function (res) {
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.CatchBlockMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this._globalURL.isLoading = false;
                    });
                    var checkFile = metadata.form[7].files[0];
                    var checkFileFormData = new FormData();
                    checkFileFormData.append("file", checkFile);
                    checkFileFormData.append("RefId", data.Data);
                    _this._fileUploadService.post((_this._globalURL.ADD_PHOTO + "?folderName=OtherIncomeReceipt" + "&type=" + _this._globalURL.OTHER_INCOME_CHECK_RECEIPT + "&RefId=" + data.Data), checkFileFormData, sessionStorage.getItem("access_token"))
                        .then(function (res) {
                        if (res.Status == undefined) {
                            if (res.status == 200) {
                                _this.ngFormData.control.reset();
                                _this.getOtherIncomeDetails();
                            }
                            else {
                                _this.showWarningMessage = true;
                                _this.message = _this._common_message.WarningMsg;
                                setInterval(function () {
                                    _this.showWarningMessage = false;
                                }, 5000);
                                _this._globalURL.isLoading = false;
                            }
                        }
                        else {
                            if (res.Status == true) {
                                _this.getOtherIncomeDetails();
                            }
                            else {
                                _this.showWarningMessage = true;
                                _this.message = _this._common_message.WarningMsg;
                                setInterval(function () {
                                    _this.showWarningMessage = false;
                                }, 5000);
                                _this._globalURL.isLoading = false;
                            }
                        }
                    }).catch(function (res) {
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.CatchBlockMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this._globalURL.isLoading = false;
                    });
                }
            }
            _this._globalURL.isLoading = false;
            _this.showMessage = true;
            _this.message = _this._common_message.AddOtherIncomeMsg;
            setInterval(function () {
                _this.showMessage = false;
            }, 5000);
        }).catch(function (err) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    VOOtherIncome.prototype.convertToWords = function (num) {
        this.convertedWordsInEnglish = this._commonService.convertDigitToWordsInEnglish(num);
        this.convertedWordsInHindi = this._commonService.convertDigitToWordsInHindi(num);
        this.convertedWordsInMarathi = this._commonService.convertDigitToWordsInMarathi(num);
    };
    VOOtherIncome.prototype.fordelete = function (data) {
        this.deleterecord = data;
    };
    VOOtherIncome.prototype.deleteOtherIncome = function (id) {
        var _this = this;
        this._voService.get(this._globalURL.DELETE_OTHER_INCOME_DETAILS + id, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this._globalURL.isLoading = false;
                _this.message = _this._common_message.DeleteOtherIncomeMsg;
                _this.showMessage = true;
                setInterval(function () {
                    _this.showMessage = false;
                }, 5000);
                _this.getOtherIncomeDetails();
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this.getOtherIncomeDetails();
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this.getOtherIncomeDetails();
            _this._globalURL.isLoading = false;
        });
    };
    VOOtherIncome = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/income/other_income.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_6__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_7__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_5__services_FileService_file_upload_service__["a" /* FileUploadService */],
            __WEBPACK_IMPORTED_MODULE_9__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], VOOtherIncome);
    return VOOtherIncome;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/index.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"wrapper\">\r\n    <header class=\"main-header\" style=\"position:fixed;\">\r\n        <a class=\"logo\" style=\"background-color:#3c8dbc;\">\r\n            <span class=\"logo-mini\">\r\n                <b>VO</b>\r\n            </span>\r\n            <span class=\"logo-lg\">\r\n                <span> {{VillageName | uppercase}} {{dist | uppercase}}</span>\r\n            </span>\r\n        </a>\r\n        <nav role=\"navigation\" class=\"navbar navbar-fixed-top\">\r\n            <div class=\"container-fluid\" style=\"padding-right:0px;padding-left:0px;\">\r\n                <div class=\"navbar-header\">\r\n                    <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\" style=\"float:right;background-color:#fff;color:black\">\r\n                        <span class=\"icon-bar\"></span>\r\n                        <span class=\"icon-bar\"></span>\r\n                        <span class=\"icon-bar\"></span>\r\n                    </button>\r\n                </div>\r\n                <form #myform=\"ngForm\">\r\n                    <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-1\">\r\n                                <a href=\"#\" class=\"sidebar-toggle\" data-toggle=\"push-menu\" role=\"button\">\r\n                                    <span class=\"sr-only\">Toggle navigation</span>\r\n                                </a>\r\n                            </div>\r\n                            <div class=\"col-md-3\">                           \r\n                                        <label class=\"company_title\">\r\n                                            <span style=\"font-size: 14px\"> &nbsp; {{voBaseDetails.Name | uppercase}} </span>\r\n                                        </label>                                \r\n                            </div>\r\n                            <div class=\"col-md-2  col-md-offset-5\" style=\"margin-top:6px;\">\r\n                                <!-- <input type=\"radio\" name=\"group1\" id=\"radio-2\" #selectEnLang value=\"en\" name=\"lang\" [checked]=\"lang.en\" (click)=\"setLang(selectEnLang.value)\"\r\n                                style=\"width:20px;\">\r\n                            <label for=\"radio-2\">\r\n                                <span class=\"radio\">ENGLISH</span>\r\n                            </label>\r\n                            <input name=\"group1\" id=\"radio-1\" type=\"radio\" #selectMrLang value=\"mr\" name=\"lang\" [checked]=\"lang.mr\" (click)=\"setLang(selectMrLang.value)\"\r\n                                style=\"width:20px;margin-left:47px;\">\r\n                            <label for=\"radio-1\">\r\n                                <span class=\"radio\">मराठी</span>\r\n                            </label> -->\r\n                                <select class=\"language-select\" #lang_=\"ngModel\" name=\"lang_\" [(ngModel)]=\"selectLang\" (change)=\"setLang(lang_.value)\" style=\"outline: 0;height: 40px;box-shadow: none;border: 0px !important;height: 2.5;line-height: 2;background: black;overflow: hidden;margin: 0;padding: 5px;color: #fff;float:right\">\r\n                                    <option value=\"en\" selected>ENGLISH</option>\r\n                                    <option value=\"mr\">मराठी</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-md-1\">\r\n                                <div class=\"navbar-custom-menu\">\r\n                                    <ul class=\"nav navbar-nav\">\r\n                                        <li class=\"dropdown user\">\r\n                                            <a class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                                                <img src=\"dist/img/user2-160x160.jpg\" class=\"user-image\" alt=\"\">\r\n                                                <span class=\"hidden-xs\">\r\n                                                    <a href=\"#\">\r\n                                                        <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f5/Reset_button.svg/737px-Reset_button.svg.png\" width=\"20px;\">\r\n                                                    </a>\r\n                                                </span>\r\n                                            </a>\r\n                                            <ul class=\"dropdown-menu\" style=\"min-width: 102px;\">\r\n                                                <li>\r\n                                                    <div class=\"text-center\">\r\n                                                        <div class=\"pull-right\">\r\n                                                            <a routerLink='/login'>\r\n                                                                <button class=\"sign_out\" style=\"margin:4px\" (click)=\"SignOut()\">SIGN OUT</button>\r\n                                                            </a>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n    <!-- Left side column. contains the logo and sidebar -->\r\n    <aside class=\"main-sidebar\">\r\n        <!-- sidebar: style can be found in sidebar.less -->\r\n        <section class=\"sidebar\">\r\n            <!-- Sidebar user panel -->\r\n            <div class=\"user-panel\">\r\n                <div class=\"pull-left image\">\r\n                    <img src=\"dist/img/user2-160x160.jpg\" class=\"img-circle\" alt=\"\">\r\n                </div>\r\n                <div class=\"pull-left info\">\r\n\r\n                    <!-- <a ><i class=\"fa fa-circle text-success\"></i> Online</a> -->\r\n                </div>\r\n            </div>\r\n            <!-- search form -->\r\n            <form action=\"#\" method=\"get\" class=\"sidebar-form\">\r\n                <div class=\"input-group\" style=\"color:white;\">\r\n                    {{today | date}}\r\n                </div>\r\n            </form>\r\n            <!-- /.search form -->\r\n            <!-- sidebar menu: : style can be found in sidebar.less -->\r\n            <ul class=\"sidebar-menu\" data-widget=\"tree\" style=\"height:100%\">\r\n\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"dashbord\">\r\n                        <i class=\"fa fa-table\" aria-hidden=\"true\"></i>\r\n                        <span *ngIf=\"lang.en\">DASHBOARD</span>\r\n                        <span *ngIf=\"lang.mr\">डॅशबोर्ड</span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"shg_master\">\r\n                        <i class=\"fa fa-female\" aria-hidden=\"true\"></i>\r\n                        <span>\r\n                            <span *ngIf=\"lang.en\">MANAGE SHG</span>\r\n                            <span *ngIf=\"lang.mr\">एसएचजी व्यवस्थापन </span>\r\n                        </span>\r\n                    </a>\r\n                </li>\r\n                <!-- <a routerLink=\"scuritinycommitee\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span disabled=\"disabled\">SCRITINY COMMITEE </span>\r\n              </a> -->\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"vo_members\">\r\n                        <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                        <span>\r\n                            <span *ngIf=\"lang.en\">MANAGE VO</span>\r\n                            <span *ngIf=\"lang.mr\">व्हीओ व्यवस्थापन</span>\r\n                        </span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"loan\">\r\n                        <i class=\"fa fa-book\" aria-hidden=\"true\"></i>\r\n                        <span>\r\n                            <span *ngIf=\"lang.en\">LOAN MANAGEMENT</span>\r\n                            <span *ngIf=\"lang.mr\">कर्ज व्यवस्थापन</span>\r\n                        </span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"income\">\r\n                        <i class=\"fa fa-handshake-o\" aria-hidden=\"true\"></i>\r\n                        <span>\r\n                            <span *ngIf=\"lang.en\">OTHER INCOME</span>\r\n                            <span *ngIf=\"lang.mr\">इतर उत्पन्न</span>\r\n                        </span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"fund\">\r\n                        <i class=\"fa fa-columns\" aria-hidden=\"true\"></i>\r\n                        <span>\r\n                            <span *ngIf=\"lang.en\">FUND MANAGEMENT</span>\r\n                            <span *ngIf=\"lang.mr\">फंड व्यवस्थापन</span>\r\n                        </span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"attendance\">\r\n                        <i class=\"fa fa-child\" aria-hidden=\"true\"></i>\r\n                        <span>\r\n                            <span *ngIf=\"lang.en\">ATTENDANCE</span>\r\n                            <span *ngIf=\"lang.mr\">उपस्थिती</span>\r\n                        </span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"SLEntry\">\r\n                        <i class=\"fa fa-book\" aria-hidden=\"true\"></i>\r\n                        <span>\r\n                            <span *ngIf=\"lang.en\">LEDGER ENTRY</span>\r\n                            <span *ngIf=\"lang.mr\">खाते पुस्तिका </span>\r\n                        </span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"treeview\">\r\n                    <a routerLink=\"Finance\">\r\n                        <i class=\"fa fa-inr\" aria-hidden=\"true\"></i>\r\n                        <span>\r\n                            <span *ngIf=\"lang.en\">FINANCIAL</span>\r\n                            <span *ngIf=\"lang.mr\">आर्थिक विभाग </span>\r\n                        </span>\r\n                    </a>\r\n                </li>\r\n                <!-- <a routerLink=\"gender\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span>GENDER</span>\r\n              </a>\r\n              <a routerLink=\"master_district\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span>MASTER DISTRICT</span>\r\n              </a>\r\n              <a routerLink=\"taluka\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span>TALUKA</span>\r\n              </a>\r\n              <a routerLink=\"education\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span>EDUCATION</span>\r\n              </a>\r\n              <a routerLink=\"occupation\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span>OCCUPATION</span>\r\n              </a>\r\n              <a routerLink=\"social_category\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span>SOCIAL CATEGORY</span>\r\n              </a>\r\n              <a routerLink=\"economic_category\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span>ECONOMIC CATEGORY</span>\r\n              </a>\r\n              <a routerLink=\"ration_card\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span>RATION CARD</span>\r\n              </a>\r\n              <a routerLink=\"designation\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span>DESIGNATION</span>\r\n              </a>\r\n              <a routerLink=\"schema\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span>SCHEMA</span>\r\n              </a>\r\n              <a routerLink=\"area\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span>AREA</span>\r\n              </a>\r\n              <a routerLink=\"loan_reason\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span>LOAN REASON</span>\r\n              </a>\r\n              <a routerLink=\"fund_types\">\r\n                  <i class=\"fa fa-circle-o\"></i>\r\n                  <span>FUND TYPES</span>\r\n              </a> -->\r\n                <!-- <a routerLink=\"loanrepayment\"><i class=\"fa fa-circle-o\"></i><span>Loan Repayment</span></a> -->\r\n\r\n\r\n\r\n\r\n            </ul>\r\n        </section>\r\n        <!-- /.sidebar -->\r\n    </aside>\r\n   \r\n    <!-- Content Wrapper. Contains page content -->\r\n    <div class=\"content-wrapper\" style=\"margin-top:42px;\">\r\n        <!-- /.content -->\r\n        <div>\r\n            <!-- <div *ngIf=\"showMessage\">\r\n                <message-selector [message]=\"message\">\r\n                </message-selector>\r\n            </div> -->\r\n            <div *ngIf=\"showWarningMessage\">\r\n                <warning-message-selector [message]=\"message\">\r\n                </warning-message-selector>\r\n            </div>\r\n            <div *ngIf=\"showErrorMessage\">\r\n                <error-message-selector [message]=\"message\">\r\n                </error-message-selector>\r\n            </div>\r\n        </div>\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n    <!-- /.content-wrapper -->\r\n\r\n    <!-- Control Sidebar -->\r\n    <aside class=\"control-sidebar control-sidebar-dark\">\r\n        <!-- Create the tabs -->\r\n        <ul class=\"nav nav-tabs nav-justified control-sidebar-tabs\">\r\n            <li>\r\n                <a data-toggle=\"tab\">\r\n                    <i class=\"fa fa-home\"></i>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a data-toggle=\"tab\">\r\n                    <i class=\"fa fa-gears\"></i>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n        <!-- Tab panes -->\r\n\r\n    </aside>\r\n    <!-- /.control-sidebar -->\r\n    <!-- Add the sidebar's background. This div must be placed\r\n             immediately after the control sidebar -->\r\n    <div class=\"control-sidebar-bg\"></div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/vo/ledgerentries/ledgerentries.component.html":
/***/ (function(module, exports) {

module.exports = "<div  class=\"modal-backdrop in\" *ngIf=\"globalURL.isLoading\">       \r\n        <loading-selector>\r\n        </loading-selector>\r\n    </div>\r\n    <div *ngIf=\"showMessage\">\r\n        <message-selector [message]=\"message\">\r\n        </message-selector>\r\n    </div>\r\n    <div *ngIf=\"showErrorMessage\">\r\n        <error-message-selector [message]=\"message\">\r\n        </error-message-selector>\r\n    </div>\r\n    <div *ngIf=\"showWarningMessage\">\r\n        <warning-message-selector [message]=\"message\">\r\n        </warning-message-selector>\r\n    </div>\r\n    <!-- Content Header (Page header) -->    \r\n    <section class=\"content-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\" style=\"padding:3px;\">\r\n                <div class=\"col-md-3\">\r\n                    <label class=\"heading-title\">    \r\n                        <span *ngIf=\"lang.en\">SUB LEDGER ENTRY</span>\r\n                        <span *ngIf=\"lang.mr\">सब लेजर प्रवेश</span>\r\n                    </label>\r\n                </div>\r\n                <div class=\"col-md-4 col-md-offset-5\">\r\n                    <div class=\" TableHeaderInsideAll_Buttons btn_pad_non\">    \r\n                        <!-- <button title=\"View details\" class=\"btn btn-primary\" (click)=\"subLedgerExcel()\" style=\"float:right;\">\r\n                            <span *ngIf=\"lang.en\">EXCEL</span>\r\n                        </button> -->\r\n                    </div>\r\n                    <!-- <button class=\"btn btn-primary\" (click)=\"subLedgerExcel()\">EXCEL</button> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>    \r\n    <section class=\"content\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"box box-default\">\r\n                    <div class=\"col-md-12\" style=\"padding:10px;\">\r\n    \r\n                        <button class=\"btn btn-primary\" data-target=\"#createSLEntryForm\" data-toggle=\"modal\" type=\"button\">\r\n                            <span *ngIf=\"lang.en\"> ADD NEW SUB LEDGER ENTRY</span>\r\n                            <span *ngIf=\"lang.mr\">नवीन सब लेजर जोडा</span>\r\n                        </button>    \r\n                        <button class=\"btn btn-primary\" (click)=\"R143_slDetailExportTopdf()\" style=\"float:right\">\r\n                            <span>\r\n                                <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                            </span>PDF</button>\r\n                    </div>\r\n                    <div class=\"box-body\">\r\n                        <table  datatable class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\"> FROM</span>\r\n                                        <span *ngIf=\"lang.mr\">पासून</span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\"> TO</span>\r\n                                        <span *ngIf=\"lang.mr\">पर्यंत</span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\"> SUB LEDGER</span>\r\n                                        <span *ngIf=\"lang.mr\">सबलेजर </span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\"> AMOUNT</span>\r\n                                        <span *ngIf=\"lang.mr\">रक्कम </span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">TRANSACTION DATE</span>\r\n                                        <span *ngIf=\"lang.mr\">व्यवहार तारीख </span>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let slEntriesDetail of slEntriesDetails\">\r\n                                    <td>{{slEntriesDetail.FromName}}</td>\r\n                                    <td>{{slEntriesDetail.ToName}}</td>\r\n                                    <td>{{slEntriesDetail.SLTypeName}}</td>\r\n                                    <td>{{slEntriesDetail.Amount | currency: 'INR'}}</td>\r\n                                    <td>{{slEntriesDetail.TransactionDate | date}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- data table end -->\r\n    </section>\r\n    \r\n    <div id=\"createSLEntryForm\" class=\"modal\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">\r\n                        <span *ngIf=\"lang.en\">NEW SL ENTRY FORM</span>\r\n                        <span *ngIf=\"lang.mr\"> नवीन सबलेजर प्रवेश फॉर्म</span>\r\n                    </h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <form #slEntryForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\"> SELECT SL</span>\r\n                                        <span *ngIf=\"lang.mr\"> सबलेजर निवडा </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" (ngModel)=\"slId\" name=\"slId\" id=\"SHGName\" #slId=\"ngModel\" (change)=\"checkIfPMIsApplicable(slId.viewModel)\"\r\n                                        required>\r\n                                        <option [value]=\"17\">CASH IN HAND TO VO BANK ACCOUNT</option>\r\n                                        <option [value]=\"18\">INTEREST AMOUNT ON VO BANK SAVING ACCOUNT</option>\r\n                                        <option [value]=\"19\">EXPENSE AMOUNT ON VO BANK SAVING ACCOUNT</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"slId.invalid && slId.touched\" class=\"alert-danger comman-error-mesage\">\r\n    \r\n                                        <span *ngIf=\"lang.en\"> SL Type is Requierd !</span>\r\n                                        <span *ngIf=\"lang.mr\"> सबलेजर टाईप आवश्यक ! </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\"> TRANSACTION DATE</span>\r\n                                        <span *ngIf=\"lang.mr\"> व्यवहार तारीख </span>\r\n                                        <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                                    </label>\r\n                     \r\n                                    <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"TransactionDate\" #frDt [options]=\"options\" name=\"TransactionDate\">\r\n                                    </ng-datepicker>  \r\n                                    <!-- <input type=\"date\" (ngModel)=\"TransactionDate\" class=\"form-control\" id=\"TransactionDate\" required name=\"TransactionDate\"\r\n                                        #TransactionDate=\"ngModel\"> -->\r\n                                        <!-- <div *ngIf=\"TransactionDate.invalid && TransactionDate.touched\" class=\"alert-danger comman-error-mesage\">\r\n    \r\n                                            <span *ngIf=\"lang.en\"> Transaction Date is Requierd !</span>\r\n                                            <span *ngIf=\"lang.mr\"> रक्कम आवश्यक ! </span>\r\n                                        </div> -->\r\n                                </div>\r\n\r\n                            </div>\r\n    \r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\"> ENTER AMOUNT</span>\r\n                                        <span *ngIf=\"lang.mr\"> रक्कम प्रविष्ट करा </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" [(ngModel)]=\"Amount\" [value]=\"Amount\" name=\"Amount\" class=\"form-control\" required #FundAmount=\"ngModel\">\r\n                                    <div *ngIf=\"FundAmount.invalid && FundAmount.touched\" class=\"alert-danger comman-error-mesage\">\r\n    \r\n                                        <span *ngIf=\"lang.en\"> Amount is Requierd !</span>\r\n                                        <span *ngIf=\"lang.mr\"> रक्कम आवश्यक ! </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\" *ngIf=\"isPMApplicable\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\"> SELECT PAYMENT MODE</span>\r\n                                        <span *ngIf=\"lang.mr\"> पेमेंट मोड निवडा</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" (ngModel)=\"pmode\" name=\"pmode\" id=\"SHGName\" #pmode=\"ngModel\" required>\r\n                                        <option [value]=\"1\">CASH IN HAND</option>\r\n                                        <option [value]=\"2\">CASH AT BANK</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"Amount.invalid && Amount.touched\" class=\"alert-danger comman-error-mesage\">\r\n    \r\n                                        <span *ngIf=\"lang.en\"> Payment mode is Requierd !</span>\r\n                                        <span *ngIf=\"lang.mr\"> पेमेंट मोड आवश्यक !</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <!-- <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        IN ENGLISH\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">\r\n                                            <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 20px\">\r\n                                                <b>{{convertedWordsInEnglish}}</b>\r\n                                            </div>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        मराठी मधे\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">\r\n                                            <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 20px\">\r\n                                                <b>{{convertedWordsInMarathi}}</b>\r\n                                            </div>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        हिंदी में\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">\r\n                                            <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 20px\">\r\n                                                <b>{{convertedWordsInHindi}}</b>\r\n                                            </div>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div> -->\r\n                            <div class=\"modal-footer\">\r\n                                <div class=\"col-md-12\" style=\"margin-top:10px;\">\r\n                                    <button class=\"btn btn-primary\" [disabled]=\"slEntryForm.invalid\" (click)=\"saveSLEntry(slEntryForm,frDt)\"\r\n                                        data-dismiss=\"modal\" type=\"button\">\r\n                                       SAVE    \r\n                                    </button>\r\n                                    <button class=\"btn btn-default\" data-dismiss=\"modal\" type=\"button\">\r\n                                        <span *ngIf=\"lang.en\">CANCEL</span>\r\n                                        <span *ngIf=\"lang.mr\">रद्द करा</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n    \r\n                        </div>\r\n                    </form>\r\n    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>"

/***/ }),

/***/ "../../../../../src/app/components/vo/ledgerentries/ledgerentries.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SLEntryComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_reports_exportexcel__ = __webpack_require__("../../../../../src/app/services/reports/exportexcel.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_date_fns_locale_en__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var SLEntryComponent = (function () {
    function SLEntryComponent(voservice, globalURL, accesstoken, globalVariable, exportToExcel, exportToPDF, lang, router, _commonService, _common_message) {
        this.voservice = voservice;
        this.globalURL = globalURL;
        this.accesstoken = accesstoken;
        this.globalVariable = globalVariable;
        this.exportToExcel = exportToExcel;
        this.exportToPDF = exportToPDF;
        this.lang = lang;
        this.router = router;
        this._commonService = _commonService;
        this._common_message = _common_message;
        this.showSuccMessage = false;
        this.showErrorMessage = false;
        this.Amount = 0;
        this.TransactionDate = new Date();
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_10_date_fns_locale_en__,
            //minDate: new Date(Date.now()), // Minimal selectable date
            minDate: new Date("2016-03-03"),
            //maxDate: new Date(Date.now()),  // Maximal selectable date
            barTitleIfEmpty: 'Click to select a date'
        };
        this.isPMApplicable = false;
        if (sessionStorage.getItem("access_token") == "")
            router.navigate(['../login']);
    }
    SLEntryComponent.prototype.ngOnInit = function () {
        this.getSLEntriesDetails();
        //this.slDetailExportTopdf();
    };
    SLEntryComponent.prototype.ngAfterViewInit = function () {
        //this.dtTrigger.next();
        //this.getSLEntriesDetails();
    };
    SLEntryComponent.prototype.getSLEntriesDetails = function () {
        var _this = this;
        this.globalURL.isLoading = true;
        debugger;
        this.voservice.get(this.globalURL.GET_SL_ENTRIES_DETAILS + 3, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                _this.accesstoken.access_token = "";
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this.globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    if ((JSON.parse(res._body).Data.Status == 200))
                        _this.slEntriesDetails = JSON.parse(res._body).Data;
                    else {
                        _this.showWarningMessage = true;
                        _this.message = _this._common_message.WarningMsg;
                        setInterval(function () {
                            _this.showWarningMessage = false;
                        }, 5000);
                        _this.globalURL.isLoading = false;
                    }
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this.globalURL.isLoading = false;
                }
            else {
                if (res.Status == true) {
                    _this.slEntriesDetails = res.Data;
                    _this.globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this.globalURL.isLoading = false;
                }
            }
            //this.reRenderDT(); 
        })
            .catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this.globalURL.isLoading = false;
        });
    };
    SLEntryComponent.prototype.saveSLEntry = function (Data, frDt) {
        var _this = this;
        debugger;
        this.globalURL.isLoading = true;
        Data.value.TransactionDate = this._commonService.convertToDate(frDt);
        Data.value.pmode = Data.value.pmode == undefined ? 0 : Data.value.pmode;
        this.voservice.get((this.globalURL.SAVE_SL_ENTRY + "?slId=" + Data.value.slId + "&amount=" + Data.value.Amount + "&pmode=" + Data.value.pmode + "&TransactionDate=" + Data.value.TransactionDate), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                _this.accesstoken.access_token = "";
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this.globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                Data.control.reset();
                _this.globalURL.isLoading = false;
                _this.message = _this._common_message.sladdmsg;
                _this.showMessage = true;
                setInterval(function () {
                    _this.showMessage = false;
                }, 5000);
                _this.getSLEntriesDetails();
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this.globalURL.isLoading = false;
                _this.getSLEntriesDetails();
            }
        })
            .catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this.globalURL.isLoading = false;
            _this.getSLEntriesDetails();
        });
    };
    SLEntryComponent.prototype.checkIfPMIsApplicable = function (slId) {
        var _this = this;
        debugger;
        this.voservice.get(this.globalURL.CHECKIF_PM_APPLICABLE + slId, sessionStorage.getItem("access_token"))
            .then(function (res) {
            debugger;
            if (res == null) {
                _this.isPMApplicable = false;
                return;
            }
            if (res.status === 401) {
                _this.accesstoken.access_token = "";
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this.globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            _this.isPMApplicable = res;
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this.globalURL.isLoading = false;
        });
        if (slId == this.globalVariable.CASH_IN_HAND_TO_CASH_AT_BANK) {
            this.Amount = this.globalVariable.CashInHand;
        }
        else {
            this.Amount = 0;
        }
    };
    SLEntryComponent.prototype.slDetailExportTopdf = function () {
        var _this = this;
        this.voservice.get(this.globalURL.GET_AVAILABLEACCOUNTSS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                _this.accesstoken.access_token = "";
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this.globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            _this.AvailableAccounts = res.Data;
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this.globalURL.isLoading = false;
        });
    };
    SLEntryComponent.prototype.R143_slDetailExportTopdf = function () {
        this.exportToPDF.R143_slDetailExportTopdf(this.AvailableAccounts);
    };
    SLEntryComponent.prototype.subLedgerExcel = function () {
        this.exportToExcel.subLedgerExcel(this.AvailableAccounts);
    };
    SLEntryComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/ledgerentries/ledgerentries.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_4__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_6__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__services_reports_exportexcel__["a" /* ExportToExcel */],
            __WEBPACK_IMPORTED_MODULE_7__services_reports_exportpdf__["a" /* ExportToPDF */],
            __WEBPACK_IMPORTED_MODULE_8__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_5__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_2__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_11__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], SLEntryComponent);
    return SLEntryComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/loan/loan.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n</div>\r\n<!-- Content Header (Page header) -->\r\n\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-5\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\"> LOAN MANGEMENT FORM</span>\r\n                    <span *ngIf=\"lang.mr\">कर्ज व्यवस्थापन फॉर्म </span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<section class=\"content\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"col-md-12\" style=\"margin-top:5px;margin-bottom:4px;\">\r\n                    <div class=\"col-md-3\">\r\n                        <button class=\"btn btn-primary pull-left\" (click)=\"loanSHGNameAndId()\" data-target=\"#createLoanForm\" data-toggle=\"modal\"\r\n                            type=\"button\">\r\n                            <span *ngIf=\"lang.en\"> NEW LOAN APPLICATION</span>\r\n                            <span *ngIf=\"lang.mr\">कर्जासाठी नवीन अर्ज </span>\r\n                        </button>\r\n                    </div>\r\n                    <!-- <div class=\"col-md-3\">\r\n                    <button title=\"View details\" class=\"btn btn-primary\" (click)=\"loanDetailExportToExcel()\" style=\"float:right;\">EXCEL\r\n                    </button>\r\n                </div> -->\r\n                    <div class=\"col-md-3 col-md-offset-6\">\r\n                        <button title=\"View details\" class=\"btn btn-primary\" (click)=\"SHGLoanBifurcationExportToPdf()\" style=\"float:right;\">\r\n                            <span>\r\n                                <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                            </span> PDF\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"box-body\">\r\n                    <!-- <button type=\"button\" class=\"btn btn-primary\">नवीन बचतगट बनवा </button> -->\r\n                    <div *ngIf=\"shgLoanDetails.length>=0\">\r\n                        <table datatable class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">SHG CODE</span>\r\n                                        <span *ngIf=\"lang.mr\">एसएचजी कोड </span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">SHG NAME</span>\r\n                                        <span *ngIf=\"lang.mr\">एसएचजी चे नाव </span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">LOAN AMOUNT</span>\r\n                                        <span *ngIf=\"lang.mr\">कर्जाची रक्कम </span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">LOAN REPAID AMOUNT</span>\r\n                                        <span *ngIf=\"lang.mr\">कर्ज दिलेली रक्कम </span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">OUTSTANDING TOTAL AMOUNT</span>\r\n                                        <span *ngIf=\"lang.mr\">थकीत शिल्लक रक्कम </span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">OUTSTANDING PRINCIPAL AMOUNT</span>\r\n                                        <span *ngIf=\"lang.mr\">थकीत मुद्दल रक्कम</span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">OUTSTANDING INTEREST AMOUNT</span>\r\n                                        <span *ngIf=\"lang.mr\">थकीत व्याज रक्कम </span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">TOTAL PAID %</span>\r\n                                        <span *ngIf=\"lang.mr\">भरलेली रक्कम %</span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">FINE PAID AMOUNT</span>\r\n                                        <span *ngIf=\"lang.mr\">दंड रक्कम</span>\r\n                                    </th>\r\n                                    <th>\r\n                                        <span *ngIf=\"lang.en\">SHG LOAN TAKEN TIMES</span>\r\n                                        <span *ngIf=\"lang.mr\">किती वेळा कर्ज घेतले </span>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr *ngFor=\"let shgLoanDetail of shgLoanDetails\">\r\n                                    <td>{{shgLoanDetail.SHGCode}}</td>\r\n                                    <td>{{shgLoanDetail.SHGName}}</td>\r\n                                    <td>{{shgLoanDetail.LoanAmount | currency: 'INR'}}</td>\r\n                                    <td>{{shgLoanDetail.SHGPaidAmount | currency: 'INR'}}</td>\r\n                                    <td>{{shgLoanDetail.SHGOutstandingAmount | currency: 'INR'}}</td>\r\n                                    <td>{{shgLoanDetail.SHGOutstandingPrincipalAmount | currency: 'INR'}}</td>\r\n                                    <td>{{shgLoanDetail.SHGOutstandingInterest | currency: 'INR'}}</td>\r\n                                    <td>{{shgLoanDetail.SHGPerPaidAmount == 'NaN' ? 0 : shgLoanDetail.SHGPerPaidAmount}}</td>\r\n                                    <td>{{shgLoanDetail.SHGFineAmt | currency: 'INR'}}</td>\r\n                                    <td>{{shgLoanDetail.NoOfMembers}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div>\r\n                <!-- <h4 class=\"loan_detail\">MEMBERS LOAN DETAILS</h4> -->\r\n                <label style=\"font-size:19px\">\r\n                    <span *ngIf=\"selectedLoanStatus ==2\">\r\n                        <span *ngIf=\"lang.en\"> NEW LOAN REQUEST DETAILS</span>\r\n                        <span *ngIf=\"lang.mr\">नवीन कर्जासाठी विनंती तपशील </span>\r\n                    </span>\r\n                    <span *ngIf=\"selectedLoanStatus ==1\">\r\n                        <span *ngIf=\"lang.en\"> APPROVED LOANS DETAILS</span>\r\n                        <span *ngIf=\"lang.mr\">कर्ज मंजूर तपशील </span>\r\n                    </span>\r\n                    <span *ngIf=\"selectedLoanStatus ==4\">\r\n                        <span *ngIf=\"lang.en\"> REJECTED LOANS DETAILS</span>\r\n                        <span *ngIf=\"lang.mr\">रद्द केलेले कर्ज तपशील</span>\r\n                    </span>\r\n                    <span *ngIf=\"selectedLoanStatus ==3\">\r\n                        <span *ngIf=\"lang.en\"> CLOSED LOANS DETAILS</span>\r\n                        <span *ngIf=\"lang.mr\"> कर्ज बंद तपशील </span>\r\n                    </span>\r\n                </label>\r\n            </div>\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n                    <nav class=\"navbar navbar-default\">\r\n                        <ul class=\"nav navbar-nav item\">\r\n                            <li class=\"\">\r\n                                <a routerLink='/vo/loan' (click)=\"loanSHGLoanDataByStaus(2)\" routerLinkActive=\"active\">\r\n                                    <span *ngIf=\"lang.en\"> NEW LOAN REQUEST</span>\r\n                                    <span *ngIf=\"lang.mr\">नवीन कर्ज विनंती </span>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a routerLink='/vo/loan' (click)=\"loanSHGLoanDataByStaus(1)\" routerLinkActive=\"active\">\r\n                                    <span *ngIf=\"lang.en\"> APPROVED LOANS</span>\r\n                                    <span *ngIf=\"lang.mr\">मंजूर कर्ज </span>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a routerLink='/vo/loan' (click)=\"loanSHGLoanDataByStaus(4)\" routerLinkActive=\"active\">\r\n                                    <span *ngIf=\"lang.en\"> REJECTED LOANS</span>\r\n                                    <span *ngIf=\"lang.mr\">रद्द केलेले कर्ज</span>\r\n                                </a>\r\n                            </li>\r\n                            <li>\r\n                                <a routerLink='/vo/loan' (click)=\"loanSHGLoanDataByStaus(3)\" routerLinkActive=\"active\">\r\n                                    <span *ngIf=\"lang.en\"> CLOSED LOANS</span>\r\n                                    <span *ngIf=\"lang.mr\">बंद केलेले कर्ज </span>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n                <!-- <button type=\"button\" class=\"btn btn-primary\">नवीन बचतगट बनवा </button> -->\r\n                <div *ngIf=\"memberLoanDetails.length >=0\">\r\n                    <table class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> LOAN ID</span>\r\n                                    <span *ngIf=\"lang.mr\">कर्ज आयडी </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> MEMBER NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">सदस्याचे नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> DOWNLOAD FORM</span>\r\n                                    <span *ngIf=\"lang.mr\">डाऊनलोड फॉर्म </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> SHG NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">एसएचजी चे नाव </span>\r\n                                </th>\r\n                                <th *ngIf=\"selectedLoanStatus != globalVariable.APPROVED_LOAN\">\r\n                                    <span *ngIf=\"lang.en\"> LOAN AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">कर्जाची रक्कम </span>\r\n                                </th>\r\n                                <th *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN || selectedLoanStatus == globalVariable.CLOSED_LOAN\">\r\n                                    <span *ngIf=\"lang.en\"> LOAN APPROVED AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">कर्ज मंजूर केलेली रक्कम </span>\r\n                                </th>\r\n                                <!-- <th>REMAINING AMT TO ADD</th> -->\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> LOAN REASON</span>\r\n                                    <span *ngIf=\"lang.mr\">कर्जाचे कारण </span>\r\n                                </th>\r\n                                <th *ngIf=\"selectedLoanStatus == globalVariable.REJECTED_LOAN\">\r\n                                    <span *ngIf=\"lang.en\"> REJECTED REASON</span>\r\n                                    <span *ngIf=\"lang.mr\">नकाराचे कारण </span>\r\n                                </th>\r\n                                <th *ngIf=\"selectedLoanStatus == globalVariable.NEW_LOAN || selectedLoanStatus == globalVariable.CLOSED_LOAN\">\r\n                                    <span *ngIf=\"lang.en\"> REQUEST DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">विनंती दिनांक </span>\r\n                                </th>\r\n                                <th *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN || selectedLoanStatus == globalVariable.CLOSED_LOAN\">\r\n                                    <span *ngIf=\"lang.en\"> APPROVED DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">मंजुरी दिनांक </span>\r\n                                </th>\r\n                                <th *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN\">\r\n                                    <span *ngIf=\"lang.en\"> END DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">शेवटचा दिनांक </span>\r\n                                </th>\r\n                                <th *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN\">\r\n                                    <span *ngIf=\"lang.en\"> RUNNING INSTALLMENT</span>\r\n                                    <span *ngIf=\"lang.mr\">चालू हफ्ता </span>\r\n                                </th>\r\n                                <th *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN\">\r\n                                    <span *ngIf=\"lang.en\"> REPAYMENT</span>\r\n                                    <span *ngIf=\"lang.mr\">परतफेड </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let memberLoanDetail of memberLoanDetails\">\r\n                                <td>{{memberLoanDetail.LoanId}}</td>\r\n                                <td>{{memberLoanDetail.MemberFirstName + \" \" + memberLoanDetail.MemberLastName | uppercase}}</td>\r\n                                <td>\r\n                                    <span *ngIf=\"memberLoanDetail.Photo == null\">\r\n                                        <img src=\"https://cdn3.iconfinder.com/data/icons/abstract-1/512/no_image-512.png\" width=\"45px\">\r\n                                    </span>\r\n                                    <span *ngIf=\"memberLoanDetail.Photo != null\">\r\n                                        <a target=\"_blank\" href=\"{{memberLoanDetail.Photo}}\" class=\"btn btn-primary\">\r\n                                            <span *ngIf=\"lang.en\"> LOAN FORM</span>\r\n                                            <span *ngIf=\"lang.mr\">कर्ज फॉर्म </span>\r\n                                        </a>\r\n                                    </span>\r\n                                </td>\r\n                                <td>{{memberLoanDetail.SHGName | uppercase}} {{NEW_LOAN}}</td>\r\n                                <td *ngIf=\"selectedLoanStatus != globalVariable.APPROVED_LOAN\">{{memberLoanDetail.LoanAmount | currency: 'INR'}}</td>\r\n                                <td *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN || selectedLoanStatus == globalVariable.CLOSED_LOAN\">{{memberLoanDetail.LoanApprovedAmount | currency: 'INR'}}</td>\r\n                                <td>{{memberLoanDetail.LoanReason | uppercase}}</td>\r\n                                <td *ngIf=\"selectedLoanStatus == globalVariable.REJECTED_LOAN\">{{memberLoanDetail.RejectReason}}</td>\r\n                                <td *ngIf=\"selectedLoanStatus == globalVariable.NEW_LOAN || selectedLoanStatus == globalVariable.CLOSED_LOAN\">{{memberLoanDetail.RequestDate | date}}</td>\r\n                                <td *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN || selectedLoanStatus == globalVariable.CLOSED_LOAN\">{{memberLoanDetail.ApprovedDate | date}}</td>\r\n                                <td *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN\">{{memberLoanDetail.LoanEndDate | date}}</td>\r\n                                <td *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN\"># {{memberLoanDetail.CurrentInstallment}}</td>\r\n                                <td *ngIf=\"selectedLoanStatus == globalVariable.APPROVED_LOAN\">\r\n                                    <button class=\"btn btn-primary\" (click)=\"naviagetToRepayment(memberLoanDetail.LoanId, memberLoanDetail.LoanAmount)\">\r\n                                        <span *ngIf=\"lang.en\"> SHOW REPAYMENT</span>\r\n                                        <span *ngIf=\"lang.mr\">रिपेमेंट पाहा </span>\r\n                                    </button>\r\n                                    <!-- </span> -->\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- Modal -->\r\n<div id=\"createLoanForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"padding: 5px;  width: 866px;margin-top: 80px;\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\"> NEW LOAN FORM</span>\r\n                    <span *ngIf=\"lang.mr\">नवीन कर्ज फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div>\r\n                <div class=\"modal-body\">\r\n                    <!-- <p>नवीन बचतगट बनवा फॉर्म </p> -->\r\n                    <div class=\"\">\r\n                        <form #loanForm=\"ngForm\" class=\"input-group\" id=\"bacgfat\" novalidate>\r\n\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-7\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"text\">\r\n                                                    <span *ngIf=\"lang.en\"> SELECT SHG GROUP</span>\r\n                                                    <span *ngIf=\"lang.mr\"> एसएचजी ग्रुप निवडा </span>\r\n                                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                                </label>\r\n                                                <select class=\"form-control\" (change)=\"loadMembersForSHGId()\" [(ngModel)]=\"selectedShgId\" name=\"selectedShgId\" id=\"SHGName\"\r\n                                                    #SHGName=\"ngModel\" required>\r\n\r\n                                                    <option *ngFor=\"let shgNameAndId_ of SHGNameAndId\" [value]=\"shgNameAndId_.Key\">{{shgNameAndId_.Value | uppercase}}</option>\r\n                                                </select>\r\n                                                <div *ngIf=\"SHGName.invalid && SHGName.touched\" class=\"alert-danger comman-error-mesage\">\r\n\r\n                                                    <span *ngIf=\"lang.en\"> please Enter SHG Name !</span>\r\n                                                    <span *ngIf=\"lang.mr\"> कृपया एसएचजी चे नाव भरा ! </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"text\">\r\n                                                    <span *ngIf=\"lang.en\"> SELECT MEMBER</span>\r\n                                                    <span *ngIf=\"lang.mr\"> सदस्य निवडा </span>\r\n                                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                                </label>\r\n                                                <select class=\"form-control\" [(ngModel)]=\"selectedMemberId\" name=\"selectedMemberId\" id=\"MemberName\" #MemberName=\"ngModel\"\r\n                                                    required>\r\n\r\n                                                    <option *ngFor=\"let memNameAndId_ of membersNameAndId\" [value]=\"memNameAndId_.Key\">{{memNameAndId_.Value | uppercase}}</option>\r\n                                                </select>\r\n                                                <div *ngIf=\"MemberName.invalid && MemberName.touched\" class=\"alert-danger comman-error-mesage\">\r\n\r\n                                                    <span *ngIf=\"lang.en\"> please enter Member Name!</span>\r\n                                                    <span *ngIf=\"lang.mr\">कृपया सदस्याचे नाव भरा ! </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"text\">\r\n                                                    <span *ngIf=\"lang.en\"> LOAN REASON</span>\r\n                                                    <span *ngIf=\"lang.mr\">कर्जाचे कारण </span>\r\n                                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                                </label>\r\n                                                <select (ngModel)=\"LoanReasonId\" name=\"CasteId\" class=\"form-control\" id=\"LoanReason\" name=\"LoanReasonId\" required #LoanReasonId=\"ngModel\">\r\n                                                    <option value=\"1\">\r\n                                                        <span *ngIf=\"lang.en\"> Aggriculture</span>\r\n                                                        <span *ngIf=\"lang.mr\">शेती </span>\r\n                                                    </option>\r\n                                                    <option value=\"2\">\r\n                                                        <span *ngIf=\"lang.en\"> Domestic purpose</span>\r\n                                                        <span *ngIf=\"lang.mr\">घरगुती उद्देश </span>\r\n                                                    </option>\r\n                                                    <option value=\"3\">\r\n                                                        <span *ngIf=\"lang.en\"> Festival</span>\r\n                                                        <span *ngIf=\"lang.mr\">उत्सव </span>\r\n                                                    </option>\r\n                                                    <option value=\"4\">\r\n                                                        <span *ngIf=\"lang.en\"> Business</span>\r\n                                                        <span *ngIf=\"lang.mr\">व्यवसाय </span>\r\n                                                    </option>\r\n                                                    <option value=\"6\">\r\n                                                        <span *ngIf=\"lang.en\"> Health</span>\r\n                                                        <span *ngIf=\"lang.mr\">आरोग्य </span>\r\n                                                    </option>\r\n                                                    <option value=\"7\">\r\n                                                        <span *ngIf=\"lang.en\">Son Education </span>\r\n                                                        <span *ngIf=\"lang.mr\">मुलाचे शिक्षण </span>\r\n                                                    </option>\r\n                                                    <option value=\"8\">\r\n                                                        <span *ngIf=\"lang.en\"> Daughter Education </span>\r\n                                                        <span *ngIf=\"lang.mr\">मुलीचे शिक्षण </span>\r\n                                                    </option>\r\n                                                    <option value=\"9\">\r\n                                                        <span *ngIf=\"lang.en\"> livestock</span>\r\n                                                        <span *ngIf=\"lang.mr\">पशुधन </span>\r\n                                                    </option>\r\n                                                    <option value=\"11\">\r\n                                                        <span *ngIf=\"lang.en\">Marriage</span>\r\n                                                        <span *ngIf=\"lang.mr\">लग्न </span>\r\n                                                    </option>\r\n                                                    <option value=\"12\">\r\n                                                        <span *ngIf=\"lang.en\"> House</span>\r\n                                                        <span *ngIf=\"lang.mr\">घर </span>\r\n                                                    </option>\r\n                                                    <option value=\"13\">\r\n                                                        <span *ngIf=\"lang.en\"> Sanitation</span>\r\n                                                        <span *ngIf=\"lang.mr\">स्वच्छता </span>\r\n                                                    </option>\r\n                                                </select>\r\n                                                <div *ngIf=\"LoanReasonId.invalid && LoanReasonId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                                    <div [hidden]=\"!LoanReasonId.hasError('required')\">\r\n                                                        <span *ngIf=\"lang.en\"> Please select Loan Reason !</span>\r\n                                                        <span *ngIf=\"lang.mr\">कृपया कर्जाचे कारण निवडा ! </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"text\">\r\n                                                    <span *ngIf=\"lang.en\"> LOAN AMOUNT</span>\r\n                                                    <span *ngIf=\"lang.mr\">कर्जाची रक्कम </span>\r\n                                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                                </label>\r\n                                                <input type=\"number\" (ngModel)=\"LoanAmount\" class=\"form-control\" id=\"LoanAmount\" (input)=\"convertToWords($event.target.value)\"\r\n                                                    name=\"LoanAmount\" required [min]=\"1\" [max]=\"80000\" #LoanAmount=\"ngModel\">\r\n                                                <!-- <div *ngIf=\"LoanAmount.errors?.max\" class=\"alert-danger comman-error-mesage\">\r\n\r\n                                                    <span *ngIf=\"lang.en\"> Please Enter Loan between 1 to 80000 Amount !</span>\r\n                                                    <span *ngIf=\"lang.mr\">कृपया 1 ते 80000 दरम्यान कर्ज भरा ! </span>\r\n                                                </div>\r\n                                                <div *ngIf=\"LoanAmount1.errors?.min\" class=\"alert-danger comman-error-mesage\">\r\n                                                    <span *ngIf=\"lang.en\"> Please Enter Loan between 1 to 80000 Amount !</span>\r\n                                                    <span *ngIf=\"lang.mr\">कृपया 1 ते 80000 दरम्यान कर्ज भरा ! </span>\r\n                                                </div> -->\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"text\">\r\n                                                    <span *ngIf=\"lang.en\"> LOAN APPLICATION DATE</span>\r\n                                                    <span *ngIf=\"lang.mr\">कर्जाच्या अर्जाची तारीख </span>\r\n                                                    <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                                                </label>\r\n                                               <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"RequestDate\" #frDt [options]=\"options\" name=\"RequestDate\">\r\n                                                </ng-datepicker>                                                \r\n                              \r\n                                                <!-- <input type=\"date\" (ngModel)=\"RequestDate\" class=\"form-control\" id=\"amtPaidDate\" required name=\"RequestDate\" #RequestDate=\"ngModel\"> -->\r\n                                                <!-- <div *ngIf=\"frDt.invalid && frDt.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                                    <div [hidden]=\"!amtPaidDate.hasError('required')\">\r\n                                                        <span *ngIf=\"lang.en\"> Application Date amount is required !</span>\r\n                                                        <span *ngIf=\"lang.mr\">कर्जाच्या अर्जाची तारीख आवश्यक ! </span>\r\n\r\n                                                    </div>\r\n                                                </div> -->\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"text\">\r\n                                                    <span *ngIf=\"lang.en\">\r\n                                                        UPLOAD LOAN APPLICATION PHOTO\r\n                                                    </span>\r\n                                                    <span *ngIf=\"lang.mr\">कर्ज फॉर्म जोड</span>\r\n                                                    <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                                                </label>\r\n                                                <input class=\"custom_btn\" type=\"file\" ng-bind=\"fileData\" placeholder=\"Upload file\" accept=\".png,.jpeg,.jpg,.doc\" style=\"width:100%\">\r\n                                                <!-- <div *ngIf=\"IFSCCode.invalid && IFSCCode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                                                            Please Entre IFSC Code\r\n                                                                        </div> -->\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-5\">\r\n                                    <div class=\"\">\r\n                                        <div class=\"card\">\r\n                                            <div class=\"card-header\">\r\n                                                IN ENGLISH\r\n                                            </div>\r\n                                            <div class=\"card-body\">\r\n                                                <h5 class=\"card-title\">\r\n                                                    <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px\">\r\n                                                        <b>{{convertedWordsInEnglish}}</b>\r\n                                                    </div>\r\n                                                </h5>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"card\">\r\n                                            <div class=\"card-header\">\r\n                                                मराठी मधे\r\n                                            </div>\r\n                                            <div class=\"card-body\">\r\n                                                <h5 class=\"card-title\">\r\n                                                    <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px\">\r\n                                                        <b>{{convertedWordsInMarathi}}</b>\r\n                                                    </div>\r\n                                                </h5>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"card\">\r\n                                            <div class=\"card-header\">\r\n                                                हिंदी में\r\n                                            </div>\r\n                                            <div class=\"card-body\">\r\n                                                <h5 class=\"card-title\">\r\n                                                    <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 12px\">\r\n                                                        <b>{{convertedWordsInHindi}}</b>\r\n                                                    </div>\r\n                                                </h5>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"modal-footer\">\r\n                                            <div class=\"form-group\">\r\n                                                <span *ngIf=\"lang.en\">\r\n                                                    <button class=\"btn btn-primary\" style=\"margin-top:12px;margin-left:14px;\" (click)=\"save(loanForm.value,frDt, $event.target.form[5].files[0]);loanForm.reset()\"\r\n                                                        data-dismiss=\"modal\">\r\n                                                        SAVE\r\n                                                    </button>\r\n                                                </span>\r\n                                                <span *ngIf=\"lang.mr\">\r\n                                                    <button class=\"btn btn-primary\" style=\"margin-top:12px;margin-left:14px;\"  (click)=\"save(loanForm.value,frDt, $event.target.form[5].files[0]);loanForm.reset()\"\r\n                                                        data-dismiss=\"modal\">\r\n                                                        जतन करा\r\n                                                    </button>\r\n                                                    <!-- <span *ngIf=\"lang.en\"> SAVE</span>\r\n                                                    <span *ngIf=\"lang.mr\">जतन करा </span> -->\r\n                                                </span>\r\n                                                <button class=\"btn btn-default\" style=\"margin-top:12px;margin-left:14px;\" data-dismiss=\"modal\" type=\"button\">\r\n                                                    <span *ngIf=\"lang.en\">CANCEL</span>\r\n                                                    <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"upadtePayementModeModal\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\"> UPDATE PATMENT MODE TO SHG</span>\r\n                    <span *ngIf=\"lang.mr\">पेमेंट मोडची एसएचजी अद्ययावत करा </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <!-- <p>नवीन बचतगट बनवा फॉर्म </p> -->\r\n                <div class=\"\">\r\n                    <div class=\"row\">\r\n                        <form #UpdatePaymentModeform=\"ngForm\" id=\"bacgfat\" novalidate>\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\"> SELECT PAYMENT MODE</span>\r\n                                        <span *ngIf=\"lang.mr\">पेमेंट मोड निवडा </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" (ngModel)=\"selectedPaymentModeId\" required name=\"selectedPaymentModeId\" #selectedPaymentModeId=\"ngModel\">\r\n                                        <option [value]=\"1\">Cash At Hand</option>\r\n                                        <option [value]=\"2\">Cash At Bank</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"selectedPaymentModeId.invalid && selectedPaymentModeId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!selectedPaymentModeId.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\"> Please select payment mode !</span>\r\n                                            <span *ngIf=\"lang.mr\">कृपया पेमेंट मोड निवडा ! </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-06\">\r\n                                <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> ATTACH BANK RECIEPT</span>\r\n                                    <span *ngIf=\"lang.mr\">बँक रसीद जोडा </span>\r\n                                </label>\r\n                                <input class=\"custom_btn\" type=\"file\" ng-bind=\"fileData\" placeholder=\"Upload file\" accept=\".png,.jpeg,.jpg,.doc\">\r\n                            </div>\r\n                            <div class=\"col-md-06\">\r\n                                <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> ATTACH BANK RECIEPT</span>\r\n                                    <span *ngIf=\"lang.mr\">बँक रसीद जोडा </span>\r\n                                </label>\r\n                                <input class=\"custom_btn\" type=\"file\" ng-bind=\"fileData\" placeholder=\"Upload file\" accept=\".png,.jpeg,.jpg,.doc\">\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button class=\"pull-left\" id=\"click-button2\" style=\"margin-top:12px;margin-left:14px;\" class=\"btn btn-primary\" [disabled]=\"UpdatePaymentModeform.invalid\"\r\n                                    (click)=\"updatePaymentMode(UpdatePaymentModeform.value.selectedPaymentModeId, $event.target.form)\"\r\n                                    data-dismiss=\"modal\" type=\"button\">\r\n                                    <span *ngIf=\"lang.en\"> SAVE</span>\r\n                                    <span *ngIf=\"lang.mr\">जतन करा </span>\r\n                                </button>\r\n                                <button id=\"click-button2\" style=\"margin-top:12px;margin-left:14px;\" data-dismiss=\"modal\" type=\"button\" class=\"pull-right\">CANCEL</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>"

/***/ }),

/***/ "../../../../../src/app/components/vo/loan/loan.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoanComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_FileService_file_upload_service__ = __webpack_require__("../../../../../src/app/services/FileService/file_upload.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__services_reports_exportexcel__ = __webpack_require__("../../../../../src/app/services/reports/exportexcel.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_date_fns_locale_en__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













//import { CommonService } from '../../../services/common.service';
var LoanComponent = (function () {
    // public selectedLoanId: any;
    function LoanComponent(_voservice, _fileUploadService, _access_token, _globalURL, _commonService, exportToPdf, exportToExcel, router, lang, globalVariable, _common_message) {
        this._voservice = _voservice;
        this._fileUploadService = _fileUploadService;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this._commonService = _commonService;
        this.exportToPdf = exportToPdf;
        this.exportToExcel = exportToExcel;
        this.router = router;
        this.lang = lang;
        this.globalVariable = globalVariable;
        this._common_message = _common_message;
        this.loanId = 0;
        this.RequestDate = new Date();
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_12_date_fns_locale_en__,
            //minDate: new Date(Date.now()), // Minimal selectable date
            minDate: new Date("2016-03-03"),
            //maxDate: new Date(Date.now()),  // Maximal selectable date
            barTitleIfEmpty: 'Click to select a date'
        };
        // _globalURL.isLoading = false;
        this.shgLoanDetails = null;
        this.memberLoanDetails = null;
        this.SHGNameAndId = null;
        this.selectedShgId = null;
        this.membersNameAndId = null;
        this.selectedMemberId = null;
        this.LoanReason = null;
        this.selectedLoanStatus = 0;
        if (sessionStorage.getItem("access_token") == "")
            router.navigate(['../login']);
    }
    LoanComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        // this._commonService.get().then(data => this.items = data)
        this._commonService.get(this._globalURL.GET_NEXT_CODE + 3)
            .then(function (res) {
            if (res.Status == true) {
                _this.nextCode = res.Data;
            }
        });
        this.loanSHGLoanData();
        this.selectedLoanStatus = 2;
        this.loanSHGLoanDataByStaus(2);
        // this.RequestDate=new Date();
    };
    LoanComponent.prototype.loanSHGLoanDataByStaus = function (loanStatus) {
        var _this = this;
        //debugger;
        this.selectedLoanStatus = loanStatus;
        this._globalURL.isLoading = true;
        //this._voservice.get((this._globalURL.MEMBER_LOAN_DETAILS + "" + loanStatus), sessionStorage.getItem("access_token"))
        this._voservice.get((this._globalURL.MEMBER_LOAN_DETAILS + "" + loanStatus), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.memberLoanDetails = res.Data;
                //this.memberLoanDetails = null;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (res) {
            alert("loanSHGLoanDataByStaus");
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    LoanComponent.prototype.naviagetToRepayment = function (memid, loanAmt) {
        this._globalURL.selectedLoanId = memid;
        this._globalURL.loanAmount = loanAmt;
        this.router.navigate(['/vo/loanrepayment']);
    };
    LoanComponent.prototype.loanSHGLoanData = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        //this._voservice.get(this._globalURL.SHG_LOAN_DETAILS, sessionStorage.getItem("access_token"))
        this._voservice.get(this._globalURL.SHG_LOAN_DETAILS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.shgLoanDetails = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
        this._voservice.get((this._globalURL.MEMBER_LOAN_DETAILS + "" + 1), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.memberLoanDetails = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    LoanComponent.prototype.loanSHGNameAndId = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.GET_SHG_ID_NAME, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.SHGNameAndId = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    LoanComponent.prototype.loadMembersForSHGId = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voservice.get((this._globalURL.GET_MEM_ID_NAME + "" + this.selectedShgId), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.membersNameAndId = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    LoanComponent.prototype.save = function (data, frDt, metadata) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        data.SHGId = this.selectedShgId;
        data.MemberId = this.selectedMemberId;
        //this.todaydate = this._commonService.convertToDate(frDt);
        data.RequestDate = this._commonService.convertToDate(frDt);
        this._voservice.post(this._globalURL.CREATE_LOAN_APPLICATION, data, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    var data = JSON.parse(res._body);
                    _this._globalURL.isLoading = false;
                    _this.loanSHGLoanData();
                    var formData = new FormData();
                    formData.append("RefId", data.Data);
                    formData.append("file", metadata);
                    _this._fileUploadService.post((_this._globalURL.ADD_PHOTO + "?folderName=Loan" + "&type=" + _this._globalURL.LOAN_APPLICATION_PHOTO + "&RefId=" + data.Data), formData, sessionStorage.getItem("access_token")).then(function (res) {
                        if (res.status === 401) {
                            sessionStorage.clear();
                            _this.showErrorMessage = true;
                            _this.message = _this._common_message.error401message;
                            setInterval(function () {
                                _this.showErrorMessage = false;
                            }, 5000);
                            _this._globalURL.isLoading = false;
                            _this.router.navigate(['../login']);
                        }
                        if (res.Status == undefined) {
                            if (res.status == 200) {
                                _this.message = _this._common_message.CreateLoanMsg;
                                _this.showMessage = true;
                                setInterval(function () {
                                    _this.showMessage = false;
                                }, 6000);
                            }
                        }
                        else {
                            _this.showErrorMessage = true;
                            _this.message = _this._common_message.CatchBlockMsg;
                            setInterval(function () {
                                _this.showErrorMessage = false;
                            }, 5000);
                            _this._globalURL.isLoading = false;
                        }
                    }).catch(function (res) {
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.CatchBlockMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this._globalURL.isLoading = false;
                    });
                }
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    LoanComponent.prototype.convertToWords = function (num) {
        this.convertedWordsInEnglish = this._commonService.convertDigitToWordsInEnglish(num);
        this.convertedWordsInHindi = this._commonService.convertDigitToWordsInHindi(num);
        this.convertedWordsInMarathi = this._commonService.convertDigitToWordsInMarathi(num);
    };
    LoanComponent.prototype.setLoanId = function (loanId) {
        this._globalURL.selectedLoanId = loanId;
    };
    LoanComponent.prototype.updatePaymentMode = function (paymentModeId, file) {
        var _this = this;
        debugger;
        var check_receiptMetadata = file[1].files[0];
        var bank_receiptMetadata = file[2].files[0];
        this._voservice.get((this._globalURL.UPDATE_PAYMENT_MODE + "?loanId=" + this._globalURL.selectedLoanId + "&paymentModeId=" + paymentModeId), sessionStorage.getItem("access_token")).
            then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    _this.loanSHGLoanDataByStaus(_this.selectedLoanStatus);
                    //alert("Updated Payment Mode Status");
                    _this.showMessage = true;
                    _this.message = "Updated Payment Mode Status";
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                }
                else {
                    _this.showErrorMessage = true;
                    _this.message = _this._common_message.CatchBlockMsg;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            else {
                if (res.Status == true) {
                    var formData = new FormData();
                    formData.append("RefId", _this._globalURL.selectedLoanId);
                    formData.append("file", bank_receiptMetadata);
                    _this._fileUploadService.post((_this._globalURL.ADD_PHOTO + "?folderName=Loan" + "&type=" + _this._globalURL.VO_SHG_BANK_RECEIPT_PAYMENT_MODE_PHOTO + "&RefId=" + _this._globalURL.selectedLoanId), formData, sessionStorage.getItem("access_token")).then(function (res) {
                        if (res.Status == undefined) {
                            if (res.status == 200) {
                                _this.showMessage = true;
                                _this.message = "PHOTO Uploaded Successfully..!! LOAN APPLICATION CREATED AND SENT TO SCRUTINY COMMITTEE FOR APPROVAL ";
                                setInterval(function () {
                                    _this.showMessage = false;
                                }, 5000);
                                //alert("Photo uploaded Successfully");
                                //this.message = "LOAN APPLICATION CREATED AND SENT TO SCRUTINY COMMITTEE FOR APPROVAL";
                            }
                        }
                        else {
                            _this.showErrorMessage = true;
                            _this.message = _this._common_message.CatchBlockMsg;
                            setInterval(function () {
                                _this.showErrorMessage = false;
                            }, 5000);
                            _this._globalURL.isLoading = false;
                        }
                    }).catch(function (res) {
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.CatchBlockMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this._globalURL.isLoading = false;
                    });
                    var chekReceipt_Form = new FormData();
                    chekReceipt_Form.append("RefId", _this._globalURL.selectedLoanId);
                    chekReceipt_Form.append("file", check_receiptMetadata);
                    _this._fileUploadService.post((_this._globalURL.ADD_PHOTO + "?folderName=Loan" + "&type=" + _this._globalURL.VO_SHG_CHECK_RECEIPT_PAYMENT_MODE_PHOTO + "&RefId=" + _this._globalURL.selectedLoanId), formData, sessionStorage.getItem("access_token")).then(function (res) {
                        if (res.Status == undefined) {
                            if (res.status == 200) {
                                _this.showMessage = true;
                                _this.message = _this._common_message.PaymentmodeUpdateMsg;
                                setInterval(function () {
                                    _this.showMessage = false;
                                }, 5000);
                                _this._globalURL.isLoading = false;
                            }
                        }
                        else {
                            _this.showErrorMessage = true;
                            _this.message = _this._common_message.CatchBlockMsg;
                            setInterval(function () {
                                _this.showErrorMessage = false;
                            }, 5000);
                            _this._globalURL.isLoading = false;
                        }
                    }).catch(function (res) {
                        _this.showErrorMessage = true;
                        _this.message = _this._common_message.CatchBlockMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this._globalURL.isLoading = false;
                    });
                }
                _this.loanSHGLoanDataByStaus(1);
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    LoanComponent.prototype.AddRemainingToOutstanding = function (loanId) {
        //this._voservice.post(this._globalURL.)
    };
    LoanComponent.prototype.SHGLoanBifurcationExportToPdf = function () {
        this._globalURL.isLoading = true;
        debugger;
        this.exportToPdf.SHGLoanBifurcationExportToPdf(this.shgLoanDetails);
        this._globalURL.isLoading = false;
    };
    LoanComponent.prototype.loanDetailExportToExcel = function () {
        this.exportToExcel.loanDetailExportToExcel(this.shgLoanDetails);
    };
    LoanComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/loan/loan.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_6__services_FileService_file_upload_service__["a" /* FileUploadService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_9__services_reports_exportpdf__["a" /* ExportToPDF */],
            __WEBPACK_IMPORTED_MODULE_10__services_reports_exportexcel__["a" /* ExportToExcel */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_8__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_11__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], LoanComponent);
    return LoanComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/loan/loan.repayment.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showSuccessMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n</div>\r\n\r\n<section class=\"content repayment\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n            <p class=\"member_loan_repayment_detail\">\r\n                <span *ngIf=\"lang.en\"> MEMBER LOAN REPAYMENT DETAILS</span>\r\n                <span *ngIf=\"lang.mr\">सदस्य कर्ज परतफेड तपशील </span>\r\n            </p>\r\n            <button type=\"button\" class=\"btn btn-primary\" routerLink=\"/vo/loan\" style=\"margin-bottom:10px;\">\r\n                <span *ngIf=\"lang.en\"> BACK</span>\r\n                <span *ngIf=\"lang.mr\">परत जा</span>\r\n            </button>\r\n        </div>\r\n        <div class=\"col-md-6 box box-default\" style=\"width: 50%;\">\r\n            <div class=\"box-body\">\r\n                <table class=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr class=\"show_loan_detail\">\r\n                            <th>\r\n                                <span *ngIf=\"lang.en\"> LOAN ID</span>\r\n                                <span *ngIf=\"lang.mr\">कर्ज आयडी </span>\r\n                            </th>\r\n                            <th>\r\n                                <span *ngIf=\"lang.en\"> LOAN APPROVED AMOUNT</span>\r\n                                <span *ngIf=\"lang.mr\">कर्जाची मंजूर रक्कम</span>\r\n                            </th>\r\n                            <th>\r\n                                <span *ngIf=\"lang.en\"> REMAINING LOAN AMOUNT</span>\r\n                                <span *ngIf=\"lang.mr\">उरलेली कर्जाची रक्कम </span>\r\n                            </th>\r\n                            <th>\r\n                                <span *ngIf=\"lang.en\"> MEMBER NAME</span>\r\n                                <span *ngIf=\"lang.mr\">सदस्याचे नाव </span>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr class=\"show_loan_detail\">\r\n                            <td>\r\n                                <b>{{memberLoanDetails.LoanId}}</b>\r\n                            </td>\r\n                            <td>\r\n                                <b>{{memberLoanDetails.LoanApprovedAmount}}</b>\r\n                            </td>\r\n                            <td>\r\n                                <span *ngIf=\"remainingLoamAmount == 0\">\r\n                                    <span *ngIf=\"lang.en\">ALL AMOUNT APPROVED</span>\r\n                                    <span *ngIf=\"lang.mr\">मंजूर झालेली सर्व रक्कम </span>\r\n                                </span>\r\n                                <span *ngIf=\"remainingLoamAmount != 0\">\r\n                                    <button class=\"btn btn-primary\" (click)=\"UpdateLoan(remainingLoamAmount, memberLoanDetails.LoanId)\">\r\n                                        <b>Rs. {{remainingLoamAmount}} /- </b>\r\n                                        <span *ngIf=\"lang.en\"> ADD TO AMOUNT</span>\r\n                                        <span *ngIf=\"lang.mr\">रक्कमे मध्ये जोडा</span>\r\n                                    </button>\r\n                                </span>\r\n                            </td>\r\n                            <td>\r\n                                <b>{{memberLoanDetails.MemberFirstName}} {{memberLoanDetails.MemberLastName}}</b>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#loanDetails\" style=\"margin-bottom:20px;\">\r\n                <span *ngIf=\"lang.en\"> SHOW MORE DETAIL</span>\r\n                <span *ngIf=\"lang.mr\">आणखी माहिती दर्शवा</span>\r\n            </button>\r\n            <button class=\"btn btn-primary\" (click)=\"SHGLoanRepaymentExportToPdf()\" style=\"margin-left: 65px;\">\r\n                <span>\r\n                    <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                </span>PDF</button>\r\n        </div>\r\n        <div class=\"clearfix\"></div>\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n                    <table datatable class=\"col-md-12 table table-bordered repayment_loan_details_table\" cellspacing=\"0\" width=\"100%\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th rowspan=\"2\">\r\n                                    <span *ngIf=\"lang.en\"> INSTALLMENT NO</span>\r\n                                    <span *ngIf=\"lang.mr\">हफ्त्याचा क्रमांक </span>\r\n                                </th>\r\n                                <th rowspan=\"2\">\r\n                                    <span *ngIf=\"lang.en\">MONTH</span>\r\n                                    <span *ngIf=\"lang.mr\">महिना </span>\r\n                                </th>\r\n                                <th colspan=\"3\" style=\"text-align: center;\">\r\n                                    <span *ngIf=\"lang.en\"> EXPECTED REPAYMENT</span>\r\n                                    <span *ngIf=\"lang.mr\">अपेक्षित परतफेड </span>\r\n                                </th>\r\n                                <th colspan=\"5\" style=\"text-align: center\">\r\n                                    <span *ngIf=\"lang.en\"> ACTUAL REPAYMENT</span>\r\n                                    <span *ngIf=\"lang.mr\"> वास्तविक परतफेड</span>\r\n                                </th>\r\n                                <th rowspan=\"2\">\r\n                                    <span *ngIf=\"lang.en\"> OUTSTANDING AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">उर्वरित रक्कम </span>\r\n                                </th>\r\n                                <th rowspan=\"2\">\r\n                                    <span *ngIf=\"lang.en\">DUE/ PENAULTY AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">दंडाची रक्कम </span>\r\n                                </th>\r\n                                <th rowspan=\"2\" style=\"width:218px;\">\r\n                                    <span *ngIf=\"lang.en\">MARK REPAYMENT</span>\r\n                                    <span *ngIf=\"lang.mr\">परतफेड दर्शवा </span>\r\n                                </th>\r\n                            </tr>\r\n                            <tr class=\"pad_zero\">\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> PRINCIPAL AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">मूळ रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> INTEREST AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">व्याजाची रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">TOTAL PAYABLE AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">भरण्यासाठीची संपूर्ण रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> PRINCIPAL AMOUNT PAID</span>\r\n                                    <span *ngIf=\"lang.mr\">भरलेली मूळ रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> INTEREST AMOUNT PAID</span>\r\n                                    <span *ngIf=\"lang.mr\">भरलेली व्याजाची रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> TOTAL AMOUNT PAID</span>\r\n                                    <span *ngIf=\"lang.mr\">भरलेली पूर्ण रक्कम </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">% AMOUNT PAID</span>\r\n                                    <span *ngIf=\"lang.mr\">देय रक्कम % </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> PAID DATE</span>\r\n                                    <span *ngIf=\"lang.mr\">देय दिनांक </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td colspan=\"10\"></td>\r\n                                <td>{{memberLoanDetails.LoanApprovedAmount | currency: 'INR'}}</td>\r\n                                <td colspan=\"2\"></td>\r\n                            </tr>\r\n                            <tr *ngFor=\"let memberLoanDetail of memLoanRepaymentDetails; let rowIndex=index\">\r\n                                <td># {{rowIndex+1}}</td>\r\n                                <td>{{memberLoanDetail.Date | date: 'dd-MMM-yyyy'}}</td>\r\n                                <td>{{memberLoanDetail.FixedPayableAmt | currency: 'INR'}}</td>\r\n                                <td>{{memberLoanDetail.InterestAmt | currency: 'INR'}}</td>\r\n                                <td>{{memberLoanDetail.TotalPayableAmt | currency: 'INR'}}</td>\r\n                                <td>{{memberLoanDetail.PaidTotalAmt | currency: 'INR'}}</td>\r\n                                <td>{{memberLoanDetail.PaidIntrestAmount | currency: 'INR'}}</td>\r\n                                <td>{{memberLoanDetail.PaidTotalAmt + memberLoanDetail.PaidIntrestAmount | currency: 'INR'}}</td>\r\n                                <td>{{memberLoanDetail.PerTotalAmountPaid}}</td>\r\n                                <td>{{memberLoanDetail.PaidDate | date}}</td>\r\n                                <td>{{memberLoanDetail.OutstandingAmt | currency: 'INR'}}</td>\r\n                                <td>{{memberLoanDetail.FineAmount | currency: 'INR'}}</td>\r\n                                <td style=\"width:22%;text-align:center;\">\r\n                                    <span *ngIf=\"memberLoanDetail.RepaymentDone\">\r\n                                        <a href={{memberLoanDetail.Photo}} target=\"_blank\" class=\"btn btn-primary\">\r\n                                            <span class=\"glyphicon glyphicon-save\"></span>\r\n                                            <span *ngIf=\"lang.en\"> SEE RECEIPT</span>\r\n                                            <span *ngIf=\"lang.mr\">रसीद पहा </span>\r\n                                        </a>\r\n                                        <button type=\"button\" [disabled]=\"memberLoanDetail.RepaymentDone\" class=\"btn btn-primary\">\r\n                                            <span style=\"color: white\" class=\"glyphicon glyphicon-ok\"> </span> &nbsp;DONE</button>\r\n                                    </span>\r\n                                    <span *ngIf=\"this.repaymentId == memberLoanDetail.RepaymentId\">\r\n                                        <button type=\"button\" (click)=\"setRepaymentData(memberLoanDetail, rowIndex)\" class=\"btn btn-primary\" data-toggle=\"modal\"\r\n                                            data-target=\"#repaymentEntry\">MARK REPAYMENT</button>\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <b>\r\n                                        <span *ngIf=\"lang.en\"> TOTAL SUM</span>\r\n                                        <span *ngIf=\"lang.mr\">एकूण बेरीज </span>\r\n                                    </b>\r\n                                </td>\r\n                                <td>-</td>\r\n                                <td>\r\n                                    <b>{{totalLoanAmt | currency: 'INR'}}</b>\r\n                                </td>\r\n                                <td>\r\n                                    <b>{{totalPrinciple | currency: 'INR'}}</b>\r\n                                </td>\r\n                                <td>\r\n                                    <b>{{totalPayable | currency: 'INR'}}</b>\r\n                                </td>\r\n                                <td colspan=\"2\">-</td>\r\n                                <td>{{totalAmtPaid | currency: 'INR'}}</td>\r\n                                <td colspan=\"3\">-</td>\r\n                                <td>{{totalFineAmt | currency: 'INR'}}</td>\r\n                                <td>-</td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- data table end -->\r\n    </div>\r\n</section>\r\n<!-- Modal -->\r\n<div id=\"repaymentEntry\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-lg\" style=\"padding: 5px;\r\n    width: 995px;\r\n    margin-top: 93px;\r\n    margin-left: 272px;\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\"> REPAYMENT ENTRY FORM</span>\r\n                    <span *ngIf=\"lang.mr\">परतफेड भरणा फॉर्म </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <!-- <p>नवीन बचतगट बनवा फॉर्म </p> -->\r\n                <form #repaymentForm=\"ngForm\" class=\"input-group\">\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n                                            <span *ngIf=\"lang.en\"> EXPECTED PRINCIPAL AMOUNT</span>\r\n                                            <span *ngIf=\"lang.mr\">अपेक्षित मूळ रक्कम </span>\r\n                                        </label>\r\n                                        <input type=\"number\" disabled value=\"{{loanRepaymentdata.FixedPayableAmt}}\" class=\"form-control\" id=\"principleAmt\" name=\"principleAmt\"\r\n                                            required maxlength=\"50\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n                                            <span *ngIf=\"lang.en\"> EXPECTED INTEREST AMOUNT</span>\r\n                                            <span *ngIf=\"lang.mr\">अपेक्षित व्याजाची रक्कम </span>\r\n                                        </label>\r\n                                        <input type=\"number\" class=\"form-control custom_btn\" disabled value=\"{{loanRepaymentdata.InterestAmt}}\" id=\"InterestAmt\"\r\n                                            name=\"InterestAmt\" maxlength=\"50\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n                                            <span *ngIf=\"lang.en\"> ACTUAL PRINCIPAL AMOUNT #</span>\r\n                                            <span *ngIf=\"lang.mr\">वास्तविक मूळ रक्कम </span>\r\n                                        </label>\r\n                                        <input type=\"nmuber\" (ngModel)=\"actualPrincipleAmt\" name=\"actualPrincipleAmt\" (input)=\"convertToWords($event.target.value)\"\r\n                                            class=\"form-control\" required maxlength=\"12\" #actualPrincipleAmt=\"ngModel\">\r\n                                        <div *ngIf=\"actualPrincipleAmt.invalid && actualPrincipleAmt.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <div [hidden]=\"!actualPrincipleAmt.hasError('required')\">\r\n                                                <span *ngIf=\"lang.en\">Principal Amount is required !</span>\r\n                                                <span *ngIf=\"lang.mr\"> मूळ रक्कम गरजेची !</span>\r\n                                            </div>\r\n                                            <!-- <div [hidden]=\"!actualPrincipleAmt.hasError('pattern')\">Principle Amount should be only numbers</div>pattern=\"[0-9]*\" -->\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n                                            <span *ngIf=\"lang.en\"> ACTUAL INTEREST AMOUNT</span>\r\n                                            <span *ngIf=\"lang.mr\">वास्तविक व्याजाची रक्कम </span>\r\n                                        </label>\r\n                                        <input type=\"number\" class=\"form-control\" (ngModel)=\"actualIntrestAmt\" (input)=\"convertToWordsForIntrest($event.target.value)\"\r\n                                            name=\"actualIntrestAmt\" required maxlength=\"2\" #actualIntrestAmt=\"ngModel\">\r\n                                        <div *ngIf=\"actualIntrestAmt.invalid && actualIntrestAmt.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <div [hidden]=\"!actualIntrestAmt.hasError('required')\">\r\n                                                <span *ngIf=\"lang.en\"> Intrest Amount is required !</span>\r\n                                                <span *ngIf=\"lang.mr\"> व्याजाची रक्कम गरजेची ! </span>\r\n                                            </div>\r\n                                            <!-- <div [hidden]=\"!actualIntrestAmt.hasError('pattern')\">Intrest Amount should be only numbers</div> pattern=\"[0-9]*\" -->\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n                                            <span *ngIf=\"lang.en\"> DUE/ PENAULTY AMOUNT</span>\r\n                                            <span *ngIf=\"lang.mr\"> दंडाची रक्कम </span>\r\n                                        </label>\r\n                                        <input type=\"number\" (ngModel)=\"fineAmt\" name=\"fineAmt\" class=\"form-control\" required maxlength=\"7\" pattern=\"[0-9]*\" #fineAmt=\"ngModel\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">\r\n                                            <span *ngIf=\"lang.en\"> AMOUNT PAID DATE</span>\r\n                                            <span *ngIf=\"lang.mr\"> रक्कम दिलेला दिनांक </span>\r\n                                            <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                                        </label>\r\n                                        <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"amtPaidDate\" #frDt [options]=\"options\" name=\"amtPaidDate\">\r\n                                        </ng-datepicker>\r\n                                        <!-- <input type=\"date\" (ngModel)=\"amtPaidDate\" class=\"form-control\" id=\"amtPaidDate\" required name=\"amtPaidDate\" #amtPaidDate=\"ngModel\"> -->\r\n                                        <!-- <div *ngIf=\"amtPaidDate.invalid && amtPaidDate.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <div [hidden]=\"!amtPaidDate.hasError('required')\">\r\n                                                <span *ngIf=\"lang.en\">Paid Date amount is required !</span>\r\n                                                <span *ngIf=\"lang.mr\"> रक्कम दिलेला दिनांक गरजेचा ! </span>\r\n                                            </div>\r\n                                        </div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"text\">ATTACH PAYMENT RECEIPT\r\n\r\n                                        </label>\r\n                                        <input class=\"custom_btn\" type=\"file\" ng-bind=\"fileData\" placeholder=\"Upload file\" accept=\".png,.jpeg,.jpg,.doc\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">PAYMENT MODE</span>\r\n                                        <span *ngIf=\"lang.mr\"> रक्कम भरणा मार्ग </span>\r\n                                    </label>\r\n                                    <div class=\"form-group\">\r\n                                        <select class=\"form-control\" (ngModel)=\"selectedPaymentModeId\" id=\"selectedPaymentModeId\" required name=\"selectedPaymentModeId\"\r\n                                            #selectedPaymentModeId=\"ngModel\">\r\n                                            <option [value]=\"1\">Cash At Hand</option>\r\n                                            <option [value]=\"2\">Cash At Bank</option>\r\n                                        </select>\r\n                                        <div *ngIf=\"selectedPaymentModeId.invalid && selectedPaymentModeId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                            <div [hidden]=\"!selectedPaymentModeId.hasError('required')\">\r\n                                                <span *ngIf=\"lang.en\">Please select payment mode !</span>\r\n                                                <span *ngIf=\"lang.mr\"> कृपया रक्कम भरणा मार्ग निवडा ! </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-12\">\r\n                                    <div class=\"modal-footer\">\r\n                                        <button class=\"btn btn-primary pull-left\" type=\"submit\" [disabled]=\"repaymentForm.invalid\"  (click)=\"MarkRepayment(repaymentForm, $event.target.form[6].files[0])\"\r\n                                            data-dismiss=\"modal\" style=\"margin-left: 150px; margin-top: 2px;\">SAVE REPAYMENT ENTRY</button>\r\n                                        <button type=\"button\" id=\"click-button1\" data-dismiss=\"modal\" class=\"pull-right\">CANCLE</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"\">\r\n                                <div class=\"card\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">ACTUAL PRINCIPAL AMOUNT</span>\r\n                                        <span *ngIf=\"lang.mr\"> वास्तविक मूळ रक्कम </span>\r\n                                    </label>\r\n                                    <div class=\"card-header\">\r\n                                        IN ENGLISH\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">\r\n                                            <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 15px\">\r\n                                                <b>{{convertedWordsInEnglish}}</b>\r\n                                            </div>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        मराठी मधे\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">\r\n                                            <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 15px\">\r\n                                                <b>{{convertedWordsInMarathi}}</b>\r\n                                            </div>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        हिंदी में\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">\r\n                                            <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 15px\">\r\n                                                <b>{{convertedWordsInHindi}}</b>\r\n                                            </div>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-3\">\r\n                            <div class=\"\">\r\n                                <div class=\"card\">\r\n                                    <label for=\"text\">ACTUAL INTEREST AMOUNT PAID</label>\r\n                                    <div class=\"card-header\">\r\n                                        IN ENGLISH\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">\r\n                                            <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 15px\">\r\n                                                <b>{{convertedWordsInEnglishForIntrest}}</b>\r\n                                            </div>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        मराठी मधे\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">\r\n                                            <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 15px\">\r\n                                                <b>{{convertedWordsInMarathiForIntrest}}</b>\r\n                                            </div>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"card\">\r\n                                    <div class=\"card-header\">\r\n                                        हिंदी में\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">\r\n                                            <div class=\"alert alert-danger\" role=\"alert\" style=\"font-size: 15px\">\r\n                                                <b>{{convertedWordsInHindiForIntrest}}</b>\r\n                                            </div>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"loanDetails\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\" style=\"padding:5px;width: 730px;\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">MEMBER LOAN DETAILS -\r\n                        <b>LOAN ID - {{memberLoanDetails.LoanId}}</b>\r\n                    </span>\r\n                    <span *ngIf=\"lang.mr\"> सदस्याच्या कर्जाची माहिती -\r\n                        <b>कर्जाचा आयडी - {{memberLoanDetails.LoanId}}</b>\r\n                    </span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <!-- <p>नवीन बचतगट बनवा फॉर्म </p> -->\r\n\r\n                <!-- <div class=\"row\">\r\n                        <div class=\"col-md-4\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"driverPhoto\">SHG SCHEME CODE</label>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-8\">\r\n                            <span>{{shgDetails.SchemeId}}</span>\r\n                        </div>\r\n                    </div> -->\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                <span *ngIf=\"lang.en\">MEMBER FULL NAME</span>\r\n                                <span *ngIf=\"lang.mr\">सदस्याचे पूर्ण नाव </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n\r\n                        <label for=\"text\">{{memberLoanDetails.MemberFirstName}} {{memberLoanDetails.MemberLastName}}\r\n                        </label>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                <span *ngIf=\"lang.en\">SHG NAME</span>\r\n                                <span *ngIf=\"lang.mr\">एसएचजी चे नाव </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">{{memberLoanDetails.SHGName}}\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                <span *ngIf=\"lang.en\">SHG CODE </span>\r\n                                <span *ngIf=\"lang.mr\">एसएचजी क्रमांक </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">{{memberLoanDetails.SHGCode}}\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                <span *ngIf=\"lang.en\">LOAN REQUEST AMOUNT</span>\r\n                                <span *ngIf=\"lang.mr\">विनंती केलेली कर्जाची रक्कम </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">{{memberLoanDetails.LoanAmount}}\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                <span *ngIf=\"lang.en\">LOAN APPROVED AMOUNT</span>\r\n                                <span *ngIf=\"lang.mr\">कर्जाची स्वीकृत रक्कम </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">{{memberLoanDetails.LoanApprovedAmount}}\r\n                                <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                <span *ngIf=\"lang.en\">LOAN APPROVED DATE</span>\r\n                                <span *ngIf=\"lang.mr\">कर्ज मान्य केलेली तारीख </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">{{memberLoanDetails.ApprovedDate | date: 'dd-MMM-yyyy'}}\r\n                                <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                <span *ngIf=\"lang.en\">INTEREST RATE</span>\r\n                                <span *ngIf=\"lang.mr\">कर्जाचा दर </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">{{memberLoanDetails.IntrestRate}}\r\n                                <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                <span *ngIf=\"lang.en\">TENURE (NO. OF. INSTALLMENT)</span>\r\n                                <span *ngIf=\"lang.mr\">कालावधी (एकूण हफ्ते) </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">{{memberLoanDetails.Tenure}}\r\n                                <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                            </label>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                <span *ngIf=\"lang.en\">EFFECTIVE LOAN START DATE</span>\r\n                                <span *ngIf=\"lang.mr\">कर्ज भरणीची सुरवातीची तारीख </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">{{memberLoanDetails.EffectiveStartDate}}\r\n                                <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                            </label>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                <span *ngIf=\"lang.en\">LOAN REASON</span>\r\n                                <span *ngIf=\"lang.mr\">कर्जाचे कारण </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">{{memberLoanDetails.LoanReason}}\r\n                                <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- <button class=\"btn btn-danger\" type=\"submit\" style=\"margin-top:10px;\" data-dismiss=\"modal\">CLOSE</button> -->\r\n\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" id=\"click-button1\" data-dismiss=\"modal\" class=\"pull-right\">\r\n                    <span *ngIf=\"lang.en\">CLOSE</span>\r\n                    <span *ngIf=\"lang.mr\">बंद करा </span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/vo/loan/loanrepayment.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoanRepaymentComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_FileService_file_upload_service__ = __webpack_require__("../../../../../src/app/services/FileService/file_upload.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var LoanRepaymentComponent = (function () {
    function LoanRepaymentComponent(_voservice, _fileUploadService, _access_token, _commonService, _globalURL, _exportToPdf, lang, router, _common_message) {
        this._voservice = _voservice;
        this._fileUploadService = _fileUploadService;
        this._access_token = _access_token;
        this._commonService = _commonService;
        this._globalURL = _globalURL;
        this._exportToPdf = _exportToPdf;
        this.lang = lang;
        this.router = router;
        this._common_message = _common_message;
        this.amtPaidDate = new Date;
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_9_date_fns_locale_en__,
            //minDate: new Date(Date.now()), // Minimal selectable date
            minDate: new Date("2016-03-03"),
            //maxDate: new Date(Date.now()),  // Maximal selectable date
            barTitleIfEmpty: 'Click to select a date'
        };
        this.remainingLoamAmount = 0;
        this.loanId = 0;
        this.repaymentId = 0;
        this.loanRepaymentdata = {
            'PaidTotalAmt': null, 'FixedPayableAmt': null, 'InterestAmt': null, 'TotalPayableAmt': null,
            'PaidIntrestAmount': null, 'FineAmount': null,
            'LoanId': null, 'RepaymentId': null, 'Tenure': null, 'InterestRate': null,
            'PaymentMode': 0,
            'PaidDate': null
        };
        this._globalURL.isLoading = false;
        this.memLoanRepaymentDetails = null;
        this.memberLoanDetails = null;
        this.SHGNameAndId = null;
        this.selectedShgId = null;
        this.membersNameAndId = null;
        this.selectedMemberId = null;
        this.setLoanAmountCountToZero();
        if (sessionStorage.getItem("access_token") == "")
            router.navigate(['../login']);
    }
    LoanRepaymentComponent.prototype.ngOnInit = function () {
        this.amount = this._globalURL.loanAmount;
        //alert(this._globalURL.loanAmount);
        // this.loanSHGLoanData()
        this._globalURL.isLoading = true;
        this.loadLoanRepayment();
        this.loanLoanData(this._globalURL.selectedLoanId);
    };
    LoanRepaymentComponent.prototype.loanLoanData = function (loanId) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.GET_LOAN_DETAILS_BY_LOAN_ID + loanId, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true) {
                _this.memberLoanDetails = res.Data;
                _this.remainingLoamAmount = _this.memberLoanDetails.LoanAmount - _this.memberLoanDetails.LoanApprovedAmount;
            }
            _this._globalURL.isLoading = false;
        });
    };
    LoanRepaymentComponent.prototype.setLoanAmountCountToZero = function () {
        this.totalLoanAmt = 0;
        this.totalPayable = 0;
        this.totalFineAmt = 0;
        this.totalPrinciple = 0;
        this.totalFineAmt = 0;
        this.totalAmtPaid = 0;
    };
    LoanRepaymentComponent.prototype.loadLoanRepayment = function () {
        var _this = this;
        debugger;
        this.totalLoanAmt = 0;
        this.totalPayable = 0;
        this.totalPrinciple = 0;
        this.totalFineAmt = 0;
        this.totalAmtPaid = 0;
        this.setLoanAmountCountToZero();
        this._voservice.get((this._globalURL.GET_REPAYMENT + this._globalURL.selectedLoanId), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.memLoanRepaymentDetails = res.Data;
                _this.loanId = res.Data[0].LoanId;
                for (var item in res.Data) {
                    if (!res.Data[item].RepaymentDone) {
                        _this.repaymentId = res.Data[item].RepaymentId;
                        break;
                    }
                }
                for (var item in res.Data) {
                    debugger;
                    _this.memLoanRepaymentDetails[item].PerTotalAmountPaid = _this.memLoanRepaymentDetails[item].PerTotalAmountPaid != null ? _this.memLoanRepaymentDetails[item].PerTotalAmountPaid.toString().split('.')[0] : 0;
                    _this.totalLoanAmt = _this.totalLoanAmt + res.Data[item].FixedPayableAmt;
                    _this.totalPayable = _this.totalPayable + res.Data[item].TotalPayableAmt;
                    _this.totalPrinciple = _this.totalPrinciple + res.Data[item].InterestAmt;
                    _this.totalFineAmt = _this.totalFineAmt + res.Data[item].FineAmount;
                    _this.totalAmtPaid = _this.totalAmtPaid + res.Data[item].PaidTotalAmt + res.Data[item].PaidIntrestAmount;
                    debugger;
                }
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            alert("catch block");
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    LoanRepaymentComponent.prototype.convertToWords = function (num) {
        this.convertedWordsInEnglish = this._commonService.convertDigitToWordsInEnglish(num);
        this.convertedWordsInHindi = this._commonService.convertDigitToWordsInHindi(num);
        this.convertedWordsInMarathi = this._commonService.convertDigitToWordsInMarathi(num);
    };
    LoanRepaymentComponent.prototype.convertToWordsForIntrest = function (num) {
        this.convertedWordsInEnglishForIntrest = this._commonService.convertDigitToWordsInEnglish(num);
        this.convertedWordsInHindiForIntrest = this._commonService.convertDigitToWordsInHindi(num);
        this.convertedWordsInMarathiForIntrest = this._commonService.convertDigitToWordsInMarathi(num);
    };
    LoanRepaymentComponent.prototype.save = function (data) {
        var _this = this;
        this.setLoanAmountCountToZero();
        // this.memLoanRepaymentDetails.length = -1;
        this._globalURL.isLoading = true;
        this._voservice.get((this._globalURL.CALCULATE_REPAYMENT + "?amount=" + this.amount + "&interest=" + data.interest + "&tenure=" + data.tenure + "&effectiveDate=" + data.effectiveDate), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.status == 200) {
                _this.memLoanRepaymentDetails = res.Data;
                for (var item in res.Data) {
                    _this.totalLoanAmt = _this.totalLoanAmt + res.Data[item].FixedPayableAmt;
                    _this.totalPayable = _this.totalPayable + res.Data[item].TotalPayableAmt;
                    _this.totalPrinciple = _this.totalPrinciple + res.Data[item].InterestAmt;
                    debugger;
                }
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.LoanAppSaveErrorMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    LoanRepaymentComponent.prototype.setRepaymentData = function (data, currentInstallment) {
        this.loanRepaymentdata.FixedPayableAmt = data.FixedPayableAmt;
        this.loanRepaymentdata.InterestAmt = data.InterestAmt;
        this.loanRepaymentdata.TotalPayableAmt = data.TotalPayableAmt;
        this.loanRepaymentdata.LoanId = data.LoanId;
        this.loanRepaymentdata.RepaymentId = data.RepaymentId;
        this.loanRepaymentdata.Tenure = (currentInstallment + 1);
        debugger;
    };
    LoanRepaymentComponent.prototype.MarkRepayment = function (Data, metadata) {
        var _this = this;
        debugger;
        var _RepaymentId = this.loanRepaymentdata.RepaymentId;
        this.loanRepaymentdata.PaidTotalAmt = Data.value.actualPrincipleAmt;
        this.loanRepaymentdata.PaidIntrestAmount = Data.value.actualIntrestAmt;
        this.loanRepaymentdata.FineAmount = Data.value.fineAmt == undefined ? 0 : Data.value.fineAmt;
        this.loanRepaymentdata.PaymentMode = Data.value.selectedPaymentModeId;
        this.loanRepaymentdata.PaidDate = Data.value.amtPaidDate;
        this._globalURL.isLoading = true;
        this.Loanform = Data.value;
        this._voservice.post(this._globalURL.MARK_REPAYMENT, this.loanRepaymentdata, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status === 200) {
                    var formData = new FormData();
                    formData.append('files', metadata);
                    formData.append('RefId', _RepaymentId);
                    _this._fileUploadService.post((_this._globalURL.ADD_PHOTO + "?folderName=Loan" + "&type=" + _this._globalURL.LOAN_REPAYMENT_PHOTO + "&RefId=" + _RepaymentId), formData, sessionStorage.getItem("access_token")).then(function (res) {
                        if (res.status === 401) {
                            sessionStorage.clear();
                            _this.showErrorMessage = true;
                            _this.message = _this._common_message.error401message;
                            setInterval(function () {
                                _this.showErrorMessage = false;
                            }, 5000);
                            _this._globalURL.isLoading = false;
                            _this.router.navigate(['../login']);
                        }
                        if (res.Status == undefined) {
                            if (res.status == 200) {
                                Data.control.reset();
                                _this.loadLoanRepayment();
                                _this._globalURL.isLoading = false;
                            }
                            else {
                                _this.showWarningMessage = true;
                                _this.message = _this._common_message.MarkRepaymentErrMsg;
                                setInterval(function () {
                                    _this.showWarningMessage = false;
                                }, 5000);
                                _this.loadLoanRepayment();
                                _this._globalURL.isLoading = false;
                            }
                        }
                        else {
                            _this.showWarningMessage = true;
                            _this.message = _this._common_message.LoanAppSaveErrorMsg;
                            setInterval(function () {
                                _this.showWarningMessage = false;
                            }, 5000);
                            _this.loadLoanRepayment();
                            _this._globalURL.isLoading = false;
                        }
                    }).catch(function (err) {
                        _this.showErrorMessage = true;
                        console.log(res.error);
                        _this.message = _this._common_message.CatchBlockMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this.loadLoanRepayment();
                        _this._globalURL.isLoading = false;
                    });
                    _this._globalURL.isLoading = false;
                    _this.message = _this._common_message.MarkRepaymentMsg;
                    _this.showSuccessMessage = true;
                    setInterval(function () {
                        _this.showSuccessMessage = false;
                    }, 5000);
                    _this.loadLoanRepayment();
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.MarkRepaymentErrMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this.loadLoanRepayment();
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.MarkRepaymentErrMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this.loadLoanRepayment();
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this.loadLoanRepayment();
            _this._globalURL.isLoading = false;
        });
    };
    LoanRepaymentComponent.prototype.UpdateLoan = function (remainingAmt, loanId) {
        var _this = this;
        debugger;
        this.setLoanAmountCountToZero();
        //        this.LoanDetails.LoanAmount = data.amount;
        var loanData = {
            'LoanApprovedAmount': remainingAmt,
            'LoanId': loanId
        };
        // this.Action;
        // this.LoanId;
        debugger;
        this._globalURL.isLoading = true;
        this._voservice.post(this._globalURL.UPDATE_LOAN_AMT, loanData, sessionStorage.getItem("access_token"))
            .then(function (response) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.router.navigate(['../login']);
            }
            if (response.Status == undefined) {
                if (response.status == 200) {
                    var res = JSON.parse(response._body);
                    if (res.Status == true) {
                        _this.memLoanRepaymentDetails = res.Data;
                        _this.loanLoanData(loanId);
                        _this._globalURL.isLoading = false;
                        for (var item in res.Data) {
                            if (!res.Data[item].RepaymentDone) {
                                _this.repaymentId = res.Data[item].RepaymentId;
                                break;
                            }
                        }
                        for (var item in res.Data) {
                            _this.totalLoanAmt = _this.totalLoanAmt + res.Data[item].FixedPayableAmt;
                            _this.totalPayable = _this.totalPayable + res.Data[item].TotalPayableAmt;
                            _this.totalPrinciple = _this.totalPrinciple + res.Data[item].InterestAmt;
                            _this.totalFineAmt = _this.totalFineAmt + res.Data[item].FineAmount;
                            _this.totalAmtPaid = _this.totalAmtPaid + res.Data[item].PaidTotalAmt + res.Data[item].PaidIntrestAmount;
                            debugger;
                        }
                        _this._globalURL.isLoading = false;
                        _this.message = _this._common_message.LoanUpdateMsg;
                        _this.showSuccessMessage = true;
                        setInterval(function () {
                            _this.showSuccessMessage = false;
                        }, 6000);
                    }
                    else {
                        _this.showWarningMessage = true;
                        _this.message = _this._common_message.WarningMsg;
                        setInterval(function () {
                            _this.showWarningMessage = false;
                        }, 5000);
                        _this._globalURL.isLoading = false;
                    }
                }
            }
            //this.loanSHGLoanData(this.selectedLoanStatus);
        })
            .catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    LoanRepaymentComponent.prototype.SHGLoanRepaymentExportToPdf = function () {
        this._globalURL.isLoading == true;
        var totalamountData = {
            "totalLoanAmount": this.totalLoanAmt.toString(),
            "totalPaybleAmount": this.totalPayable.toString(),
            "totalPrincipleAmount": this.totalPrinciple.toString(),
            "totalFineAmount": this.totalFineAmt.toString(),
            "totalPaidAmount": this.totalAmtPaid.toString()
        };
        this._exportToPdf.SHGLoanRepaymentExportToPdf(this.memLoanRepaymentDetails, totalamountData, this.memberLoanDetails);
        this._globalURL.isLoading == false;
    };
    LoanRepaymentComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/loan/loan.repayment.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_5__services_FileService_file_upload_service__["a" /* FileUploadService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_6__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_8__services_reports_exportpdf__["a" /* ExportToPDF */],
            __WEBPACK_IMPORTED_MODULE_7__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_10__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], LoanRepaymentComponent);
    return LoanRepaymentComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/member/member.component.html":
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"_globalURL.isLoading\">\r\n    <loading-selector>\r\n    </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n    <message-selector [message]=\"message\">\r\n    </message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n    <warning-message-selector [message]=\"message\">\r\n    </warning-message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n    <error-message-selector [message]=\"message\">\r\n    </error-message-selector>\r\n</div>\r\n<!-- Content Header (Page header) -->\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\" style=\"padding:3px;\">\r\n            <div class=\"col-md-3\">\r\n                <label class=\"heading-title\">\r\n                    <span *ngIf=\"lang.en\"> MEMBER FORM</span>\r\n                    <span *ngIf=\"lang.mr\"> सदस्य फॉर्म</span>\r\n                </label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n        <div class=\"col-md-1\" style=\"padding-left:0px;\">\r\n            <button routerLink=\"/vo/shg_master\" style=\"font-size: 14\" class=\"btn btn-primary\">\r\n                <span *ngIf=\"lang.en\"> BACK</span>\r\n                <span *ngIf=\"lang.mr\"> माघे</span>\r\n            </button>\r\n        </div>\r\n        <div class=\"col-md-3\" style=\"padding-left:0px;\">\r\n            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#bachat_gat\" (click)=\"getNextCode(5)\">\r\n                <span *ngIf=\"lang.en\"> CREATE NEW MEMBER</span>\r\n                <span *ngIf=\"lang.mr\"> नवीन सदस्य तयार करा</span>\r\n            </button>\r\n        </div>\r\n        <div class=\"col-md-5\">\r\n            <div class=\"col-md-4\">\r\n                <label>\r\n                    <span *ngIf=\"lang.en\"> SELECT SHG</span>\r\n                    <span *ngIf=\"lang.mr\"> एसएचजी निवडा </span>\r\n                </label>\r\n            </div>\r\n            <div class=\"col-md-8\">\r\n                <select class=\"form-control\" (change)=\"getMemberDetails(selectedShgId)\" [(ngModel)]=\"selectedShgId\" style=\"width:100%;\">\r\n                    <option *ngFor=\"let shgNameAndId_ of shgNameAndId\" [value]=\"shgNameAndId_.Key\">{{shgNameAndId_.Value}}</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <!-- <a type=\"\" class=\"pull-right downloan_memberform\" (click)=\"downloadPDF()\">\r\n              <img src=\"http://www.pvhc.net/img22/ropsqludvtzoaeeitoez.jpg\" width=\"8%\"> DOWNLOAD MEMBER FORM </a> -->\r\n            <button title=\"View details\" class=\"btn btn-primary\" (click)=\"downloadPDF()\" style=\"float:right;\">\r\n                <span>\r\n                    <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n                </span>\r\n                <span *ngIf=\"lang.en\">DOWNLOAD MEMBER FORM</span>\r\n                <span *ngIf=\"lang.mr\">डाऊनलोड फॉर्म</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n</section>\r\n<!-- member table content -->\r\n<section class=\"content\">\r\n    <div class=\"row\" style=\"margin-top:7px;\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"box box-default\">\r\n                <div class=\"box-body\">\r\n                    <span *ngIf=\"!memberModel_\">\r\n                        No Data\r\n                    </span>\r\n                    <table datatable id=\"memberTable\" class=\"table table-bordered loan_table_common memberTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> SR.NO.</span>\r\n                                    <span *ngIf=\"lang.mr\"> अं.क्र. </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> MEMBER NAME</span>\r\n                                    <span *ngIf=\"lang.mr\"> सदस्याचे नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> MEMBER CODE</span>\r\n                                    <span *ngIf=\"lang.mr\"> सदस्य कोड </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> DESIGNATION</span>\r\n                                    <span *ngIf=\"lang.mr\"> पद </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> CATEGORY</span>\r\n                                    <span *ngIf=\"lang.mr\">सामाजिक प्रवर्ग </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> DATE OF JOINING</span>\r\n                                    <span *ngIf=\"lang.mr\"> गटात सामील होण्याचा दिनांक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> CONTACT NUMBER</span>\r\n                                    <span *ngIf=\"lang.mr\"> संपर्क क्रमांक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> ACTION</span>\r\n                                    <span *ngIf=\"lang.mr\"> कृती</span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class=\"manage_data\">\r\n                            <tr *ngFor=\"let member of memberModel_; let rowIndex=index\">\r\n                                <td>{{rowIndex+1}}</td>\r\n                                <td>{{member.FirstName | uppercase}} {{member.MiddleName | uppercase}} {{member.LastName | uppercase}}</td>\r\n                                <td>{{member.Code}}</td>\r\n                                <td>{{member.DesignationName}}</td>\r\n                                <td>{{member.Caste}}</td>\r\n                                <td>{{member.DateOfJoin | date}}</td>\r\n                                <td>{{member.MobileNumber}}</td>\r\n                                <td style=\"width:20%;text-align:center;\">\r\n                                    <button title=\"View Details\" class=\"Lastbutton\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#viewMemberForm\"\r\n                                        (click)='viewMemberDetail(member.Id)'>\r\n                                        <span *ngIf=\"lang.en\"> VIEW</span>\r\n                                        <span *ngIf=\"lang.mr\"> पहा</span>\r\n                                    </button>\r\n                                    <button title=\"Update Details\" class=\"Lastbutton\" data-toggle=\"modal\" class=\"btn btn-primary\" data-target=\"#UpdateMemberFormModel\"\r\n                                        (click)='setUpdatedValues(member)'>\r\n                                        <span *ngIf=\"lang.en\">UPDATE</span>\r\n                                    </button>\r\n                                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteMemberForm\" (click)=\"fordelete(member)\">\r\n                                        <span *ngIf=\"lang.en\">DELETE</span>\r\n                                        <span *ngIf=\"lang.mr\">काढून टाका </span>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- data table end -->\r\n</section>\r\n<!-- Modal -->\r\n<div id=\"bachat_gat\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\"> NEW MEMBER FORM</span>\r\n                    <span *ngIf=\"lang.mr\"> नवीन सदस्य फॉर्म</span>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <span>\r\n                        <small>\r\n                            <span *ngIf=\"lang.en\"> NEW MEMBER CODE -</span>\r\n                            <span *ngIf=\"lang.mr\"> नवीन सदस्य कोड -</span>\r\n                            <b> {{this.nextCode}}</b>\r\n                        </small>\r\n                    </span>\r\n                </h4>\r\n                <!-- <h5>\r\n                  NEW MEMBER CODE -\r\n                  <b> {{this.nextCode}}</b>\r\n                </h5> -->\r\n            </div>\r\n            <div class=\"\" style=\"padding-left:15px;padding-right:15px;padding-bottom:15px;\">\r\n                <!-- <p style=\"font-size:21px;\">Personal Detail</p> -->\r\n                <div class=\"\">\r\n                    <form #memForm=\"ngForm\" id=\"bacgfat\" class=\"input-group\" novalidate>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\"> FIRST NAME</span>\r\n                                        <span *ngIf=\"lang.mr\"> पहिले नाव</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" FirstName (ngModel)=\"FirstName\" class=\"form-control\" id=\"FirstName\" name=\"FirstName\" required #FirstName=\"ngModel\"\r\n                                        maxlength=\"25\">\r\n                                    <div *ngIf=\"FirstName.invalid && FirstName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!FirstName.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\"> PLEASE ENTER FIRST NAME !</span>\r\n                                            <span *ngIf=\"lang.mr\">कृपया पहिले नाव भरा </span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!FirstName.hasError('pattern')\">Name should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\"> MIDDLE NAME / FATHER NAME</span>\r\n                                        <span *ngIf=\"lang.mr\"> मधले नाव /वडिलांचे नाव</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"MiddleName\" class=\"form-control\" id=\"MiddleName\" name=\"MiddleName\" required #MiddleName=\"ngModel\"\r\n                                        maxlength=\"25\">\r\n                                    <div *ngIf=\"MiddleName.invalid && MiddleName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!MiddleName.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">PLEASE ENTER MIDDLE NAME / FATHER NAME !</span>\r\n                                            <span *ngIf=\"lang.mr\"> कृपया मधले नाव /वडिलांचे नाव भरा !</span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!MiddleName.hasError('pattern')\">Name should be only Letters</div>  pattern=\"[A-Za-z]*\" -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">LAST NAME </span>\r\n                                        <span *ngIf=\"lang.mr\">शेवटचे नाव </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input class=\"form-control\" (ngModel)=\"LastName\" name=\"LastName\" required maxlength=\"25\" #LastName=\"ngModel\">\r\n                                    <div *ngIf=\"LastName.invalid && LastName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!LastName.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\"> PLEASE ENTER lAST NAME ! </span>\r\n                                            <span *ngIf=\"lang.mr\">कृपया शेवटचे नाव भरा ! </span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!LastName.hasError('pattern')\">LastName should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\"> MOTHER NAME </span>\r\n                                        <span *ngIf=\"lang.mr\">आईचे नाव </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input class=\"form-control\" (ngModel)=\"MotherName\" name=\"MotherName\" required maxlength=\"25\" #MotherName=\"ngModel\">\r\n                                    <div *ngIf=\"MotherName.invalid && MotherName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!MotherName.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\"> PLEASE ENTER MOTHER NAME ! </span>\r\n                                            <span *ngIf=\"lang.mr\">कृपया आईचे नाव भरा ! </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- <select class=\"form-control\" name=\"VillageId\" id=\"village\" [(ngModel)]=\"shgUpdateModel.VillageId\" required #village1=\"ngModel\">\r\n                            <option *ngFor=\"let village of villagess\" [value]=\"village.Key\">{{village.Value}}</option>\r\n                          </select> -->\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">GENDER</span>\r\n                                        <span *ngIf=\"lang.mr\">लिंग</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select (ngModel)=\"Gender\" name=\"GenderId\" class=\"form-control\" id=\"sel1\" required #Gender=\"ngModel\">\r\n                                        <option *ngFor=\"let item of gender\" [value]=\"item.Key\" selected>{{item.Value}}</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"Gender.invalid && Gender.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\">Please Select Gender !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया लिंग निवडा !</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">MARITAL STATUS</span>\r\n                                        <span *ngIf=\"lang.mr\">वैवाहिक स्थिती</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select (ngModel)=\"MaritalStatusId\" class=\"form-control\" name=\"MaritalStatusId\" required #MaritalStatusId=\"ngModel\">\r\n                                        <option *ngFor=\"let getMaritalStatus of maritalStatus\" [value]=\"getMaritalStatus.Key\">{{getMaritalStatus.Value}}</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"MaritalStatusId.invalid && MaritalStatusId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\">Please Select Marital Status !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया वैवाहिक स्थिती निवडा !</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>\r\n                                        <span *ngIf=\"lang.en\"> PERSONAL ADDRESS </span>\r\n                                        <span *ngIf=\"lang.mr\"> पत्ता </span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <textarea type=\"text\" (ngModel)=\"Address\" class=\"form-control\" id=\"Address\" name=\"Address\" required maxlength=\"200\" #Address=\"ngModel\"></textarea>\r\n                                    <div *ngIf=\"Address.invalid && Address.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        Please Enter Personal Address.!\r\n                                        <span *ngIf=\"lang.en\">Please Enter Personal Address !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया पत्ता भरा !</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label>\r\n                                        <span *ngIf=\"lang.en\">VILLAGE</span>\r\n                                        <span *ngIf=\"lang.mr\">गाव</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select class=\"form-control\" name=\"VillageId\" id=\"Village\" (ngModel)=\"Village\" required #Village=\"ngModel\">\r\n                                        <option *ngFor=\"let item of villages\" [value]=\"item.Key\">{{item.Value}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">DISTRICT</span>\r\n                                        <span *ngIf=\"lang.mr\">जिल्हा</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select (ngModel)=\"districtId\" name=\"DistrictId\" (change)=\"getselectTaluka(districtId.viewModel)\" class=\"form-control\" id=\"districtId\"\r\n                                        required #districtId=\"ngModel\">\r\n                                        <option *ngFor=\"let dis of ditricts\" [value]=\"dis.Id\">{{dis.Name}}</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"districtId.invalid && districtId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\">Please Select District !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया जिल्हा निवडा !</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n\r\n                                        <span *ngIf=\"lang.en\">TALUKA</span>\r\n                                        <span *ngIf=\"lang.mr\">तालुका</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select (ngModel)=\"Taluka\" name=\"TalukaId\" class=\"form-control\" required #Taluka=\"ngModel\">\r\n                                        <option *ngFor=\"let getAllTaluka of talukas\" [value]=\"getAllTaluka.Key\">{{getAllTaluka.Value}}</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"Taluka.invalid && Taluka.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\">Please Select Taluka !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया तालुका निवडा !</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"number\">\r\n                                        <span *ngIf=\"lang.en\">PIN CODE</span>\r\n                                        <span *ngIf=\"lang.mr\">पिन कोड</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"PinCode\" class=\"form-control\" id=\"PinCode\" name=\"PinCode\" required maxlength=\"10\" #PinCode=\"ngModel\">\r\n                                    <div *ngIf=\"PinCode.invalid && PinCode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!PinCode.hasError('required')\"> Please Enter Pin Code !</div>\r\n                                        <span *ngIf=\"lang.en\">Please Enter Pin Code !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया पिन कोड भरा !</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n\r\n                                        <span *ngIf=\"lang.en\">CONTACT NUMBER</span>\r\n                                        <span *ngIf=\"lang.mr\">संपर्क</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"MobileNumber\" class=\"form-control\" id=\"MobileNumber\" name=\"MobileNumber\" required #MobileNumber=\"ngModel\"\r\n                                        maxlength=\"12\">\r\n                                    <div *ngIf=\"MobileNumber.errors && (MobileNumber.dirty || MobileNumber.touched)\" class=\"alert alert-danger\">\r\n                                        <div [hidden]=\"!MobileNumber.errors.required\">Contact should be requierd</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"date\">\r\n                                        <span *ngIf=\"lang.en\">DATE OF BIRTH</span>\r\n                                        <span *ngIf=\"lang.mr\">जन्मतारीख</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"date\" (ngModel)=\"DateOfBirth\" class=\"form-control\" id=\"DateOfBirth\" name=\"DateOfBirth\" required #DateOfBirth=\"ngModel\">\r\n                                    <div *ngIf=\"DateOfBirth.invalid && DateOfBirth.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        Please Select Date Of Birth !\r\n                                        <span *ngIf=\"lang.en\">Please Select Date Of Birth !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया जन्मतारिख निवडा !</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">EDUCATION</span>\r\n                                        <span *ngIf=\"lang.mr\">शिक्षण</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\"></span>\r\n                                    </label>\r\n                                    <select (ngModel)=\"Education\" name=\"EducationId\" class=\"form-control\" id=\"sel1\" required #Education=\"ngModel\">\r\n                                        <option *ngFor=\"let item of education\" [value]=\"item.Key\">{{item.Value}}</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"Education.invalid && Education.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!BankName.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Please Select Education !</span>\r\n                                            <span *ngIf=\"lang.mr\">कृपया शिक्षण निवडा !</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">OCCUPATION/ PROFFESSION</span>\r\n                                        <span *ngIf=\"lang.mr\">व्यवसाय</span>\r\n                                    </label>\r\n                                    <select (ngModel)=\"OccupationId\" name=\"OccupationId\" class=\"form-control\" required #OccupationId=\"ngModel\">\r\n                                        <option *ngFor=\"let getAllOccupation of Occupations\" [value]=\"getAllOccupation.Key\">{{getAllOccupation.Value}}</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"OccupationId.invalid && OccupationId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\">Please Select Occupation !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया व्यवसाय निवडा !</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">SOCIAL CATEGORY</span>\r\n                                        <span *ngIf=\"lang.mr\">सामाजिक प्रवर्ग</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select (ngModel)=\"CasteId\" name=\"CasteId\" class=\"form-control\" id=\"sel1\" required #CasteId=\"ngModel\">\r\n                                        <option *ngFor=\"let getAllCast of Casts\" [value]=\"getAllCast.Key\">{{getAllCast.Value}}</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"CasteId.invalid && CasteId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\"> Please Select Social Category ! </span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया सामाजिक प्रवर्ग निवडा ! </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">ECONOMIC CATEGORY</span>\r\n                                        <span *ngIf=\"lang.mr\">आर्थिक प्रवर्ग</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select (ngModel)=\"EconomicCategory\" name=\"EconomicCategoryId\" class=\"form-control\" id=\"EconomicCategory\" required #EconomicCategory=\"ngModel\">\r\n                                        <option *ngFor=\"let item of EcoCategory\" [value]=\"item.Key\">{{item.Value}}</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"EconomicCategory.invalid && EconomicCategory.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\"> Please Select Economic Category ! </span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया आर्थिक प्रवर्ग निवडा ! </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">RATION CARD</span>\r\n                                        <span *ngIf=\"lang.mr\">रेशन कार्ड</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select (ngModel)=\"RationCard\" name=\"RationCardId\" class=\"form-control\" id=\"RationCard\" required #RationCard=\"ngModel\">\r\n                                        <option *ngFor=\"let item of rationcard\" [value]=\"item.Key\">{{item.Value}}</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"RationCard.invalid && RationCard.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\">Please Select RationCard !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया रेशन कार्ड निवडा !</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">ADHAR CARD NUMBER</span>\r\n                                        <span *ngIf=\"lang.mr\">आधार कार्ड नंबर</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"AdharNumber\" class=\"form-control\" id=\"AdharNumber\" maxlength=\"20\" name=\"AdharNumber\" required\r\n                                        #AdharNumber=\"ngModel\">\r\n                                    <div *ngIf=\"AdharNumber.invalid && AdharNumber.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!AdharNumber.hasError('required')\">Please Entre Adhar Number !</div>\r\n                                        <!-- <div [hidden]=\"!AdharNumber.hasError('pattern')\">AdharNumber should be only Numbers</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">PAN CARD NUMBER</span>\r\n                                        <span *ngIf=\"lang.mr\">पॅन कार्ड नंबर</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"PANNumber\" class=\"form-control\" id=\"PANNumber\" required maxlength=\"20\" name=\"PANNumber\" #PANNumber=\"ngModel\">\r\n                                    <div *ngIf=\"PANNumber.invalid && PANNumber.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!PANNumber.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">\r\n                                                Please Entre Pan Number !\r\n                                            </span>\r\n                                            <span *ngIf=\"lang.mr\">कृपया पॅन कार्ड नंबर भरा ! </span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!AdharNumber.hasError('pattern')\">AdharNumber should be only Numbers</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"date\">\r\n                                        <span *ngIf=\"lang.en\">SHG JOINING DATE</span>\r\n                                        <span *ngIf=\"lang.mr\">एसएचजी सामील सामील होण्याचा दिनांक</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"date\" (ngModel)=\"DateOfJoin\" class=\"form-control\" id=\"DateOfJoin\" name=\"DateOfJoin\" required #DateOfJoin=\"ngModel\">\r\n                                    <div *ngIf=\"DateOfJoin.invalid && DateOfJoin.touched\" class=\"alert-danger comman-error-mesage\">\r\n\r\n                                        <span *ngIf=\"lang.en\">Please Select Date Of Join !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया एसएचजी जॉयनिंग तारीख निवडा !</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">DESIGNATION</span>\r\n                                        <span *ngIf=\"lang.mr\">पद</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <select (ngModel)=\"DesignationId\" name=\"DesignationId\" class=\"form-control\" required id=\"DesignationName\" #DesignationId=\"ngModel\">\r\n                                        <option *ngFor=\"let item of Designations\" [value]=\"item.Key\">{{item.Value}}</option>\r\n                                    </select>\r\n                                    <div *ngIf=\"DesignationId.invalid && DesignationId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\">Please Select Designation Name !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया पद निवडा !</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">SHARE AMOUNT</span>\r\n                                        <span *ngIf=\"lang.mr\">वितरीत रक्कम</span>\r\n                                        <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"ShareAmount\" class=\"form-control\" id=\"ShareAmount\" name=\"ShareAmount\" maxlength=\"4\" #ShareAmount=\"ngModel\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">BANK NAME</span>\r\n                                        <span *ngIf=\"lang.mr\">बँकेचे नाव</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"BankName\" class=\"form-control\" id=\"BankName\" name=\"BankName\" required maxlength=\"20\" #BankName=\"ngModel\">\r\n                                    <div *ngIf=\"BankName.invalid && BankName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!BankName.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Please Entre Bank Name !</span>\r\n                                            <span *ngIf=\"lang.mr\">कृपया बँकेचे नाव भरा !</span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!BankName.hasError('pattern')\">BankName should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <!-- <p style=\"font-size:21px;margin-top:9px;margin-left:7px;\">Bank Detail</p> -->\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">BRANCH NAME</span>\r\n                                        <span *ngIf=\"lang.mr\">शाखाचे नाव</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"BranchName\" class=\"form-control\" id=\"BranchName\" name=\"BranchName\" required maxlength=\"20\"\r\n                                        #BranchName=\"ngModel\">\r\n                                    <div *ngIf=\"BranchName.invalid && BranchName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!BranchName.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Please Enter Branch Name !</span>\r\n                                            <span *ngIf=\"lang.mr\">कृपया ब्रांचचे नाव भरा !</span>\r\n                                        </div>\r\n                                        <!-- <div [hidden]=\"!BranchName.hasError('pattern')\">BranchName should be only Letters</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"from-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">PERSONAL BANK A/C NUMBER</span>\r\n                                        <span *ngIf=\"lang.mr\">वैयक्तिक बँक खाते क्रमांक</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" [(ngModel)]=\"AccountNumber\" class=\"form-control\" id=\"AccountNumber\" name=\"AccountNumber\" required maxlength=\"20\"\r\n                                        #AccountNumberhash=\"ngModel\">\r\n                                    <div *ngIf=\"AccountNumberhash.invalid && AccountNumberhash.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!AccountNumberhash.hasError('required')\">\r\n                                            <span *ngIf=\"lang.en\">Account Number is required !</span>\r\n                                            <span *ngIf=\"lang.mr\">खाते क्रमांक गरजेचा !</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"from-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">CONFIRM BANK A/C NUMBER</span>\r\n                                        <span *ngIf=\"lang.mr\">खाते क्रमांकाची पुष्टी करा</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" [(ngModel)]=\"AccountNumber_\" class=\"form-control\" id=\"AccountNumber\" name=\"AccountNumber_\" required maxlength=\"20\"\r\n                                        #AccountNumberhash_=\"ngModel\">\r\n                                    <div *ngIf=\"AccountNumberhash_.invalid && AccountNumberhash_.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <div [hidden]=\"!AccountNumberhash_.hasError('required')\">Account Number is required</div>\r\n                                        <!-- <div [hidden]=\"!AccountNumber_.hasError('pattern')\">Account Number should be only numbers</div> -->\r\n                                    </div>\r\n                                    <div *ngIf=\"AccountNumber != AccountNumber_\" class=\"alert-danger comman-error-mesage\">\r\n                                        Account Number is not match with Confirm Account Number !\r\n                                        <!-- <div [hidden]=\"!AccountNumber_.hasError('pattern')\">Account Number should be only numbers</div> -->\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">IFSC CODE</span>\r\n                                        <span *ngIf=\"lang.mr\">आयएफएससी कोड</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input type=\"text\" (ngModel)=\"IFSCCode\" class=\"form-control\" id=\"IFSCCode\" name=\"IFSCCode\" required #IFSCCode=\"ngModel\" maxlength=\"20\">\r\n                                    <div *ngIf=\"IFSCCode.invalid && IFSCCode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\">Please Enter IFSC Code !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया आयएफएससी कोड भरा ! </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        <span *ngIf=\"lang.en\">BANK ADDRESS</span>\r\n                                        <span *ngIf=\"lang.mr\">बँकचा पत्ता</span>\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <textarea type=\"text\" (ngModel)=\"BankAddress\" class=\"form-control\" id=\"BankAddress\" name=\"BankAddress\" required maxlength=\"200\"\r\n                                        #BankAddress=\"ngModel\"></textarea>\r\n                                    <div *ngIf=\"BankAddress.invalid && BankAddress.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\">Please Enter Bank Address !</span>\r\n                                        <span *ngIf=\"lang.mr\">कृपया बँकचा पत्ता भरा ! </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"text\">\r\n                                        UPLOAD MEMBER PHOTO\r\n                                        <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                    </label>\r\n                                    <input class=\"custom_btn\" type=\"file\" ng-bind=\"fileData\" placeholder=\"Upload file\" accept=\".png,.jpeg,.jpg\">\r\n                                    <!-- <div *ngIf=\"IFSCCode.invalid && IFSCCode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                      Please Entre IFSC Code\r\n                                    </div> -->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"form-group\">\r\n                                <button class=\"btn btn-primary\" type=\"button\" data-dismiss=\"modal\" [disabled]=\"memForm.invalid\" (click)=\"create(memForm,$event.target.form[29].files[0])\">\r\n                                    ADD\r\n                                </button>\r\n                                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                                    CANCEL\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- View SHG Model-->\r\n<div class=\"modal\" id=\"viewMemberForm\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"viewMemberForm\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\" style=\"width:1135px;\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-9\">\r\n                        <h4 class=\"modal-title\" id=\"myModalLabel\">\r\n                            <span *ngIf=\"lang.en\"> MEMBER DETAILS</span>\r\n                            <span *ngIf=\"lang.mr\">सदस्य तपशील </span>\r\n                        </h4>\r\n                        <p>\r\n                            <b>\r\n                                <span *ngIf=\"lang.en\">SHG NAME:</span>\r\n                                <span *ngIf=\"lang.mr\"> एसएचजीचे नाव:</span>\r\n                            </b>\r\n                            <span>{{memberModel.SHGName}}</span>\r\n                        </p>\r\n                        <P>\r\n                            <b>\r\n                                <span *ngIf=\"lang.en\">MEMBER CODE:</span>\r\n                                <span *ngIf=\"lang.mr\"> सदस्याचा कोड:</span>\r\n                            </b>\r\n                            <span>{{memberModel.Code | uppercase}}</span>\r\n                        </P>\r\n                        <p>\r\n                            <b>\r\n                                <span *ngIf=\"lang.en\"> CONTACT NUMBER:</span>\r\n                                <span *ngIf=\"lang.mr\"> संपर्क नंबर:</span>\r\n                            </b>\r\n                            <span>{{memberModel.MobileNumber}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <b>\r\n                                <span *ngIf=\"lang.en\"> OCCUPATION:</span>\r\n                                <span *ngIf=\"lang.mr\"> व्यवसाय:</span>\r\n                            </b>\r\n                            <span>{{memberModel.Occupation}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <b>\r\n                                <span *ngIf=\"lang.en\"> GENDER:</span>\r\n                                <span *ngIf=\"lang.mr\"> लिंग:</span>\r\n                            </b>\r\n                            <span>{{memberModel.Gender | uppercase}}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"col-md-3 member_image\" style=\"padding-right:0px;\">\r\n                        <img src=\"{{memberModel.PhotoPath}}\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <form role=\"form\" id=\"viewMemberForm\" name=\"viewMemberForm\">\r\n                <div class=\"modal-body\">\r\n                    <div>\r\n                        <h3>\r\n                            <span *ngIf=\"lang.en\"> PERSONAL DETAIL</span>\r\n                            <span *ngIf=\"lang.mr\"> वैयक्तिक तपशील</span>\r\n                        </h3>\r\n                    </div>\r\n                    <table class=\"table table-bordered loan_common_table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> MEMBERS FIRST NAME</span>\r\n                                    <span *ngIf=\"lang.mr\"> सदस्याचे पहिले नाव</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> MEMBERS FATHER/MIDDLE NAME</span>\r\n                                    <span *ngIf=\"lang.mr\"> सदस्याचे वडील /मधले नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> MEMBERS SURNAME</span>\r\n                                    <span *ngIf=\"lang.mr\"> सदस्याचे शेवटचे नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> MEMBERS MOTHER NAME</span>\r\n                                    <span *ngIf=\"lang.mr\"> सदस्याच्या आईचे नाव </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> DATE OF BIRTH</span>\r\n                                    <span *ngIf=\"lang.mr\"> जन्मतारिख</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> MARITAL STATUS</span>\r\n                                    <span *ngIf=\"lang.mr\"> जन्मतारिख</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> AGE</span>\r\n                                    <span *ngIf=\"lang.mr\"> वय</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> MARITAL STATUS </span>\r\n                                    <span *ngIf=\"lang.mr\"> वैवाहिक स्थिती </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> EDUCATION</span>\r\n                                    <span *ngIf=\"lang.mr\"> शिक्षण</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> SOCIAL CATEGORY</span>\r\n                                    <span *ngIf=\"lang.mr\"> सामाजिक प्रवर्ग </span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <span>{{memberModel.FirstName | uppercase}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.MiddleName | uppercase}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.LastName | uppercase}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.MotherName | uppercase}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.DateOfBirth | date :'dd-MMM-yyyy'}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.MaritalStatus}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.Age}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.MaritalStatus}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.Education}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.Caste}}</span>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> ECONOMIC CATEGORY</span>\r\n                                    <span *ngIf=\"lang.mr\"> आर्थिक प्रवर्ग </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> RATION CARD</span>\r\n                                    <span *ngIf=\"lang.mr\"> रेशन कार्ड</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> AADHAR CARD NUMBER</span>\r\n                                    <span *ngIf=\"lang.mr\"> आधारकार्ड क्रमांक</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> PAN CARD NUMBER</span>\r\n                                    <span *ngIf=\"lang.mr\"> पॅन कार्ड नंबर</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> SHG JOINING DATE</span>\r\n                                    <span *ngIf=\"lang.mr\"> एसएचजी समाविष्ट दिनांक </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> DESIGNATION</span>\r\n                                    <span *ngIf=\"lang.mr\"> पद</span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n\r\n                                <td>\r\n                                    <span>{{memberModel.EconomicCategory}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.RationCard}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.AdharNumber}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.PANNumber}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.DateOfJoin | date :'dd-MMM-yyyy'}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.DesignationName | uppercase}}</span>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div>\r\n                        <h3>\r\n                            <span *ngIf=\"lang.en\"> BANK DETAIL</span>\r\n                            <span *ngIf=\"lang.mr\">बँकेत तपशील</span>\r\n                        </h3>\r\n                    </div>\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> BANK NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">बँकचे नाव</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\">BRANCH NAME</span>\r\n                                    <span *ngIf=\"lang.mr\">शाखा कोड</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> MEMBER A/C NUMBER</span>\r\n                                    <span *ngIf=\"lang.mr\">सदस्य खाते क्रमांक</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> IFSC CODE</span>\r\n                                    <span *ngIf=\"lang.mr\">आयएफएससी कोड</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> BANK ADDRESS</span>\r\n                                    <span *ngIf=\"lang.mr\">बँकेचा पत्ता </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> SHARE AMOUNT</span>\r\n                                    <span *ngIf=\"lang.mr\">शेअर रक्कम</span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <span>{{memberModel.BankName | uppercase}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.BranchName | uppercase}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.AccountNumber}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.IFSCCode}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.BankAddress | uppercase}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.ShareAmount}}</span>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div>\r\n                        <h3>\r\n                            <span *ngIf=\"lang.en\"> ADDRESS DETAIL</span>\r\n                            <span *ngIf=\"lang.mr\">पत्ता तपशील</span>\r\n                        </h3>\r\n                    </div>\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <!-- <th>GENDER</th> -->\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> ADDRESS </span>\r\n                                    <span *ngIf=\"lang.mr\">पत्ता</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> VILLAGE</span>\r\n                                    <span *ngIf=\"lang.mr\">गाव</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> TALUKA</span>\r\n                                    <span *ngIf=\"lang.mr\">तालुका</span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> DISTRICT</span>\r\n                                    <span *ngIf=\"lang.mr\">जिल्हा </span>\r\n                                </th>\r\n                                <th>\r\n                                    <span *ngIf=\"lang.en\"> PIN CODE</span>\r\n                                    <span *ngIf=\"lang.mr\">पिन कोड</span>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <!-- <td>\r\n                                  <span>{{memberModel.Gender | uppercase}}</span>\r\n                                </td> -->\r\n                                <td>\r\n                                    <span>{{memberModel.Address | uppercase}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.Village | uppercase}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.Taluka | uppercase}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.District}}</span>\r\n                                </td>\r\n                                <td>\r\n                                    <span>{{memberModel.PINCode}}</span>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </form>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" id=\"click-button1\" data-dismiss=\"modal\">\r\n                    <span *ngIf=\"lang.en\"> CLOSE</span>\r\n                    <span *ngIf=\"lang.mr\">बंद </span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id=\"createShgMasterForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">New SHG Form</span>\r\n                    <span *ngIf=\"lang.mr\">नवीन एसएचजी फॉर्म</span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    All Detailed Fileds of Selected Member Will be displayed here.\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"memberUpdateModel != null\" id=\"UpdateMemberFormModel\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" style=\"width: 552px; margin-top: 57px;\">\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    UPDATE MEMBER FORM\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <form #UpdateMemberForm=\"ngForm\" id=\"updateMember\" class=\"input-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> FIRST NAME</span>\r\n                                    <span *ngIf=\"lang.mr\"> पहिले नाव</span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" [(ngModel)]=\"memberUpdateModel.FirstName\" class=\"form-control\" id=\"FirstName\" name=\"FirstName\" maxlength=\"25\">\r\n                            </div>\r\n                        </div>\r\n                        <div hidden>\r\n                            <input type=\"text\" id=\"Id\" name=\"Id\" [(ngModel)]=\"memberUpdateModel.Id\" #Id=\"ngModel\">\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> MIDDLE NAME / FATHER NAME</span>\r\n                                    <span *ngIf=\"lang.mr\"> मधले नाव /वडिलांचे नाव</span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" [(ngModel)]=\"memberUpdateModel.MiddleName\" class=\"form-control\" id=\"MiddleName\" name=\"MiddleName\" required\r\n                                    #HashFirstName=\"ngModel\">\r\n                                <div *ngIf=\"HashFirstName.invalid && HashFirstName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Enter Middle Name ! </span>\r\n                                    <span *ngIf=\"lang.mr\"> </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\">LAST NAME </span>\r\n                                    <span *ngIf=\"lang.mr\">शेवटचे नाव </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input class=\"form-control\" [(ngModel)]=\"memberUpdateModel.LastName\" id=\"LastName\" name=\"LastName\" required maxlength=\"25\"\r\n                                    #HashLastName=\"ngModel\">\r\n                                <div *ngIf=\"HashLastName.invalid && HashLastName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Enter Last Name ! </span>\r\n                                    <span *ngIf=\"lang.mr\"> </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> MOTHER NAME </span>\r\n                                    <span *ngIf=\"lang.mr\">आईचे नाव </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input class=\"form-control\" [(ngModel)]=\"memberUpdateModel.MotherName\" id=\"MotherName\" name=\"MotherName\" required maxlength=\"25\"\r\n                                    #HashMotherName=\"ngModel\">\r\n                                <div *ngIf=\"HashMotherName.invalid && HashMotherName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Enter Mother Name ! </span>\r\n                                    <span *ngIf=\"lang.mr\"> </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> GENDER </span>\r\n                                    <span *ngIf=\"lang.mr\"> लिंग </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <select [(ngModel)]=\"memberUpdateModel.GenderId\" name=\"GenderId\" class=\"form-control\" id=\"sel1\" requires #HashGender=\"ngModel\">\r\n                                    <option *ngFor=\"let item of gender\" [value]=\"item.Key\" selected>{{item.Value}}</option>\r\n                                </select>\r\n                                <div *ngIf=\"HashGender.invalid && HashGender.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Select Gender ! </span>\r\n                                    <span *ngIf=\"lang.mr\">कृपया एसएचजी चे नाव भरा ! </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> MARITAL STATUS </span>\r\n                                    <span *ngIf=\"lang.mr\">वैवाहिक स्थिती </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <select [(ngModel)]=\"memberUpdateModel.MaritalStatusId\" class=\"form-control\" name=\"MaritalStatusId\" id=\"MaritalStatusId\"\r\n                                    #HashMarritalStatus=\"ngModel\">\r\n                                    <option *ngFor=\"let getMaritalStatus of maritalStatus\" [value]=\"getMaritalStatus.Key\" selected>{{getMaritalStatus.Value}}</option>\r\n                                </select>\r\n                                <div *ngIf=\"HashMarritalStatus.invalid && HashMarritalStatus.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Select Marrital Status ! </span>\r\n                                    <span *ngIf=\"lang.mr\"> </span>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label>\r\n                                    <span *ngIf=\"lang.en\"> PERSONAL ADDRESS </span>\r\n                                    <span *ngIf=\"lang.mr\"> पत्ता </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <textarea type=\"text\" [(ngModel)]=\"memberUpdateModel.Address\" class=\"form-control\" id=\"Address\" name=\"Address\" required maxlength=\"200\"\r\n                                    #HashAddress=\"ngModel\"></textarea>\r\n                                <div *ngIf=\"HashAddress.invalid && HashAddress.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Enter Personal Address ! </span>\r\n                                    <span *ngIf=\"lang.mr\"> </span>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label>\r\n                                    <span *ngIf=\"lang.en\"> VILLAGE </span>\r\n                                    <span *ngIf=\"lang.mr\"> गाव </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <select class=\"form-control\" name=\"VillageId\" id=\"Village\" [(ngModel)]=\"memberUpdateModel.VillageId\" required #HashVillage=\"ngModel\">\r\n                                    <option *ngFor=\"let village of villages\" [value]=\"village.key\">{{village.Value}}</option>\r\n                                </select>\r\n                                <div *ngIf=\"HashAddress.invalid && HashAddress.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Select Village Name ! </span>\r\n                                    <span *ngIf=\"lang.mr\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> DISTRICT </span>\r\n                                    <span *ngIf=\"lang.mr\">जिल्हा </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <select [(ngModel)]=\"memberUpdateModel.DistrictId\" name=\"DistrictId\" (change)=\"getselectTaluka(districtId.viewModel)\" class=\"form-control\"\r\n                                    id=\"districtId\" required #HashDistrict=\"ngModel\">\r\n                                    <option *ngFor=\"let dis of ditricts\" [value]=\"dis.Id\">{{dis.Name}}</option>\r\n                                    <!-- <option value=\"Raigadh\">RAIGADH</option> -->\r\n                                    <div *ngIf=\"HashDistrict.invalid && HashDistrict.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\"> Please Select Your District! </span>\r\n                                        <span *ngIf=\"lang.mr\"> </span>\r\n                                    </div>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> TALUKA </span>\r\n                                    <span *ngIf=\"lang.mr\">तालुका </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <select [(ngModel)]=\"memberUpdateModel.TalukaId\" name=\"TalukaId\" class=\"form-control\" id=\"TalukaId\" #HashTaluka=\"ngModel\">\r\n                                    <option *ngFor=\"let getAllTaluka of talukas\" [value]=\"getAllTaluka.Key\">{{getAllTaluka.Value}}</option>\r\n                                    <div *ngIf=\"HashDistrict.invalid && HashDistrict.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\"> Please Select Your Taluka! </span>\r\n                                        <span *ngIf=\"lang.mr\"> </span>\r\n                                    </div>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> PIN CODE </span>\r\n                                    <span *ngIf=\"lang.mr\">पिन कोड </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" [(ngModel)]=\"memberUpdateModel.PINCode\" class=\"form-control\" id=\"PinCode\" name=\"PINCode\" required maxlength=\"10\"\r\n                                    #HashPincode=\"ngModel\">\r\n                                <div *ngIf=\"HashPincode.invalid && HashPincode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Enter Your PinCode ! </span>\r\n                                    <span *ngIf=\"lang.mr\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> CONTACT NUMBER </span>\r\n                                    <span *ngIf=\"lang.mr\">संपर्क </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" [(ngModel)]=\"memberUpdateModel.MobileNumber\" class=\"form-control\" id=\"MobileNumber\" name=\"MobileNumber\"\r\n                                    maxlength=\"12\" required #HashContactNumber=\"ngModel\">\r\n                                <div *ngIf=\"HashContactNumber.invalid && HashContactNumber.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Enter your Contact Number! </span>\r\n                                    <span *ngIf=\"lang.mr\"> </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"date\">\r\n                                    <span *ngIf=\"lang.en\"> DATE OF BIRTH </span>\r\n                                    <span *ngIf=\"lang.mr\">जन्मतारीख </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"date\" [(ngModel)]=\"memberUpdateModel.DateOfBirth\" class=\"form-control\" id=\"DateOfBirth\" name=\"DateOfBirth\" #HashDateOfBirth=\"ngModel\">\r\n                                <div *ngIf=\"HashContactNumber.invalid && HashContactNumber.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Select Your Date of Birth! </span>\r\n                                    <span *ngIf=\"lang.mr\"> </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> EDUCATION </span>\r\n                                    <span *ngIf=\"lang.mr\">शिक्षण </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\"></span>\r\n                                </label>\r\n                                <!-- <input type=\"text\" (ngModel)=\"Education\" class=\"form-control\" id=\"Education\" name=\"Education\" #Education=\"ngModel\"> -->\r\n                                <select [(ngModel)]=\"memberUpdateModel.EducationId\" name=\"EducationId\" class=\"form-control\" id=\"EducationId\" #HashEducation=\"ngModel\">\r\n                                    <option *ngFor=\"let item of education\" [value]=\"item.Key\">{{item.Value}}</option>\r\n                                    <div *ngIf=\"HashEducation.invalid && HashEducation.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\"> Please Select Your Education ! </span>\r\n                                        <span *ngIf=\"lang.mr\"></span>\r\n                                    </div>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> OCCUPATION/ PROFFESSION </span>\r\n                                    <span *ngIf=\"lang.mr\">व्यवसाय/ </span>\r\n                                </label>\r\n                                <select [(ngModel)]=\"memberUpdateModel.OccupationId\" name=\"OccupationId\" class=\"form-control\" Id=\"OccupationId\" #HashOccupation=\"ngModel\">\r\n                                    <option *ngFor=\"let getAllOccupation of Occupations\" [value]=\"getAllOccupation.Key\">{{getAllOccupation.Value}}</option>\r\n                                    <div *ngIf=\"HashOccupation.invalid && HashOccupation.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\"> Please Select your Occupation! </span>\r\n                                        <span *ngIf=\"lang.mr\"></span>\r\n                                    </div>\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> SOCIAL CATEGORY </span>\r\n                                    <span *ngIf=\"lang.mr\"> सामाजिक प्रवर्ग </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <select [(ngModel)]=\"memberUpdateModel.CasteId\" name=\"CasteId\" class=\"form-control\" id=\"CasteId\" #HashCast=\"ngModel\">\r\n                                    <option *ngFor=\"let getAllCast of Casts\" [value]=\"getAllCast.Key\">{{getAllCast.Value}}</option>\r\n                                    <div *ngIf=\"HashCast.invalid && HashCast.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\"> Please Select Your Social Category ! </span>\r\n                                        <span *ngIf=\"lang.mr\"> </span>\r\n                                    </div>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> ECONOMIC CATEGORY </span>\r\n                                    <span *ngIf=\"lang.mr\">आर्थिक प्रवर्ग </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <select [(ngModel)]=\"memberUpdateModel.EconomicCategoryId\" name=\"EconomicCategoryId\" class=\"form-control\" id=\"EconomicCategory\"\r\n                                    #HashEconomicCategory=\"ngModel\">\r\n                                    <option *ngFor=\"let item of EcoCategory\" [value]=\"item.Key\">{{item.Value}}</option>\r\n                                    <div *ngIf=\"HashEconomicCategory.invalid && HashEconomicCategory.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\"> Please Select your Economic Category! </span>\r\n                                        <span *ngIf=\"lang.mr\"></span>\r\n                                    </div>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> RATION CARD </span>\r\n                                    <span *ngIf=\"lang.mr\">रेशन कार्ड </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <select [(ngModel)]=\"memberUpdateModel.RationCardId\" name=\"RationCardId\" class=\"form-control\" id=\"RationCard\" required #HashRationCard=\"ngModel\">\r\n                                    <option *ngFor=\"let item of rationcard\" [value]=\"item.Key\">{{item.Value}}</option>\r\n                                    <div *ngIf=\"HashRationCard.invalid && HashRationCard.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\"> Please select your Ration Card ! </span>\r\n                                        <span *ngIf=\"lang.mr\"> </span>\r\n                                    </div>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> ADHAR CARD NUMBER </span>\r\n                                    <span *ngIf=\"lang.mr\">आधार कार्ड नंबर </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" [(ngModel)]=\"memberUpdateModel.AdharNumber\" class=\"form-control\" id=\"AdharNumber\" maxlength=\"20\" name=\"AdharNumber\"\r\n                                    required #HashAdharNumber=\"ngModel\">\r\n                                <div *ngIf=\"HashAdharNumber.invalid && HashAdharNumber.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Enter Adhar Card Number ! </span>\r\n                                    <span *ngIf=\"lang.mr\"> </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> PAN CARD NUMBER </span>\r\n                                    <span *ngIf=\"lang.mr\">पॅन कार्ड नंबर </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" [(ngModel)]=\"memberUpdateModel.PANNumber\" class=\"form-control\" id=\"PANNumber\" required maxlength=\"20\"\r\n                                    name=\"PANNumber\" #HashPanNumber=\"ngModel\">\r\n                                <div *ngIf=\"HashPanNumber.invalid && HashPanNumber.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Enter Pan Card Number ! </span>\r\n                                    <span *ngIf=\"lang.mr\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"date\">\r\n                                    <span *ngIf=\"lang.en\"> SHG JOINING DATE </span>\r\n                                    <span *ngIf=\"lang.mr\">एसएचजी सामील सामील होण्याचा दिनांक </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"date\" [(ngModel)]=\"memberUpdateModel.DateOfJoin\" class=\"form-control\" id=\"DateOfJoin\" name=\"DateOfJoin\" #HashDateOfJoin=\"ngModel\">\r\n                                <div *ngIf=\"HashDateOfJoin.invalid && HashDateOfJoin.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Select SHG Joining Date! </span>\r\n                                    <span *ngIf=\"lang.mr\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> DESIGNATION </span>\r\n                                    <span *ngIf=\"lang.mr\">पद </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <select [(ngModel)]=\"memberUpdateModel.DesignationId\" name=\"DesignationId\" class=\"form-control\" required id=\"DesignationName\"\r\n                                    #HashDesignation=\"ngModel\">\r\n                                    <option *ngFor=\"let item of Designations\" [value]=\"item.Key\">{{item.Value}}</option>\r\n                                    <div *ngIf=\"HashDesignation.invalid && HashDesignation.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                        <span *ngIf=\"lang.en\"> Please Select Your Designation ! </span>\r\n                                        <span *ngIf=\"lang.mr\"></span>\r\n                                    </div>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> SHARE AMOUNT </span>\r\n                                    <span *ngIf=\"lang.mr\">वितरीत रक्कम </span>\r\n                                </label>\r\n                                <input type=\"text\" [(ngModel)]=\"memberUpdateModel.ShareAmount\" class=\"form-control\" id=\"ShareAmount\" name=\"ShareAmount\" maxlength=\"4\"\r\n                                    required #HashShareAmount=\"ngModel\">\r\n                                <div *ngIf=\"HashShareAmount.invalid && HashShareAmount.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Enter Share Amount ! </span>\r\n                                    <span *ngIf=\"lang.mr\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                <span *ngIf=\"lang.en\"> BANK NAME </span>\r\n                                <span *ngIf=\"lang.mr\">बँकेचे नाव </span>\r\n                                <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                            </label>\r\n                            <input type=\"text\" [(ngModel)]=\"memberUpdateModel.BankName\" class=\"form-control\" id=\"BankName\" name=\"BankName\" required maxlength=\"20\"\r\n                                #HashBankName=\"ngModel\">\r\n                            <div *ngIf=\"HashBankName.invalid && HashBankName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                <span *ngIf=\"lang.en\"> Please Enter Bank Name ! </span>\r\n                                <span *ngIf=\"lang.mr\"></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- </div> -->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> BRANCH NAME </span>\r\n                                    <span *ngIf=\"lang.mr\">शाखाचे नाव </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" [(ngModel)]=\"memberUpdateModel.BranchName\" class=\"form-control\" id=\"BranchName\" name=\"BranchName\" required\r\n                                    maxlength=\"20\" #HashBranchName=\"ngModel\">\r\n                                <div *ngIf=\"HashBranchName.invalid && HashBranchName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Enter Branch Name ! </span>\r\n                                    <span *ngIf=\"lang.mr\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"from-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> PERSONAL BANK A/C NUMBER </span>\r\n                                    <span *ngIf=\"lang.mr\">वैयक्तिक बँक खाते क्रमांक </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" [(ngModel)]=\"memberUpdateModel.AccountNumber\" class=\"form-control\" id=\"AccountNumber\" name=\"AccountNumber\"\r\n                                    required maxlength=\"20\" #HashAccountNumber=\"ngModel\">\r\n                                <div *ngIf=\"HashAccountNumber.invalid && HashAccountNumber.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Enter Personal AccountNumber ! </span>\r\n                                    <span *ngIf=\"lang.mr\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <!-- <div class=\"col-md-6\">\r\n                            <div class=\"from-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> CONFIRM BANK A/C NUMBER.</span>\r\n                                    <span *ngIf=\"lang.mr\">खाते क्रमांकाची पुष्टी करा. </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" [(ngModel)]=\"memberUpdateModel.AccountNumber_\" class=\"form-control\" id=\"AccountNumber\" name=\"AccountNumber_\"\r\n                                    required maxlength=\"20\" #AccountNumber=\"ngModel\">\r\n                                <div *ngIf=\"memberUpdateModel.AccountNumber != memberUpdateModel.AccountNumber_\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\">Account number is not match with confirm bank account number !</span>\r\n                                    <span *ngIf=\"lang.mr\">बँक नंबरच्या पुष्टीकरणासह खाते क्रमांक जुळत नाही!</span>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    <span *ngIf=\"lang.en\"> IFSC CODE</span>\r\n                                    <span *ngIf=\"lang.mr\">आयएफएससी कोड </span>\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input type=\"text\" [(ngModel)]=\"memberUpdateModel.IFSCCode\" class=\"form-control\" id=\"IFSCCode\" name=\"IFSCCode\" required #IFSCCode=\"ngModel\"\r\n                                    maxlength=\"20\">\r\n                                <div *ngIf=\"IFSCCode.invalid && IFSCCode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                    <span *ngIf=\"lang.en\"> Please Enter IFSC Code ! </span>\r\n                                    <span *ngIf=\"lang.mr\"></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"text\">\r\n                                <span *ngIf=\"lang.en\"> BANK ADDRESS</span>\r\n                                <span *ngIf=\"lang.mr\">बँकचा पत्ता </span>\r\n                                <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                            </label>\r\n                            <textarea type=\"text\" [(ngModel)]=\"memberUpdateModel.BankAddress\" class=\"form-control\" id=\"BankAddress\" name=\"BankAddress\"\r\n                                required maxlength=\"200\" #HashBankAddress=\"ngModel\"></textarea>\r\n                            <div *ngIf=\"HashBankAddress.invalid && HashBankAddress.touched\" class=\"alert-danger comman-error-mesage\">\r\n                                <span *ngIf=\"lang.en\"> Please Enter IFSC Code ! </span>\r\n                                <span *ngIf=\"lang.mr\"></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n\r\n                        <!-- <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label for=\"text\">\r\n                                    UPLOAD MEMBER PHOTO\r\n                                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                                </label>\r\n                                <input class=\"custom_btn\" type=\"file\" ng-bind=\"fileData\" placeholder=\"Upload file\" accept=\".png,.jpeg,.jpg\">\r\n                            </div>\r\n                        </div> -->\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <button class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"updateMember()\">Yes</button>\r\n                        <button class=\"btn btn-default\" data-dismiss=\"modal\" style=\"float:right\"> CANCEL</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"deleteMemberForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">DELETE SHG</span>\r\n                </h4>\r\n            </div>\r\n            <div *ngIf=\"AllowDelete\">\r\n                <div class=\"modal-body\">\r\n                    <p>\r\n                        <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n                        <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n                    </p>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"form-group\">\r\n                        <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteMember(deleterecord.Id)\">\r\n                            <span *ngIf=\"lang.en\">Delete Confirm </span>\r\n                            <span *ngIf=\"lang.mr\">होय </span>\r\n                        </button>\r\n                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                            <span *ngIf=\"lang.en\">NO </span>\r\n                            <span *ngIf=\"lang.mr\">नाही </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"!AllowDelete\" class=\"form-group\">\r\n                <div class=\"modal-body\">\r\n                    <div *ngFor=\"let deleteReasons of memCanNotDeleteReason\">\r\n                        <p>{{deleteReasons}}</p>\r\n                    </div>\r\n                </div>\r\n                <!-- \r\n                <p>{{loan}}</p>\r\n                <p>{{fd1}}</p>\r\n                <p>{{fd}}</p> -->\r\n                <div class=\"modal-footer\">\r\n                    <div class=\"form-group\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">\r\n                            <span *ngIf=\"lang.en\">OK </span>\r\n                            <span *ngIf=\"lang.mr\">नाही </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/vo/member/member.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MemberComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__member_model__ = __webpack_require__("../../../../../src/app/components/vo/member/member.model.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_jspdf__ = __webpack_require__("../../../../jspdf/dist/jspdf.min.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_jspdf___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_jspdf__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__services_FileService_file_upload_service__ = __webpack_require__("../../../../../src/app/services/FileService/file_upload.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var MemberComponent = (function () {
    function MemberComponent(_voService, _globalURL, _access_token, lang, _commonService, _common_message, _fileUploadService, shgNames, 
        //  public memberUpdateModel: MemberModel,
        _router, globalVariable) {
        this._voService = _voService;
        this._globalURL = _globalURL;
        this._access_token = _access_token;
        this.lang = lang;
        this._commonService = _commonService;
        this._common_message = _common_message;
        this._fileUploadService = _fileUploadService;
        this.shgNames = shgNames;
        this._router = _router;
        this.globalVariable = globalVariable;
        this.AllowDelete = false;
        this.deleteDisable = false;
        this.NotAllowDelete = false;
        this.countSuccess = 0;
        this.CasteId_ = 0;
        this.AccountNumber = 0;
        this.AccountNumber_ = 0;
        this.memCanNotDeleteReason = [];
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
        this.memberUpdateModel = null;
        this.memberModel_ = null;
        this.shgNameAndId = null;
        this.memberUpdateModel = null;
        this.message = "Your Record is Create succesfully";
    }
    MemberComponent.prototype.ngOnInit = function () {
        this._globalURL.isLoading = true;
        this.memberModel = {};
        this.getMemberDetails(sessionStorage.getItem("shgId"));
        this.loadSHGNameAndId();
        this.getVillageKVP();
        //  this.getGender();
        this.getAllDistrict();
        this.getMaritalStatus();
        this.geAllOccupation();
        this.getAllCast();
        this.getAllDesignation();
        this.getAllEconomicCategory();
        this.getEducation();
        this.getRationCard();
        this.getGender();
    };
    MemberComponent.prototype.ngAfterViewInit = function () {
        //this.dtTrigger.next();
    };
    //Get New Member Code
    MemberComponent.prototype.getNextCode = function (code) {
        var _this = this;
        this._commonService.get(this._globalURL.GET_NEXT_CODE + code + "&parentCode=" + this.globalVariable.shgBaseCode)
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.nextCode = res.Data;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    MemberComponent.prototype.fordelete = function (data) {
        var _this = this;
        for (var item in this.memCanNotDeleteReason)
            this.memCanNotDeleteReason.pop();
        this._globalURL.isLoading = true;
        this.NotAllowDelete = false;
        this.AllowDelete = false;
        this.countSuccess = 0;
        this.deleterecord = data;
        this._voService.get((this._globalURL.IF_CAN_DELETE_SHG + data.Id + "&ForId=2"), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this._globalURL.isLoading = false;
                for (var item in res.Data) {
                    if (res.Data[item].Value == "D")
                        _this.AllowDelete = true;
                    else {
                        _this.AllowDelete = false;
                        _this.memCanNotDeleteReason.push(res.Data[item].Value);
                    }
                    // if (res.Data[item].Key == 0) {
                    //     this.countSuccess = this.countSuccess + 1;
                    //     // this.deleteDisable = false;
                    // }
                    // else if (res.Data[item].Key == 1) {
                    //     this.loan = res.Data[item].Value;
                    // }
                    // else if (res.Data[item].Key == 2) {
                    //     this.fd1 = res.Data[item].Value;
                    // }
                    // else if (res.Data[item].Key == 3) {
                    //     this.fd = res.Data[item].Value;
                    // }
                }
                // if (this.countSuccess == 3) {
                //     this.NotAllowDelete = false;
                //     this.AllowDelete = true;
                // }
                // else {
                //     this.AllowDelete = false;
                //     this.NotAllowDelete = true;
                // }
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    MemberComponent.prototype.deleteMember = function (id) {
        var _this = this;
        debugger;
        this._voService.post((this._globalURL.DELETE_MEMBER + id), null, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.status === 200) {
                _this._globalURL.isLoading = false;
                _this.message = _this._common_message.MemberRemoveMsg;
                _this.showMessage = true;
                setInterval(function () {
                    _this.showMessage = false;
                }, 5000);
                _this.getMemberDetails(sessionStorage.getItem("shgId"));
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.getMemberDetails(sessionStorage.getItem("shgId"));
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    MemberComponent.prototype.loadSHGNameAndId = function () {
        var _this = this;
        this._voService.get(this._globalURL.GET_SHG_ID_NAME, sessionStorage.getItem("access_token")).
            then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.shgNameAndId = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    // // get All District
    MemberComponent.prototype.getAllDistrict = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.GET_DISTRICT, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.ditricts = res.Data;
                _this._globalURL.isLoading = false;
                //this.reRenderDT();
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    MemberComponent.prototype.getGender = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.GET_GENDER_KVP, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.gender = res.Data;
                _this._globalURL.isLoading = false;
                //this.reRenderDT();
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    MemberComponent.prototype.getEducation = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.GET_EDUCATION_KVP, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.education = res.Data;
                _this._globalURL.isLoading = false;
                //this.reRenderDT();
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    MemberComponent.prototype.getRationCard = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.GETRATIONCARDKVP, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.rationcard = res.Data;
                _this._globalURL.isLoading = false;
                //this.reRenderDT();
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    //village kvp 
    MemberComponent.prototype.getVillageKVP = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.KVPGET_VILLAGE, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.villages = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    //kvp Get Cast...
    MemberComponent.prototype.getAllCast = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.KVP_GET_CAST, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.Casts = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    //kvp Get Designation...
    MemberComponent.prototype.getAllDesignation = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.KVP_GET_DESIGNATION, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.Designations = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    //kvp Get Economic Category...
    MemberComponent.prototype.getAllEconomicCategory = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.KVP_ECONOMIC_CATEGORY, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.EcoCategory = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    // get All Select Taluka
    MemberComponent.prototype.getselectTaluka = function (data) {
        var _this = this;
        var id = data;
        this._globalURL.isLoading = true;
        var finalURl = this._globalURL.GET_DISTRICT_BY_TALUKA_KEY_VALUE_PAIR + "" + data;
        this._voService.get(finalURl, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.talukas = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    //Get all Marital Status
    MemberComponent.prototype.getMaritalStatus = function () {
        var _this = this;
        this._voService.get(this._globalURL.GET_MARITAL_STATUS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.maritalStatus = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    // Get ALL Get Occupation
    MemberComponent.prototype.geAllOccupation = function () {
        var _this = this;
        this._voService.get(this._globalURL.GETALLOCCUPATION, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.Occupations = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    //View Member Detail
    MemberComponent.prototype.viewMemberDetail = function (id) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._voService.get((this._globalURL.GET_MEM_BY_SHG_AND_MEM_ID + "?sghId=" + sessionStorage.getItem("shgId") + "&memId=" + id), sessionStorage.getItem("access_token")).
            then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.memberModel = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
            //alert("sucess");
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    MemberComponent.prototype.getMemberDetails = function (selectedSHGID) {
        var _this = this;
        debugger;
        sessionStorage.setItem("shgId", selectedSHGID.toString());
        this._globalURL.isLoading = true;
        // let finalURL = this._globalURL.GET_MEMBER_DETAILS + "" + selectedSHGID;
        this._voService.get((this._globalURL.GET_MEMBER_DETAILS + selectedSHGID + "&Status=1"), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.memberModel_ = res.Data;
                _this._globalURL.isLoading = false;
                //this.reRenderDT();
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
            _this._globalURL.isLoading = false;
        })
            .catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    MemberComponent.prototype.downloadPDF = function () {
        var doc = new __WEBPACK_IMPORTED_MODULE_7_jspdf__();
        var x = 10;
        var dotLoc = 80;
        var x_counter = 0;
        var y = 0;
        var y_counter = 10;
        doc.setFont("arial", "bold");
        doc.setFontSize(15);
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "MEMBER FORM DETAILS");
        doc.setFontSize(10);
        doc.setFontType("normal");
        doc.text(160, y, "MEMBER PHOTO");
        doc.rect(155, 20, 40, 40, 'S');
        doc.text(x, y = y + y_counter, "MEMBER FIRST NAME");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 15, 60, 7, 's');
        doc.text(x, y = y + y_counter, "MEMBER MIDDLE NAME");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 25, 60, 7, 's');
        doc.text(x, y = y + y_counter, "MEMBER LAST NAME");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 35, 60, 7, 's');
        doc.text(x, y = y + y_counter, "MEMBER FATHER NAME");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 45, 60, 7, 's');
        doc.text(x, y = y + y_counter, "MEMBER MOTHER NAME");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 55, 60, 7, 's');
        doc.text(x, y = y + y_counter, "GENDER");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 65, 60, 7, 's');
        doc.text(x, y = y + y_counter, "PERSONAL ADDRESS");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 75, 60, 7, 's');
        doc.text(x, y = y + y_counter, "VILLAGE");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 85, 60, 7, 's');
        doc.text(x, y = y + y_counter, "TALUKA");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 95, 60, 7, 's');
        doc.text(x, y = y + y_counter, "DISTRICT");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 105, 60, 7, 's');
        doc.text(x, y = y + y_counter, "PINCODE");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 115, 60, 7, 's');
        doc.text(x, y = y + y_counter, "CONTACT NUMBER");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 125, 60, 7, 's');
        doc.text(x, y = y + y_counter, "DATE OF BIRTH");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 135, 60, 7, 's');
        doc.text(x, y = y + y_counter, "EDUCATION");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 145, 60, 7, 's');
        doc.text(x, y = y + y_counter, "OCCUPATION/ PROFFESSION");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 155, 60, 7, 's');
        doc.text(x, y = y + y_counter, "SOCIAL CATEGORY");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 165, 60, 7, 's');
        doc.text(x, y = y + y_counter, "RATION CARD");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 175, 60, 7, 's');
        doc.text(x, y = y + y_counter, "ADHAR CARD NUMBER");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 185, 60, 7, 's');
        doc.text(x, y = y + y_counter, "PAN CARD NUMBER");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 195, 60, 7, 's');
        doc.text(x, y = y + y_counter, "SHG JOINING DATE");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 205, 60, 7, 's');
        doc.text(x, y = y + y_counter, "DESIGNATION");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 215, 60, 7, 's');
        doc.text(x, y = y + y_counter, "BANK NAME");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 225, 60, 7, 's');
        doc.text(x, y = y + y_counter, "BRANCH NAME");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 235, 60, 7, 's');
        doc.text(x, y = y + y_counter, "PERSONAL BANK ACCOUNT NUMBER");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 245, 60, 7, 's');
        doc.text(x, y = y + y_counter, "IFSC CODE");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 255, 60, 7, 's');
        doc.text(x, y = y + y_counter, "BANK ADDRESS");
        doc.text(dotLoc, y, ":");
        doc.rect(85, 265, 60, 7, 's');
        doc.text(140, y = y + (y_counter), "DATE AND MEMBER SIGNATURE");
        doc.text(140, y = y + y_counter, "DATE PRESIDENT AND SIGNATURE");
        doc.text(x, y = y + y_counter, "BANK ADDRESS");
        doc.save("MEMBER_FORM.pdf");
    };
    MemberComponent.prototype.create = function (data, metadata) {
        var _this = this;
        // alert("add called");
        debugger;
        this.memberform = data;
        var age = this.calculateAge(data.value.DateOfBirth);
        this._globalURL.isLoading = true;
        data.value.Code = this.nextCode;
        data.value.SHGId = sessionStorage.getItem("shgId");
        data.value.Code = this.nextCode;
        data.value.ParentCode = this.globalVariable.shgBaseCode;
        data.value.Age = age;
        this._voService.post(this._globalURL.POST_CREATE_MEMBER, data.value, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                if (res.status == 200) {
                    var data = JSON.parse(res._body);
                    // sessionStorage.getItem("access_token") = data.access_token;
                    var formData = new FormData();
                    formData.append("RefId", data.Data);
                    formData.append("file", metadata);
                    _this._fileUploadService.post((_this._globalURL.ADD_PHOTO + "?folderName=Member" + "&type=" + _this._globalURL.MEM_PHOTO + "&RefId=" + data.Data), formData, sessionStorage.getItem("access_token")).then(function (res) {
                        if (res.Status == undefined) {
                            if (res.status == 200) {
                                _this.memberform.control.reset();
                                _this.showMessage = true;
                                _this.message = _this._common_message.MemberCreatedMsg;
                                setInterval(function () {
                                    _this.showMessage = false;
                                }, 5000);
                            }
                        }
                        else {
                            _this.showWarningMessage = true;
                            _this.message = _this._common_message.WarningMsg;
                            setInterval(function () {
                                _this.showWarningMessage = false;
                            }, 5000);
                            _this._globalURL.isLoading = false;
                        }
                    }).catch(function (res) {
                        _this.showErrorMessage = true;
                        console.log(res.error);
                        _this.message = _this._common_message.CatchBlockMsg;
                        setInterval(function () {
                            _this.showErrorMessage = false;
                        }, 5000);
                        _this._globalURL.isLoading = false;
                    });
                    _this.loadSHGNameAndId();
                    _this.getMemberDetails(sessionStorage.getItem("shgId"));
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                    _this.loadSHGNameAndId();
                    _this.getMemberDetails(sessionStorage.getItem("shgId"));
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            console.log(res.error);
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    MemberComponent.prototype.calculateAge = function (dob) {
        var getCurrentYear = new Date().getFullYear();
        var dateObj = new Date();
        var dobYear = dob.split('-')[0];
        var age = getCurrentYear - parseInt(dobYear);
        return age;
    };
    MemberComponent.prototype.setUpdatedValues = function (data) {
        debugger;
        this.memberUpdateModel = data;
    };
    MemberComponent.prototype.updateMember = function () {
        var _this = this;
        debugger;
        this._voService.post(this._globalURL.UPDATE_MEMBER_MASTER, this.memberUpdateModel, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.MemberUpdateMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getMemberDetails(sessionStorage.getItem("shgId"));
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    MemberComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/member/member.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_10__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_6__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_11__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_8__services_FileService_file_upload_service__["a" /* FileUploadService */],
            __WEBPACK_IMPORTED_MODULE_4__member_model__["a" /* shgDetails */],
            __WEBPACK_IMPORTED_MODULE_5__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_9__environments_GlobalVeriables__["a" /* GlobalVariable */]])
    ], MemberComponent);
    return MemberComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/member/member.model.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export MemberModel */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return shgDetails; });
var MemberModel = (function () {
    function MemberModel() {
        this.EducationId = 0;
        this.VillageId = 0;
        this.DistrictId = 0;
        this.TalukaId = 0;
        this.Id = 0;
        this.ParentCode = 0;
        this.Code = 0;
        this.VOId = 0;
        ;
        this.DesignationId = 0;
        this.Education = '';
        this.FirstName = '';
        this.MiddleName = '';
        this.LastName = '';
        this.FatherName = '';
        this.MotherName = '';
        this.DateOfJoin = 0;
        this.Gender = '';
        this.DateOfJoin = '';
        this.District = '';
        this.Block = '';
        this.DesignationName = '';
        this.PANCode = 0;
        this.MobileNumber = 0;
        this.OccupationId = 0;
        this.Occupation = '';
        this.RationCard = '';
        this.EconomicCategory = '';
        this.AdharCardNumber = 0;
        this.BankName = '';
        this.BranchName = '';
        this.AccountNumber = 0;
        this.IFSCCode = 0;
        this.BankAccountOpeningDate = '';
        this.BankAddress = '';
        this.AdharNumber = 0;
        this.CreatedBy = '';
        this.CreatedDate = '';
        this.UpdatedBy = '';
        this.UpdatedDate = '';
        this.Status = '';
        this.Address = '';
        this.PINCode = 0;
        this.Category = '';
        this.SavingGroupId = 0;
        this.MaritalStatusId = 0;
        this.ShareAmount = 0;
        this.GenderId = 0;
    }
    ;
    return MemberModel;
}());

var shgDetails = (function () {
    function shgDetails() {
        this.Name = '';
    }
    return shgDetails;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/sc_member/sc_member.component.html":
/***/ (function(module, exports) {

module.exports = "Form Development is in progress"

/***/ }),

/***/ "../../../../../src/app/components/vo/sc_member/sc_member.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SCMemberComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var SCMemberComponent = (function () {
    function SCMemberComponent(_voService, 
        //public memberModel: MemberModel,
        _globalURL, lang, _access_token, _router) {
        this._voService = _voService;
        this._globalURL = _globalURL;
        this.lang = lang;
        this._access_token = _access_token;
        this._router = _router;
        this.arr = new Array({ key: 0, value: 0 });
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    SCMemberComponent.prototype.ngOnInit = function () {
        this.getAllSCMemberDetails();
    };
    // public scMembers: any;
    SCMemberComponent.prototype.getAllSCMemberDetails = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.GET_SC_MEMBERS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true)
                _this.scMembers = res.Data;
            _this._globalURL.isLoading = false;
        })
            .catch(function (err) {
            _this.showErrorMessage = true;
            _this.message = "Record Does Not Get succesfully";
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    SCMemberComponent.prototype.getSCMemberKeyValuePairDetails = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.GET_VO_MEMBERS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true)
                _this.voSCMemberNameAndId_ = res.Data;
            _this._globalURL.isLoading = false;
        })
            .catch(function (err) {
            _this.showErrorMessage = true;
            _this.message = "Record Does Not Get succesfully";
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    SCMemberComponent.prototype.add = function (key_, value_) {
        debugger;
        this.arr.push({ key: key_.value, value: value_.name });
    };
    SCMemberComponent.prototype.createSCMember = function (data) {
        var _this = this;
        //  let _data = {
        //    'userName': data.userName , 'password': data.passwor &userName=" + "?passoword="
        //  }
        debugger;
        var finalUrl = this._globalURL.CREATE_SC_MEMBER_KEY_VALUE_PAIR + "?userName=" + data.userName + "&password=" + data.password;
        this._voService.post(finalUrl, this.arr, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.Status == true)
                _this._globalURL.isLoading = false;
            _this.getAllSCMemberDetails();
            _this.showMessage = true;
            _this.message = "Record is Create succesfully";
            setInterval(function () {
                _this.showMessage = false;
            }, 5000);
        })
            .catch(function (err) {
            _this.showErrorMessage = true;
            _this.message = "Record Does Not Create succesfully";
            setInterval(function () {
                // this._globalURL.isSaveSuccessMessage = false;
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    SCMemberComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/sc_member/sc_member.component.html")
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_2__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_5__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_3__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["a" /* Router */]])
    ], SCMemberComponent);
    return SCMemberComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/shg_master/shg_master.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n  <loading-selector>\r\n  </loading-selector>\r\n</div>\r\n<div *ngIf=\"showMessage\">\r\n  <message-selector [message]=\"message\">\r\n  </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n  <error-message-selector [message]=\"message\">\r\n  </error-message-selector>\r\n</div>\r\n<!-- Content Header (Page header) -->\r\n<section class=\"content-header\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\" style=\"padding:3px;\">\r\n      <div class=\"col-md-5\">\r\n        <label class=\"heading-title\">\r\n          <span *ngIf=\"lang.en\">SHG DETAILS FORM</span>\r\n          <span *ngIf=\"lang.mr\">एसएचजी तपशील फॉर्म </span>\r\n        </label>\r\n      </div>\r\n      <div class=\"col-md-3 col-md-offset-4\">\r\n        <div class=\" TableHeaderInsideAll_Buttons btn_pad_non\">\r\n          <button title=\"View details\" class=\"btn btn-primary\" (click)=\"downloadPDF()\" style=\"float:right;\">\r\n            <span>\r\n              <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n            </span>\r\n            DOWNLOAD SHG FORM\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"col-md-3\">\r\n        <button title=\"View details\" class=\"btn btn-primary\" (click)=\"voShgExportToExcel()\" style=\"float:right;\">\r\n          <span>\r\n            <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n          </span> DOWNLOAD FORM EXCEL\r\n        </button>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"box box-default\">\r\n        <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n          <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createShgMasterForm\" (click)=\"getNextCode(4)\">\r\n            <span *ngIf=\"lang.en\">CREATE NEW SHG</span>\r\n            <span *ngIf=\"lang.mr\">नवीन एसएचजी तयार करा</span>\r\n          </button>\r\n          <button title=\"View details\" class=\"btn btn-primary\" (click)=\"voShgExportTopdf()\" style=\"float:right;\">\r\n            <span>\r\n              <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n            </span> PDF\r\n          </button>\r\n        </div>\r\n        <div class=\"box-body\">\r\n          <table datatable class=\"table table-bordered loan_table_common\" cellspacing=\"0\" width=\"100%\">\r\n            <thead>\r\n              <tr>\r\n                <th hidden>Id</th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">SR.NO</span>\r\n                  <span *ngIf=\"lang.mr\">अं.क्र.</span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">NAME OF SHG</span>\r\n                  <span *ngIf=\"lang.mr\">एसएचजी चे नाव</span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">CODE</span>\r\n                  <span *ngIf=\"lang.mr\">कोड</span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">SCHEME</span>\r\n                  <span *ngIf=\"lang.mr\">योजना</span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">DATE OF FORMATION</span>\r\n                  <span *ngIf=\"lang.mr\">स्थापना दिनांक </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">TOTAL MEMBERS</span>\r\n                  <span *ngIf=\"lang.mr\">एकूण सदस्य</span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">CONTACT NUMBER</span>\r\n                  <span *ngIf=\"lang.mr\">संपर्क </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">ADD MEMBERS</span>\r\n                  <span *ngIf=\"lang.mr\">सदस्य जोडा </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\">ACTION</span>\r\n                  <span *ngIf=\"lang.mr\">कृती </span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"\">\r\n              <tr *ngFor=\"let savingGroup of savingGroups; let rowIndex=index\">\r\n                <td hidden>{{savingGroup.Id}}</td>\r\n                <td>{{rowIndex+1}}</td>\r\n                <td>{{savingGroup.Name | uppercase }}</td>\r\n                <td>{{savingGroup.Code}}</td>\r\n                <td>{{savingGroup.SchemeName | uppercase}}</td>\r\n                <td>{{savingGroup.DateOfFormation | date: 'dd-MMM-yyyy'}}</td>\r\n                <td>{{savingGroup.NumberOfMembers}}</td>\r\n                <td>{{savingGroup.ContactNumber}}</td>\r\n                <td>\r\n                  <button (click)='setSHGID(savingGroup.Id, savingGroup.Code)' routerLink='../shg_master/member' class=\"btn btn-primary\">\r\n                    <span *ngIf=\"lang.en\">ADD MEMBERS</span>\r\n                    <span *ngIf=\"lang.mr\">सदस्य जोडा </span>\r\n                  </button>\r\n                </td>\r\n                <td style=\"width:22%;text-align:center;\">\r\n                  <button title=\"View Details\" class=\"Lastbutton\" data-toggle=\"modal\" class=\"btn btn-primary\" data-target=\"#viewShgMasterForm\"\r\n                    (click)='viewSHGDetail(savingGroup.Id)'>\r\n                    <span *ngIf=\"lang.en\">VIEW</span>\r\n                    <span *ngIf=\"lang.mr\">पहा</span>\r\n                  </button>\r\n                  <button title=\"Update Details\" class=\"Lastbutton\" data-toggle=\"modal\" class=\"btn btn-primary\" data-target=\"#updateShgMasterForm\"\r\n                    (click)='setUpdateData(savingGroup)'>\r\n                    <span *ngIf=\"lang.en\">UPDATE</span>\r\n                  </button>\r\n\r\n                  <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#deleteSHG\" (click)=\"fordelete(savingGroup)\">\r\n                    <span *ngIf=\"lang.en\">DELETE</span>\r\n                    <span *ngIf=\"lang.mr\">काढून टाका </span>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- data table end -->\r\n</section>\r\n<!-- Modal -->\r\n<div id=\"createShgMasterForm\" class=\"modal\" role=\"dialog\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        <h4 class=\"modal-title\">\r\n          <span *ngIf=\"lang.en\">NEW SHG FORM</span>\r\n          <span *ngIf=\"lang.mr\">नवीन एसएचजी फॉर्म</span>\r\n        </h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"\">\r\n          <form #shgForm=\"ngForm\" class=\"input-group\" novalidate>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">SHG CODE</span>\r\n                    <span *ngIf=\"lang.mr\">एसएचजी कोड</span>\r\n                  </label>\r\n                  <input value=\"{{nextCode}}\" type=\"text\" disabled class=\"form-control\" id=\"Code\">\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">SHG SCHEME</span>\r\n                    <span *ngIf=\"lang.mr\">एसएचजी योजना</span>\r\n                  </label>\r\n                  <select class=\"form-control\" (ngModel)=\"SchemeId\" name=\"SchemeId\" required #SchemeId=\"ngModel\">\r\n                    <option *ngFor=\"let scheme of schemes\" [value]=\"scheme.Key\">{{scheme.Value}}</option>\r\n                  </select>\r\n                  <div *ngIf=\"SchemeId.invalid && SchemeId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Select Scheme !</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया योजना निवडा !</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">SHG NAME</span>\r\n                    <span *ngIf=\"lang.mr\">एसएचजी चे नाव</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"text\" (ngModel)=\"Name\" class=\"form-control\" id=\"Name\" name=\"Name\" required #Name=\"ngModel\">\r\n                  <div *ngIf=\"Name.invalid && Name.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Enter Shg Name !</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया एसएचजी चे नाव भरा !</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">SHG FORMATION DATE</span>\r\n                    <span *ngIf=\"lang.mr\">एसएचजी स्थापना दिनंक</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <!-- <ng-datepicker class=\"dt-picker-format\" (ngModel)=\"DateOfFormation\" #DateOfFormation=\"ngModel\" [options]=\"options\" name=\"DateOfFormation\">\r\n                    </ng-datepicker> -->\r\n\r\n                  <ng-datepicker class=\"dt-picker-format\" [(ngModel)]=\"DateOfFormation\" #formationdate [options]=\"options\" name=\"DateOfFormation\">\r\n                  </ng-datepicker>\r\n                  <!-- <input type=\"date\" (ngModel)=\"DateOfFormation\" class=\"form-control\" id=\"DateOfFormation\" name=\"DateOfFormation\" required\r\n                    #DateOfFormation=\"ngModel\"> -->\r\n                  <!-- <div *ngIf=\"DateOfFormation.invalid && DateOfFormation.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\"> Please Select Date Of Formation ! </span>\r\n                    <span *ngIf=\"lang.mr\">कृपया एसएचजी निर्मीती दिनांक निवडा ! </span>\r\n                  </div> -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"date\">\r\n                    <span *ngIf=\"lang.en\">SHG MEETING DATE</span>\r\n                    <span *ngIf=\"lang.mr\">एसएचजी मिटिंग दिनांक</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <select (ngModel)=\"MeetingDate\" class=\"form-control\" id=\"MeetingDate\" name=\"MeetingDate\" required #MeetingDate=\"ngModel\">\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"11\">11</option>\r\n                    <option value=\"12\">12</option>\r\n                    <option value=\"13\">13</option>\r\n                    <option value=\"14\">14</option>\r\n                    <option value=\"15\">15</option>\r\n                    <option value=\"16\">16</option>\r\n                    <option value=\"17\">17</option>\r\n                    <option value=\"18\">18</option>\r\n                    <option value=\"19\">19</option>\r\n                    <option value=\"20\">20</option>\r\n                    <option value=\"21\">21</option>\r\n                    <option value=\"22\">22</option>\r\n                    <option value=\"23\">23</option>\r\n                    <option value=\"24\">24</option>\r\n                    <option value=\"25\">25</option>\r\n                    <option value=\"26\">26</option>\r\n                    <option value=\"27\">27</option>\r\n                    <option value=\"28\">28</option>\r\n                    <option value=\"29\">29</option>\r\n                    <option value=\"30\">30</option>\r\n                    <option value=\"31\">31</option>\r\n                  </select>\r\n                  <div *ngIf=\"MeetingDate.invalid && MeetingDate.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Select SHG Meeting Date !</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया एसएचजी मिटिंग तारीख निवडा !</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">AREA</span>\r\n                    <span *ngIf=\"lang.mr\">क्षेत्र</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <select (ngModel)=\"AreaId\" name=\"AreaId\" class=\"form-control\" id=\"sel1\" required #AreaId=\"ngModel\">\r\n                    <option *ngFor=\"let area of areas\" [value]=\"area.Key\">{{area.Value}}</option>\r\n                  </select>\r\n                  <div *ngIf=\"AreaId.invalid && AreaId.touched\" class=\"alert-danger comman-error-mesage\">\r\n\r\n                    <span *ngIf=\"lang.en\">Please Select Area !</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया क्षेत्र निवडा !</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">ADDRESS</span>\r\n                    <span *ngIf=\"lang.mr\">पत्ता</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"text\" (ngModel)=\"Address\" class=\"form-control\" id=\"Place\" name=\"Address\" required maxlength=\"200\" #Address=\"ngModel\">\r\n                  <div *ngIf=\"Address.invalid && Address.touched\" class=\"alert-danger comman-error-mesage\">\r\n\r\n                    <span *ngIf=\"lang.en\">Please Enter Address !</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया पत्ता भरा !</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">VILLAGE</span>\r\n                    <span *ngIf=\"lang.mr\">गाव</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <select class=\"form-control\" name=\"VillageId\" id=\"village\" (ngModel)=\"village\" required #village=\"ngModel\">\r\n                    <option *ngFor=\"let village of villagess\" [value]=\"village.Key\">{{village.Value}}</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">DISTRICT</span>\r\n                    <span *ngIf=\"lang.mr\">जिल्हा</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <select (ngModel)=\"districtIdcreate\" name=\"districtIdcreate\" (change)=\"getselectTaluka(districtIdcreate.viewModel)\" class=\"form-control\"\r\n                    id=\"districtIdcreate\" required #districtIdcreate=\"ngModel\">\r\n                    <option *ngFor=\"let dis of ditricts\" [value]=\"dis.Id\">{{dis.Name}}</option>\r\n                  </select>\r\n                  <div *ngIf=\"districtIdcreate.invalid && districtIdcreate.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\"> Please Select District !</span>\r\n                    <span *ngIf=\"lang.mr\"> कृपया जिल्हा निवडा !</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">TALUKA</span>\r\n                    <span *ngIf=\"lang.mr\">तालुका</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <select (ngModel)=\"TalukaId\" name=\"TalukaId\" class=\"form-control\" id=\"TalukaId\" required #TalukaId=\"ngModel\">\r\n                    <option *ngFor=\"let getAllTaluka of talukas\" [value]=\"getAllTaluka.Key\">{{getAllTaluka.Value}}</option>\r\n                  </select>\r\n                  <div *ngIf=\"TalukaId.invalid && TalukaId.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Select Taluka !</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया तालुका निवडा !</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">PIN CODE</span>\r\n                    <span *ngIf=\"lang.mr\">पिन कोड</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"number\" (ngModel)=\"PINCode\" class=\"form-control\" id=\"PINCode\" name=\"PINCode\" maxlength=\"10\" required #PINCode=\"ngModel\">\r\n                  <div *ngIf=\"PINCode.invalid && PINCode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <div [hidden]=\"!PINCode.hasError('required')\">\r\n                      <span *ngIf=\"lang.en\">Pin Code is requierd !</span>\r\n                      <span *ngIf=\"lang.mr\">पिन कोड आवश्यक !</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">PAN CARD NUMBER</span>\r\n                    <span *ngIf=\"lang.mr\">पॅन कार्ड नंबर</span>\r\n                  </label>\r\n                  <input type=\"text\" (ngModel)=\"PANnumber\" class=\"form-control\" id=\"Place\" name=\"PANnumber\" required maxlength=\"10\" #PANnumber=\"ngModel\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"from-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">BANK A/C NUMBER</span>\r\n                    <span *ngIf=\"lang.mr\">बँक खाते क्रमांक</span>\r\n                    <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                  </label>\r\n                  <input type=\"number\" [(ngModel)]=\"BankAccountNumber\" class=\"form-control\" id=\"BankAccountNumber\" name=\"BankAccountNumber\"\r\n                    required #BankAccountNumberHash1=\"ngModel\" />\r\n                  <div *ngIf=\"BankAccountNumberHash1.invalid && BankAccountNumberHash1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <div [hidden]=\"!BankAccountNumberHash1.hasError('required')\">Bank Account Number is required</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"from-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">CONFIRM BANK A/C NUMBER</span>\r\n                    <span *ngIf=\"lang.mr\">कन्फर्म बँक खाते क्रमांक</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"number\" [(ngModel)]=\"BankAccountNumber_\" class=\"form-control\" id=\" BankAccountNumber_\" name=\"BankAccountNumber_\"\r\n                    #BankAccountNumberhash1_=\"ngModel\">\r\n                  <div *ngIf=\"BankAccountNumber != BankAccountNumber_\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Account number is not match with confirm bank account number !</span>\r\n                    <span *ngIf=\"lang.mr\">बँक नंबरच्या पुष्टीकरणासह खाते क्रमांक जुळत नाही!</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">BANK NAME</span>\r\n                    <span *ngIf=\"lang.mr\">बँकेचे नाव</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"text\" (ngModel)=\"BankName\" class=\"form-control\" id=\"BankName\" name=\"BankName\" required maxlength=\"50\" #BankName=\"ngModel\">\r\n                  <div *ngIf=\"BankName.invalid && BankName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Enter Bank Name !</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया बँकेचे नाव भरा !</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">BRANCH NAME</span>\r\n                    <span *ngIf=\"lang.mr\">शाखाचे नाव</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"text\" (ngModel)=\"BranchName\" class=\"form-control\" id=\"BranchName\" name=\"BranchName\" maxlength=\"50\" required\r\n                    #BranchName=\"ngModel\">\r\n                  <div *ngIf=\"BranchName.invalid && BranchName.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Enter Branch Name !</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया बांचचे नाव भरा !</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">IFSC CODE</span>\r\n                    <span *ngIf=\"lang.mr\">आयएफएससी कोड</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <input type=\"text\" (ngModel)=\"IFSCCode\" class=\"form-control\" id=\"IFSCCode\" name=\"IFSCCode\" maxlength=\"25\" required #IFSCCode=\"ngModel\">\r\n                  <div *ngIf=\"IFSCCode.invalid && IFSCCode.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Enter IFSC Code !</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया आयएफएससी कोड भरा !</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">BANK ADDRESS</span>\r\n                    <span *ngIf=\"lang.mr\">बँकेचा पत्ता</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>\r\n                  <textarea type=\"text\" (ngModel)=\"BankAddress\" class=\"form-control\" id=\"BankAddress\" name=\"BankAddress\" required maxlength=\"200\"\r\n                    #BankAddress=\"ngModel\"></textarea>\r\n                  <div *ngIf=\"BankAddress.invalid && BankAddress.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <span *ngIf=\"lang.en\">Please Enter Bank Address !</span>\r\n                    <span *ngIf=\"lang.mr\">कृपया बँकेचा पत्ता भरा !</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"text\">\r\n                    <span *ngIf=\"lang.en\">CONTACT NUMBER</span>\r\n                    <span *ngIf=\"lang.mr\">संपर्क क्रमांक</span>\r\n                    <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                  </label>             \r\n                  <input type=\"text\" (ngModel)=\"ContactNumber\" class=\"form-control\" id=\"ContactNumber\" name=\"ContactNumber\" maxlength=\"25\"\r\n                    required #ContactNumber=\"ngModel\">\r\n                  <div *ngIf=\"ContactNumber.errors && (ContactNumber.dirty || ContactNumber.touched)\" class=\" alert alert-danger\">\r\n                    <div [hidden]=\"!ContactNumber.errors.required\">Contact Number is required !</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <div class=\"form-group\">\r\n                <button type=\"button\" [disabled]=\"shgForm.invalid\" class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"save(shgForm)\">\r\n                  <span *ngIf=\"lang.en\">ADD SHG</span>\r\n                  <span *ngIf=\"lang.mr\">एसएचजी जोडा</span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                  <span *ngIf=\"lang.en\">CANCEL</span>\r\n                  <span *ngIf=\"lang.mr\">रद्द करा</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- View SHG Model-->\r\n<div *ngIf=\"shgDetails != null\" class=\"modal\" id=\"viewShgMasterForm\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"viewShgMasterForm\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\" style=\"width:1160px\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <h4 class=\"modal-title\" id=\"myModalLabel\">\r\n          <span *ngIf=\"lang.en\"> VIEW SHG DETAILS</span>\r\n          <span *ngIf=\"lang.mr\">एसएचजी तपशील पहा </span>\r\n        </h4>\r\n      </div>\r\n\r\n      <div class=\"modal-body\">\r\n        <div>\r\n          <h3>\r\n            <span *ngIf=\"lang.en\"> PERSONAL DETAIL</span>\r\n            <span *ngIf=\"lang.mr\">वैयक्तिक तपशील </span>\r\n          </h3>\r\n\r\n        </div>\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> SHG SCHEME CODE</span>\r\n                <span *ngIf=\"lang.mr\">एसएचजी योजना कोड </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> SCHEME NAME</span>\r\n                <span *ngIf=\"lang.mr\">योजनेचे नाव </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> SHG CODE</span>\r\n                <span *ngIf=\"lang.mr\">एसएचजी कोड </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> SHG NAME</span>\r\n                <span *ngIf=\"lang.mr\">एसएचजी चे नाव </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> SHG MEETING DATE</span>\r\n                <span *ngIf=\"lang.mr\">एसएचजी मिटिंग तारीख </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> SHG CONTACT NUMBER</span>\r\n                <span *ngIf=\"lang.mr\">एसएचजी संपर्क क्रमांक </span>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{{shgDetails.SchemeId}}</td>\r\n              <td>{{shgDetails.SchemeName | uppercase}}</td>\r\n              <td>{{shgDetails.Code | uppercase}}</td>\r\n              <td>{{shgDetails.Name | uppercase}}</td>\r\n              <td>{{shgDetails.MeetingDate}}</td>\r\n              <td>{{shgDetails.ContactNumber}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div>\r\n          <h3>\r\n            <span *ngIf=\"lang.en\"> BANK DETAIL</span>\r\n            <span *ngIf=\"lang.mr\">बँकेचा तपशील </span>\r\n          </h3>\r\n        </div>\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> BANK A/C NUMBER</span>\r\n                <span *ngIf=\"lang.mr\">बँक खाते क्रमांक </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> IFSC CODE</span>\r\n                <span *ngIf=\"lang.mr\">आयएफएससी कोड </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> BANK NAME</span>\r\n                <span *ngIf=\"lang.mr\">बँकेचे नाव </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> BANK BRANCH NAME</span>\r\n                <span *ngIf=\"lang.mr\">बँक शाखाचे नाव </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> BANK ADDRESS</span>\r\n                <span *ngIf=\"lang.mr\">बँकेचा पत्ता </span>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{{shgDetails.BankAccountNumber}}</td>\r\n              <td>{{shgDetails.IFSCCode | uppercase}}</td>\r\n              <td>{{shgDetails.BankName | uppercase}}</td>\r\n              <td>{{shgDetails.BranchName | uppercase}}</td>\r\n              <td>{{shgDetails.BankAddress | uppercase}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div>\r\n          <h3>\r\n            <span *ngIf=\"lang.en\"> ADDRESS DETAIL</span>\r\n            <span *ngIf=\"lang.mr\">पत्याचा तपशील</span>\r\n          </h3>\r\n        </div>\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> AREA</span>\r\n                <span *ngIf=\"lang.mr\">क्षेत्र </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> ADDRESS</span>\r\n                <span *ngIf=\"lang.mr\">पत्ता </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> VILLAGE</span>\r\n                <span *ngIf=\"lang.mr\">गाव </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> TALUKA</span>\r\n                <span *ngIf=\"lang.mr\">तालुका </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> DISTRICT</span>\r\n                <span *ngIf=\"lang.mr\">जिल्हा </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> PIN CODE</span>\r\n                <span *ngIf=\"lang.mr\">पिन कोड </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> PAN CARD NUMBER</span>\r\n                <span *ngIf=\"lang.mr\">पॅन कार्ड नंबर </span>\r\n              </th>\r\n              <th>\r\n                <span *ngIf=\"lang.en\"> SHG FORMATION DATE</span>\r\n                <span *ngIf=\"lang.mr\">एसएचजी निर्मीती तारीख </span>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{{shgDetails.Area | uppercase}}</td>\r\n              <td>{{shgDetails.Address | uppercase}}</td>\r\n              <td>{{shgDetails.VillageName | uppercase}}</td>\r\n              <td>{{shgDetails.Taluka | uppercase}}</td>\r\n              <td>{{shgDetails.District | uppercase}}</td>\r\n              <td>{{shgDetails.PINCode | uppercase}}</td>\r\n              <td>{{shgDetails.PANNumber | uppercase}}</td>\r\n              <td>{{shgDetails.DateOfFormation | date :'dd-MMM-yyyy' }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" id=\"click-button1\" data-dismiss=\"modal\">\r\n          <span *ngIf=\"lang.en\"> CLOSE</span>\r\n          <span *ngIf=\"lang.mr\">बंद करा</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"shgUpdateModel != null\" id=\"updateShgMasterForm\" class=\"modal\" role=\"dialog\">\r\n  <div class=\"modal-dialog\">\r\n    <!-- Modal content-->\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        <h4 class=\"modal-title\">\r\n          UPDATE SHG FORM\r\n        </h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form class=\"input-group\" novalidate>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\">SHG CODE</span>\r\n                  <span *ngIf=\"lang.mr\">एसएचजी कोड</span>\r\n                </label>\r\n                <input value=\"{{shgUpdateModel.Code}}\" type=\"text\" disabled class=\"form-control\" id=\"Code\">\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\">SHG SCHEME </span>\r\n                  <span *ngIf=\"lang.mr\">एसएचजी योजना </span>\r\n                </label>\r\n                <select class=\"form-control\" [(ngModel)]=\"shgUpdateModel.SchemeId\" name=\"SchemeId\" required #SchemeId1=\"ngModel\">\r\n                  <option *ngFor=\"let scheme of schemes\" [value]=\"scheme.Key\">{{scheme.Value}}</option>\r\n                </select>\r\n                <div *ngIf=\"SchemeId1.invalid && SchemeId1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <span *ngIf=\"lang.en\">Please Select Scheme ! </span>\r\n                  <span *ngIf=\"lang.mr\">कृपया योजना निवडा ! </span>\r\n                </div>\r\n              </div>\r\n              <div hidden>\r\n                <input type=\"text\" id=\"Id\" name=\"Id\" [(ngModel)]=\"shgUpdateModel.Id\" #Id=\"ngModel\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\">SHG NAME </span>\r\n                  <span *ngIf=\"lang.mr\">एसएचजी चे नाव </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <input type=\"text\" [(ngModel)]=\"shgUpdateModel.Name\" class=\"form-control\" id=\"Name\" name=\"Name\" required #Name1=\"ngModel\">\r\n                <div *ngIf=\"Name1.invalid && Name1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <span *ngIf=\"lang.en\"> Please Enter Shg Name ! </span>\r\n                  <span *ngIf=\"lang.mr\">कृपया एसएचजी चे नाव भरा ! </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\">SHG FORMATION DATE</span>\r\n                  <span *ngIf=\"lang.mr\">एसएचजी स्थापना दिनांक</span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <input type=\"date\" [(ngModel)]=\"shgUpdateModel.DateOfFormation\" class=\"form-control\" id=\"DateOfFormation\" name=\"DateOfFormation\"\r\n                  required #DateOfFormation1=\"ngModel\">\r\n                <div *ngIf=\"DateOfFormation1.invalid && DateOfFormation1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <span *ngIf=\"lang.en\">Please Select Date Of Formation !</span>\r\n                  <span *ngIf=\"lang.mr\">कृपया एसएचजी निर्मीती दिनांक निवडा !</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"date\">\r\n                  <span *ngIf=\"lang.en\">SHG MEETING DATE</span>\r\n                  <span *ngIf=\"lang.mr\">एसएचजी मिटिंग दिनांक</span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <select [(ngModel)]=\"shgUpdateModel.MeetingDate\" class=\"form-control\" id=\"MeetingDate\" name=\"MeetingDate\" required #MeetingDate1=\"ngModel\">\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"5\">5</option>\r\n                  <option value=\"6\">6</option>\r\n                  <option value=\"7\">7</option>\r\n                  <option value=\"8\">8</option>\r\n                  <option value=\"9\">9</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"11\">11</option>\r\n                  <option value=\"12\">12</option>\r\n                  <option value=\"13\">13</option>\r\n                  <option value=\"14\">14</option>\r\n                  <option value=\"15\">15</option>\r\n                  <option value=\"16\">16</option>\r\n                  <option value=\"17\">17</option>\r\n                  <option value=\"18\">18</option>\r\n                  <option value=\"19\">19</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"21\">21</option>\r\n                  <option value=\"22\">22</option>\r\n                  <option value=\"23\">23</option>\r\n                  <option value=\"24\">24</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"26\">26</option>\r\n                  <option value=\"27\">27</option>\r\n                  <option value=\"28\">28</option>\r\n                  <option value=\"29\">29</option>\r\n                  <option value=\"30\">30</option>\r\n                  <option value=\"31\">31</option>\r\n                </select>\r\n                <div *ngIf=\"MeetingDate1.invalid && MeetingDate1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <span *ngIf=\"lang.en\"> Please Select SHG Meeting Date ! </span>\r\n                  <span *ngIf=\"lang.mr\"> कृपया एसएचजी मिटिंग तारीख निवडा ! </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> AREA </span>\r\n                  <span *ngIf=\"lang.mr\"> क्षेत्र </span>\r\n\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <select [(ngModel)]=\"shgUpdateModel.AreaId\" name=\"AreaId\" class=\"form-control\" id=\"sel1\" required #AreaId1=\"ngModel\">\r\n                  <option *ngFor=\"let area of areas\" [value]=\"area.Key\">{{area.Value}}</option>\r\n                </select>\r\n                <div *ngIf=\"AreaId1.invalid && AreaId1.touched\" class=\"alert-danger comman-error-mesage\">\r\n\r\n                  <span *ngIf=\"lang.en\"> Please Select Area ! </span>\r\n                  <span *ngIf=\"lang.mr\"> कृपया क्षेत्र निवडा ! </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> ADDRESS </span>\r\n                  <span *ngIf=\"lang.mr\"> पत्ता </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <input type=\"text\" [(ngModel)]=\"shgUpdateModel.Address\" class=\"form-control\" id=\"Place\" name=\"Address\" required maxlength=\"200\"\r\n                  #Address1=\"ngModel\">\r\n                <div *ngIf=\"Address1.invalid && Address1.touched\" class=\"alert-danger comman-error-mesage\">\r\n\r\n                  <span *ngIf=\"lang.en\"> Please Enter Address ! </span>\r\n                  <span *ngIf=\"lang.mr\"> कृपया पत्ता भरा ! </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> VILLAGE </span>\r\n                  <span *ngIf=\"lang.mr\">गाव </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <select class=\"form-control\" name=\"VillageId\" id=\"village\" [(ngModel)]=\"shgUpdateModel.VillageId\" required #village1=\"ngModel\">\r\n                  <option *ngFor=\"let village of villagess\" [value]=\"village.Key\">{{village.Value}}</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> DISTRICT </span>\r\n                  <span *ngIf=\"lang.mr\">जिल्हा </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <select [(ngModel)]=\"shgUpdateModel.DistrictId\" name=\"DistrictId\" (change)=\"getselectTaluka(districtIdcreate.viewModel)\"\r\n                  class=\"form-control\" id=\"districtIdcreate\" required #districtIdcreate1=\"ngModel\">\r\n                  <option *ngFor=\"let dis of ditricts\" [value]=\"dis.Id\">{{dis.Name}}</option>\r\n                </select>\r\n                <div *ngIf=\"districtIdcreate1.invalid && districtIdcreate1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <span *ngIf=\"lang.en\"> Please Select District ! </span>\r\n                  <span *ngIf=\"lang.mr\"> कृपया जिल्हा निवडा ! </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> TALUKA </span>\r\n                  <span *ngIf=\"lang.mr\">तालुका </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <select [(ngModel)]=\"shgUpdateModel.TalukaId\" name=\"TalukaId\" class=\"form-control\" id=\"TalukaId\" required #TalukaId1=\"ngModel\">\r\n                  <option *ngFor=\"let getAllTaluka of talukas\" [value]=\"getAllTaluka.Key\">{{getAllTaluka.Value}}</option>\r\n                </select>\r\n                <div *ngIf=\"TalukaId1.invalid && TalukaId1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <span *ngIf=\"lang.en\"> Please Select Taluka ! </span>\r\n                  <span *ngIf=\"lang.mr\"> कृपया तालुका निवडा ! </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> PIN CODE </span>\r\n                  <span *ngIf=\"lang.mr\">पिन कोड </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <input type=\"text\" [(ngModel)]=\"shgUpdateModel.PINCode\" class=\"form-control\" id=\"PINCode\" name=\"PINCode\" maxlength=\"10\" required\r\n                  #PINCode1=\"ngModel\">\r\n                <div *ngIf=\"PINCode1.invalid && PINCode1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <div [hidden]=\"!PINCode.hasError('required')\">\r\n                    <span *ngIf=\"lang.en\"> Pin Code is requierd ! </span>\r\n                    <span *ngIf=\"lang.mr\">पिन कोड आवश्यक ! </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> PAN CARD NUMBER </span>\r\n                  <span *ngIf=\"lang.mr\"> पॅन कार्ड नंबर</span>\r\n                </label>{{shgUpdateModel.PANNumber}}\r\n                <input type=\"text\" [(ngModel)]=\"shgUpdateModel.PANNumber\" class=\"form-control\" id=\"PANnumber\" name=\"PANnumber\" required maxlength=\"18\"\r\n                  #PANnumber1=\"ngModel\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"from-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> BANK A/C NUMBER </span>\r\n                  <span *ngIf=\"lang.mr\"> बँक खाते क्रमांक</span>\r\n                  <!-- <span class=\"mandatory_field\" style=\"color:red;\">*</span> -->\r\n                </label>\r\n                <input type=\"number\" [(ngModel)]=\"shgUpdateModel.BankAccountNumber\" class=\"form-control\" id=\"BankAccountNumber\" name=\"BankAccountNumber\"\r\n                  required #BankAccountNumberHash1=\"ngModel\" />\r\n                <div *ngIf=\"BankAccountNumberHash1.invalid && BankAccountNumberHash1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <div [hidden]=\"!BankAccountNumberHash1.hasError('required')\">Bank Account Number is required</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> BANK NAME</span>\r\n                  <span *ngIf=\"lang.mr\"> बँकेचे नाव </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <input type=\"text\" [(ngModel)]=\"shgUpdateModel.BankName\" class=\"form-control\" id=\"BankName\" name=\"BankName\" required maxlength=\"50\"\r\n                  #BankName1=\"ngModel\">\r\n                <div *ngIf=\"BankName1.invalid && BankName1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <span *ngIf=\"lang.en\"> Please Enter Bank Name !</span>\r\n                  <span *ngIf=\"lang.mr\"> कृपया बँकेचे नाव भरा ! </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> BRANCH NAME</span>\r\n                  <span *ngIf=\"lang.mr\"> शाखाचे नाव </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <input type=\"text\" [(ngModel)]=\"shgUpdateModel.BranchName\" class=\"form-control\" id=\"BranchName\" name=\"BranchName\" maxlength=\"50\"\r\n                  required #BranchName1=\"ngModel\">\r\n                <div *ngIf=\"BranchName1.invalid && BranchName1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <span *ngIf=\"lang.en\"> Please Enter Branch Name !</span>\r\n                  <span *ngIf=\"lang.mr\"> कृपया बांचचे नाव भरा ! </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> IFSC CODE</span>\r\n                  <span *ngIf=\"lang.mr\"> आयएफएससी कोड </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <input type=\"text\" [(ngModel)]=\"shgUpdateModel.IFSCCode\" class=\"form-control\" id=\"IFSCCode\" name=\"IFSCCode\" maxlength=\"25\"\r\n                  required #IFSCCode1=\"ngModel\">\r\n                <div *ngIf=\"IFSCCode.invalid && IFSCCode1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <span *ngIf=\"lang.en\"> Please Enter IFSC Code !</span>\r\n                  <span *ngIf=\"lang.mr\"> कृपया आयएफएससी कोड भरा ! </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> BANK ADDRESS</span>\r\n                  <span *ngIf=\"lang.mr\"> बँकेचा पत्ता </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <textarea type=\"text\" [(ngModel)]=\"shgUpdateModel.BankAddress\" class=\"form-control\" id=\"BankAddress\" name=\"BankAddress\" required\r\n                  maxlength=\"200\" #BankAddress1=\"ngModel\"></textarea>\r\n                <div *ngIf=\"BankAddress1.invalid && BankAddress1.touched\" class=\"alert-danger comman-error-mesage\">\r\n                  <span *ngIf=\"lang.en\"> Please Enter Bank Address !</span>\r\n                  <span *ngIf=\"lang.mr\"> कृपया बँकेचा पत्ता भरा ! </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> CONTACT NUMBER</span>\r\n                  <span *ngIf=\"lang.mr\"> संपर्क क्रमांक </span>\r\n                  <span class=\"mandatory_field\" style=\"color:red;\">*</span>\r\n                </label>\r\n                <input type=\"number\" [(ngModel)]=\"shgUpdateModel.ContactNumber\" class=\"form-control\" id=\"ContactNumber\" name=\"ContactNumber\"\r\n                  required #ContactNumber1=\"ngModel\" maxlength=\"12\">\r\n                <div *ngIf=\"ContactNumber1.errors && (ContactNumber1.dirty || ContactNumber1.touched)\" class=\" alert alert-danger\">\r\n                  <div [hidden]=\"!ContactNumber.errors.required\">Contact Number is required !</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\" style=\"border:none;\">\r\n          <div class=\"col-md-12\">\r\n            <button class=\"btn btn-primary\" data-dismiss=\"modal\" (click)=\"updateSHG(UpdateShgForm)\">UPDATE</button>\r\n            <button class=\"btn btn-default\" data-dismiss=\"modal\" style=\"float:right\"> CANCEL</button>\r\n          </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div id=\"deleteSHG\" class=\"modal\" role=\"dialog\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        <h4 class=\"modal-title\">\r\n          <span *ngIf=\"lang.en\">DELETE SHG </span>\r\n        </h4>\r\n      </div>\r\n      <div *ngIf=\"AllowDelete\">\r\n        <div class=\"modal-body\">\r\n          <p>\r\n            <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n            <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n          </p>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"\">\r\n            <div class=\"modal-footer\">\r\n              <div class=\"form-group\">\r\n                <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-primary\" (click)=\"deleteMember(deleterecord.Id)\">\r\n                  <span *ngIf=\"lang.en\">Delete Confirm </span>\r\n                  <span *ngIf=\"lang.mr\">होय </span>\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                  <span *ngIf=\"lang.en\">NO </span>\r\n                  <span *ngIf=\"lang.mr\">नाही </span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"NotAllowDelete\" class=\"form-group\">\r\n        <p>{{fd}}</p>\r\n        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">\r\n          <span *ngIf=\"lang.en\">OK </span>\r\n          <span *ngIf=\"lang.mr\">नाही </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/vo/shg_master/shg_master.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ShgMasterComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shg_master_model__ = __webpack_require__("../../../../../src/app/components/vo/shg_master/shg_master.model.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_common_service__ = __webpack_require__("../../../../../src/app/services/common.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__services_reports_exportexcel__ = __webpack_require__("../../../../../src/app/services/reports/exportexcel.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_date_fns_locale_en__ = __webpack_require__("../../../../date-fns/locale/en/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_date_fns_locale_en___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_date_fns_locale_en__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








//import { CustomFormsModule } from 'ng2-validation';





var ShgMasterComponent = (function () {
    function ShgMasterComponent(_voservice, _commonService, _common_message, _router, lang, forEditSHG, _access_token, _globalURL, globalVariable, exportToPDF, exportToExcel) {
        this._voservice = _voservice;
        this._commonService = _commonService;
        this._common_message = _common_message;
        this._router = _router;
        this.lang = lang;
        this.forEditSHG = forEditSHG;
        this._access_token = _access_token;
        this._globalURL = _globalURL;
        this.globalVariable = globalVariable;
        this.exportToPDF = exportToPDF;
        this.exportToExcel = exportToExcel;
        this.NotAllowDelete = false;
        this.AllowDelete = false;
        this.deleteDisable = true;
        this.savingGroups = "";
        this.nextCode = "";
        this.DateOfFormation = new Date();
        this.options = {
            minYear: 2016,
            maxYear: (new Date().getFullYear() + 1),
            displayFormat: 'MMM D[,] YYYY',
            barTitleFormat: 'MMMM YYYY',
            dayNamesFormat: 'dd',
            firstCalendarDay: 0,
            locale: __WEBPACK_IMPORTED_MODULE_12_date_fns_locale_en__,
            minDate: new Date("2016-03-03"),
            barTitleIfEmpty: 'Click to select a date'
        };
        _globalURL.isLoading = true;
        this.selectDistrictId = null;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
        this.shgDetails = null;
        this.shgUpdateModel = null;
    }
    ShgMasterComponent.prototype.ngOnInit = function () {
        this.getMembers();
        this.getAreaKVP();
        this.getVillageKVP();
        this.getSchemeKVP();
        this.getAllDistrict();
    };
    ShgMasterComponent.prototype.ngAfterViewInit = function () {
        //this.dtTrigger.next();
    };
    ShgMasterComponent.prototype.getNextCode = function (code) {
        var _this = this;
        this._commonService.checkUserSession(sessionStorage.getItem("access_token"));
        this._globalURL.isLoading = true;
        this._commonService.get(this._globalURL.GET_NEXT_CODE + code + "&parentCode=" + this.globalVariable.voBaseCode)
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.nextCode = res.Data;
                _this._globalURL.isLoading = false;
                _this.getAllDistrict();
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    ShgMasterComponent.prototype.setSHGID = function (id, shgCode) {
        sessionStorage.setItem("shgId", id.toString());
        this.globalVariable.SelectedSHGID = id;
        this.globalVariable.shgBaseCode = shgCode;
    };
    ShgMasterComponent.prototype.openEditForm = function (id) {
        var _this = this;
        this._voservice.get(this._globalURL.GET_SHG_BY_ID + id, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.forEditSHG = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    ShgMasterComponent.prototype.getMembers = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.GET_SHG_MASTER + "?status=2", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.savingGroups = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    ShgMasterComponent.prototype.getAllDistrict = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.GET_DISTRICT, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.ditricts = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    ShgMasterComponent.prototype.getSchemeKVP = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.GET_SCHEME_KVP, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.schemes = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    //village kvp 
    ShgMasterComponent.prototype.getVillageKVP = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.KVPGET_VILLAGE, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.villagess = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    ShgMasterComponent.prototype.getAreaKVP = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.GET_AREA_KVP, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.areas = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    ShgMasterComponent.prototype.getselectTaluka = function (id) {
        var _this = this;
        this._globalURL.isLoading = true;
        var finalURl = this._globalURL.GET_DISTRICT_BY_TALUKA_KEY_VALUE_PAIR + "" + id;
        this._voservice.get(finalURl, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.talukas = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this._globalURL.isLoading = false;
                _this.message = _this._common_message.WarningMsg;
                _this.showErrorMessage = true;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    ShgMasterComponent.prototype.viewSHGDetail = function (id) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._voservice.get(this._globalURL.GET_SHG_DETAILD_BY_ID + id, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.shgDetails = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    ShgMasterComponent.prototype.getMemberDetails = function (id_) {
        var _this = this;
        this._voservice.get(this._globalURL.GET_SHG_MASTER, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.savingGroups = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    ShgMasterComponent.prototype.save = function (data, formationdate) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this.shgForm = data;
        data.value.DistrictId = data.value.districtIdcreate;
        data.value.Code = this.nextCode;
        data.value.ParentCode = this.globalVariable.voBaseCode;
        //data.value.DateOfFormation = this._commonService.convertToDate(data.value.DateOfFormation); 
        //data.value.DateOfFormation = this._commonService.convertToDate(formationdate); 
        this._voservice.post(this._globalURL.POST_SHG_MASTER, data.value, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this.shgForm.control.reset();
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.SHGCreatedMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getMembers();
                    //   this.shgForm.control.reset();
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
            else {
                if (res.Status == true) {
                    _this.shgForm.control.reset();
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.SHGCreatedMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getMembers();
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    ShgMasterComponent.prototype.fordelete = function (data) {
        var _this = this;
        debugger;
        this.AllowDelete = false;
        this.NotAllowDelete = false;
        this.deleterecord = data;
        this._voservice.get((this._globalURL.IF_CAN_DELETE_SHG + data.Id + "&ForId=1"), sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this._globalURL.isLoading = false;
                for (var item in res.Data) {
                    if (res.Data[item].Key == 0) {
                        _this.NotAllowDelete = false;
                        _this.AllowDelete = true;
                    }
                    else {
                        _this.AllowDelete = false;
                        _this.NotAllowDelete = true;
                        _this.fd = res.Data[item].Value;
                    }
                }
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    ShgMasterComponent.prototype.deleteMember = function (id) {
        var _this = this;
        debugger;
        this._voservice.post((this._globalURL.DELETE_SHG + id), null, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.status === 200) {
                _this._globalURL.isLoading = false;
                _this.message = _this._common_message.SHGDeleteMsg;
                _this.showMessage = true;
                setInterval(function () {
                    _this.showMessage = false;
                }, 5000);
                _this.getMembers();
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        }).catch(function (res) {
            _this.showErrorMessage = true;
            _this.message = _this._common_message.CatchBlockMsg;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this._globalURL.isLoading = false;
        });
    };
    ShgMasterComponent.prototype.setUpdateData = function (data) {
        debugger;
        this.getselectTaluka(data.DistrictId);
        this.shgUpdateModel = data;
    };
    ShgMasterComponent.prototype.updateSHG = function () {
        var _this = this;
        debugger;
        this._voservice.post(this._globalURL.UPDATE_SHG_MASTER, this.shgUpdateModel, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined) {
                var data = JSON.parse(res._body);
                if (data.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.SHGUpdateMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getMembers();
                }
                else {
                    _this._globalURL.isLoading = false;
                    _this.message = _this._common_message.shgUpdteFailed;
                    _this.showErrorMessage = true;
                    setInterval(function () {
                        _this.showErrorMessage = false;
                    }, 5000);
                }
            }
            else {
                if (res.Status == true) {
                    _this._globalURL.isLoading = false;
                    _this.showMessage = true;
                    _this.message = _this._common_message.SHGUpdateMsg;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                    _this.getMembers();
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.shgUpdteFailed;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    ShgMasterComponent.prototype.downloadPDF = function () {
        this.exportToPDF.downloadPDF();
    };
    ShgMasterComponent.prototype.voShgExportTopdf = function () {
        this.showErrorMessage = true;
        this.exportToPDF.R33_voShgExportTopdf(this.savingGroups);
        this.showErrorMessage = false;
    };
    ShgMasterComponent.prototype.voShgExportToExcel = function () {
        this.exportToExcel.SHGListExport(this.savingGroups);
    };
    ShgMasterComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/shg_master/shg_master.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_6__services_common_service__["a" /* CommonService */],
            __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__["a" /* CommonMessageComponent */],
            __WEBPACK_IMPORTED_MODULE_5__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_10__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_3__shg_master_model__["a" /* ShgMasterModel */],
            __WEBPACK_IMPORTED_MODULE_4__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_1__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_7__environments_GlobalVeriables__["a" /* GlobalVariable */],
            __WEBPACK_IMPORTED_MODULE_9__services_reports_exportpdf__["a" /* ExportToPDF */],
            __WEBPACK_IMPORTED_MODULE_11__services_reports_exportexcel__["a" /* ExportToExcel */]])
    ], ShgMasterComponent);
    return ShgMasterComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/shg_master/shg_master.model.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ShgMasterModel; });
var ShgMasterModel = (function () {
    function ShgMasterModel() {
        this.DateOfFormation = new Date();
        this.PINCode = 0;
        this.PANNumber = "";
        this.Id = 0;
        this.DistrictId = 0;
        this.TalukaId = 0;
        this.AreaId = 0;
        this.Code = '';
        this.ParentCode = '';
        this.Name = '';
        this.SchemeId = '';
        this.BankAccountNumber = '';
        this.ConfirmBankAccountnumber = '';
        this.IFSCCode = '';
        this.BankName = '';
        this.BankAddress = '';
        this.AccountOpeningDate = '';
        this.BranchName = '';
        this.VillageName = '';
        this.Place = '';
        this.ContactNumber = '';
        this.DesignationName = '';
    }
    return ShgMasterModel;
}());



/***/ }),

/***/ "../../../../../src/app/components/vo/vo_members/vo_members.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-backdrop in\" *ngIf=\"_globalURL.isLoading\">\r\n  <loading-selector>\r\n  </loading-selector>\r\n</div>\r\n<!-- Content Header (Page header) -->\r\n<div *ngIf=\"showMessage\">\r\n  <message-selector [message]=\"message\">\r\n  </message-selector>\r\n</div>\r\n<div *ngIf=\"showErrorMessage\">\r\n  <error-message-selector [message]=\"message\">\r\n  </error-message-selector>\r\n</div>\r\n<div *ngIf=\"showWarningMessage\">\r\n  <warning-message-selector [message]=\"message\">\r\n  </warning-message-selector>\r\n</div>\r\n<section class=\"content-header\">\r\n  <label class=\"heading-title\">\r\n    <span *ngIf=\"lang.en\">VO MEMBERS FORM</span>\r\n    <span *ngIf=\"lang.mr\"> व्हीओ सदस्य फॉर्म</span>\r\n  </label>\r\n</section>\r\n<!-- Main content -->\r\n<section class=\"content\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"box box-default\">\r\n        <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n          <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#createVOBodyForm\" (click)=\"getDesignations()\">\r\n            <span *ngIf=\"lang.en\"> CREATE/ UPDATE VO BODY</span>\r\n            <span *ngIf=\"lang.mr\"> ग्रामसंस्था बॉडी तयार करा /बदला</span>\r\n          </button>\r\n                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#checkusernamePasswordForm\">\r\n            <span *ngIf=\"lang.en\">CHECK USERNAME/ PASSWORD</span>\r\n          </button>\r\n\r\n          <button title=\"View details\" class=\"btn btn-primary pdf-button\" (click)=\"R38_voMemberSCExportTopdf()\">\r\n            <span>\r\n              <img src=\"/assets/pdf/pdf5.png\" class=\"image-set\" />\r\n            </span>\r\n            PDF\r\n          </button>\r\n          <!-- <button class=\"btn btn-primary\" (click)=\"voMemberExcel()\">EXCEL</button> -->\r\n        </div>\r\n        <!-- <div class=\"box-header TableHeaderInsideAll_Buttons\">\r\n\r\n        </div> -->\r\n        <!-- <button type=\"button\" class=\"btn btn-primary\">नवीन बचतगट बनवा </button> -->\r\n        <div class=\"box-body\">\r\n          <table datatable class=\"\" cellspacing=\"0\" width=\"100%\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\"> MEMBER NAME</span>\r\n                  <span *ngIf=\"lang.mr\"> सदस्याचे नाव </span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\"> DESIGNATION</span>\r\n                  <span *ngIf=\"lang.mr\"> पद</span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\"> SHG NAME</span>\r\n                  <span *ngIf=\"lang.mr\">एसएचजी चे नाव</span>\r\n                </th>\r\n                <th>\r\n                  <span *ngIf=\"lang.en\"> ACTION</span>\r\n                  <span *ngIf=\"lang.mr\">कृती</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let voMember of voMembers\">\r\n                <td>{{voMember.MemberFullName | uppercase}}</td>\r\n                <td>{{voMember.Designation | uppercase}}</td>\r\n                <td>{{voMember.SHGName | uppercase}}</td>\r\n                <td style=\"text-align:center;padding:4px;\">\r\n                  <button class=\"btn btn-primary\" (click)=\"fordelete(voMember)\" data-toggle=\"modal\" data-target=\"#deletevomember\">\r\n                    <span *ngIf=\"lang.en\">REMOVE</span>\r\n                    <span *ngIf=\"lang.mr\">काढूण टाका </span>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- data table end -->\r\n</section>\r\n<!-- Modal -->\r\n<div id=\"createVOBodyForm\" #voBodyForm class=\"modal\" role=\"dialog\">\r\n  <div class=\"modal-dialog\">\r\n    <!-- Modal content-->\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        <h4 class=\"modal-title\">\r\n          <span *ngIf=\"lang.en\"> CREATE / UPDATE VO BODY FORM</span>\r\n          <span *ngIf=\"lang.mr\">ग्रामसंस्था बॉडी तयार करा /बदला </span>\r\n        </h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form #ngAddMember=\"ngForm\" novalidate>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"col-md-5\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <span *ngIf=\"lang.en\"> SELECT DESIGNATION</span>\r\n                  <span *ngIf=\"lang.mr\">पद निवडा </span>\r\n                </label>\r\n                <select [(ngModel)]=\"selectedDesignation\" class=\"form-control\" id=\"VicePresident\" name=\"selectedDesignation\" (change)=\"selectdesignation()\" required #des=\"ngModel\">\r\n                  <option *ngFor=\"let designation of designations\" [value]=\"designation.Id\">{{designation.ForGroup + \" \" + designation.Name}}</option>\r\n                  <div *ngIf=\"des.invalid && des.touched\" class=\"alert-danger comman-error-mesage\">\r\n                    <div [hidden]=\"!des.hasError('required')\">\r\n                      <span *ngIf=\"lang.en\"> Please select Designation !</span>\r\n                      <span *ngIf=\"lang.mr\">कृपया पद निवडा !</span>\r\n                    </div>\r\n                  </div>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-5\">\r\n              <div class=\"form-group\">\r\n                <label for=\"date\">\r\n                  <span *ngIf=\"lang.en\"> SELECT MEMBER</span>\r\n                  <span *ngIf=\"lang.mr\">सदस्य निवडा </span>\r\n                </label>\r\n                <select [(ngModel)]=\"selectedMember\" class=\"form-control\" id=\"VicePresident\" name=\"vomemberNameAndId\" required #mem=\"ngModel\">\r\n                  <option *ngFor=\"let member of members\" [value]=\"member.Key\">{{member.Value}}</option>\r\n                  <div *ngIf=\"mem.invalid && mem.touched\" class=\"alert-danger comman-error-mesage\">\r\n                      <div [hidden]=\"!mem.hasError('required')\">\r\n                        <span *ngIf=\"lang.en\"> Please select Member !</span>\r\n                        <span *ngIf=\"lang.mr\">कृपया सदस्य निवडा !</span>\r\n                      </div>\r\n                    </div>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n              <div>\r\n                <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"voBodyForm.invalid\" *ngIf=\"checkValidUserName\" style=\"margin-top:24px;\" (click)=\"addMember();ngAddMember.reset()\">\r\n                  <span *ngIf=\"lang.en\"> ADD</span>\r\n                  <span *ngIf=\"lang.mr\">समाविष्ट करा </span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\" *ngIf=\"selectedDesignation >= 15 && selectedDesignation <=18\">\r\n            <div class=\"col-md-5\">\r\n              <div class=\"form-group\">\r\n                <label for=\"text\">\r\n                  <!-- <span *ngIf=\"lang.en\">\r\n                    <span *ngIf=\"lang.en\">ENTER USERNAME FOR SCRUITINY COMMITTEE</span>\r\n                    <span *ngIf=\"lang.mr\">छाननी समिती साठी वापरकर्ता भरा </span>\r\n                  </span> -->\r\n                  <span *ngIf=\"lang.en\">ENTER USERNAME FOR SCRUITINY COMMITTEE</span>\r\n                  <span *ngIf=\"lang.mr\">छाननी समिती साठी वापरकर्ता भरा </span>\r\n                </label>\r\n                <input class=\"form-control\" type=\"text\" [(ngModel)]=\"userName\" (change)=\"checkUserName(userName)\" required name=\"userName\" #userName1=\"ngModel\">\r\n                <div *ngIf=\"userName1.errors && (userName1.dirty || userName1.touched)\" class=\"alert-danger comman-error-mesage\">\r\n                  <div [hidden]=\"!userName1.errors.required\">\r\n                    <span *ngIf=\"lang.en\">Error! Please Enter User Name !</span>\r\n                    <span *ngIf=\"lang.mr\">चूक !युजरचे नाव भरा ! </span>\r\n                  </div>\r\n                  <div [hidden]=\"!userName1.errors.minlength\">\r\n                    <span *ngIf=\"lang.en\">Error! User name should be minimum 6 characters !</span>\r\n                    <span *ngIf=\"lang.mr\">चूक !युजरचे नाव कमीत कमी 6 अक्षरी पाहिजे ! </span>\r\n                  </div>\r\n                  <div [hidden]=\"!userName1.errors.maxlength\">\r\n                    <span *ngIf=\"lang.en\">Error! User name cannot be more than 10 characters long !</span>\r\n                    <span *ngIf=\"lang.mr\">चूक !युजर नाव १० अक्षरा पेक्षा जास्त नसावे ! </span>\r\n                  </div>\r\n                </div>\r\n                <div *ngIf=\"validusername\" class=\"alert-danger comman-error-mesage\">\r\n                  <div [hidden]=\"!validusername\">\r\n                    <span *ngIf=\"lang.en\">Error! User name is already taken, please enter new.</span>\r\n                    <span *ngIf=\"lang.mr\">चूक !युजर नाव अगोदर घेतलेले आहे , कृपया दुसरे निवडा. </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>  \r\n            <div class=\"col-md-5\">\r\n              <div class=\"form-group\">\r\n                <label for=\"date\">\r\n                  <span *ngIf=\"lang.en\">ENTER PASSWORD FOR SCRUITINY COMMITTEE</span>\r\n                  <span *ngIf=\"lang.mr\">छाननी समितीसाठी पासवर्ड भरा </span>\r\n                </label>\r\n                <input class=\"form-control\" type=\"password\" [(ngModel)]=\"password\" name=\"password\" required #password1=\"ngModel\" minlength=\"8\">\r\n                <div *ngIf=\"password1.errors && (password1.dirty || password1.touched)\" class=\"alert-danger comman-error-mesage\">\r\n                  <div [hidden]=\"!password1.errors.required\">\r\n                    <span *ngIf=\"lang.en\">Error! Please Enter password !</span>\r\n                    <span *ngIf=\"lang.mr\">चूक !कृपया पासवर्ड भरा ! </span>\r\n                  </div>\r\n                  <div [hidden]=\"!password.errors.minlength\">\r\n                    <span *ngIf=\"lang.en\">Error! Password should be minimum 8 Characters !</span>\r\n                    <span *ngIf=\"lang.mr\">चूक !पासवर्ड कमीत कमीत ८ अक्षरी पाहिजे ! </span>\r\n                  </div>\r\n                </div>\r\n                <div *ngIf=\"password.errors && (password.dirty || password.touched)\" class=\"alert-danger comman-error-mesage\">\r\n                  <div [hidden]=\"!password.errors.minlength\">\r\n                    <span *ngIf=\"lang.en\">Error! Password should be minimum 8 Characters !</span>\r\n                    <span *ngIf=\"lang.mr\">चूक !पासवर्ड कमीत कमीत ८ अक्षरी पाहिजे ! </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-5 col-md-offset-5\">\r\n              <div class=\"form-group\">\r\n                <label for=\"date\">ENTER CONFIRM PASSWORD FOR SCRUITINY COMMITTEE -\r\n                </label>\r\n                <input class=\"form-control\" type=\"password\" [(ngModel)]=\"confirmpassword\" name=\"confirmpassword\" required minlength=\"8\">\r\n                <div *ngIf=\"confirmpassword != password\" class=\"alert-danger comman-error-mesage\">\r\n                  <div [hidden]=\"!checkpassword\">Error! Password and Confirm Password not match with each other.\r\n                  </div>\r\n                  <div [hidden]=\"!password.errors.minlength\">Error! Password should be minimum 8 Characters !</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row col-md-12\">\r\n            <div class=\"col-md-6\" *ngFor=\"let MemberAndDesignationName of MemberAndDesignationList; let rowIndex=index\">\r\n              <div class=\"alert alert-success\">\r\n                <b>{{MemberAndDesignationName.DesignationName}} -</b>\r\n                <b>{{MemberAndDesignationName.MemberId}} {{MemberAndDesignationName.MemberName}}</b>\r\n                <div>\r\n                  <span hidden>{{rowIndex}}</span>\r\n                  <button class=\"btn btn-danger\" (click)=\"removeItem(rowIndex)\">\r\n                    <span *ngIf=\"lang.en\"> REMOVE</span>\r\n                    <span *ngIf=\"lang.mr\">काढूण टाका </span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <div class=\"form-group\">\r\n                            <button type=\"button\" *ngIf=\"showSveButton\" class=\"btn btn-primary pull-left\" data-dismiss=\"modal\" (click)=\"createVOMember(ngAddMember)\">\r\n                <span *ngIf=\"lang.en\">SAVE</span>\r\n                <span *ngIf=\"lang.mr\">जतन करा </span>\r\n              </button>\r\n              <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-default\">\r\n                <span *ngIf=\"lang.en\"> CANCEL</span>\r\n                <span *ngIf=\"lang.mr\">रद्द करा </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div id=\"checkusernamePasswordForm\" class=\"modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\" style=\"border:none;\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">\r\n                    <span *ngIf=\"lang.en\">USERNAME AND PASSWORD</span>\r\n                </h4>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div class=\"\">\r\n                    <div class=\"col-md-6\">\r\n                        <span *ngIf=\"lang.en\"> USERNAME</span>\r\n                    </div>\r\n                    <span class=\"badge col-md-4\" style=\"font-size: 17px;\">{{voMembers[0].Username}}</span>\r\n                </div>\r\n                <div style=\"margin-top:36px;\">\r\n                    <div class=\"col-md-6\">\r\n                        <span *ngIf=\"lang.en\"> PASSWORD</span>\r\n                    </div>\r\n                    <span class=\"badge col-md-4\" style=\"font-size: 17px;\">{{voMembers[0].Password}}</span>\r\n                </div>\r\n                <div class=\"modal-footer\" style=\"border:none;\">\r\n\r\n                    <div class=\"col-md-12\" style=\"margin-top:10px;\">\r\n                        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                    CLOSE\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div id=\"deletevomember\" class=\"modal\" role=\"dialog\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        <h4 class=\"modal-title\">\r\n          <span *ngIf=\"lang.en\">DELETE VO MEMBER </span>\r\n          <span *ngIf=\"lang.mr\">व्हीओ सदस्याचा तपशील काढा </span>\r\n        </h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p>\r\n          <span *ngIf=\"lang.en\">ARE YOU SURE YOU WANT TO DELETE THIS RECORD ? </span>\r\n          <span *ngIf=\"lang.mr\">हा रेकॉर्ड हटवण्यास आपण सहमत आहात का ? </span>\r\n        </p>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"\">\r\n          <div class=\"modal-footer\">\r\n            <div class=\"form-group\">\r\n              <button type=\"button\" data-dismiss=\"modal\" (click)=\"removeVOMember(deleterecord.MemberId)\" class=\"btn btn-primary\">\r\n                <span *ngIf=\"lang.en\">YES </span>\r\n                <span *ngIf=\"lang.mr\">होय </span>\r\n              </button>\r\n              <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">\r\n                <span *ngIf=\"lang.en\">NO </span>\r\n                <span *ngIf=\"lang.mr\">नाही </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/vo/vo_members/vo_members.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VOCMembersComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_access_token__ = __webpack_require__("../../../../../src/app/environments/access_token.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_Global__ = __webpack_require__("../../../../../src/app/environments/Global.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_vo_services__ = __webpack_require__("../../../../../src/app/services/vo.services.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_reports_exportpdf__ = __webpack_require__("../../../../../src/app/services/reports/exportpdf.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__environments_language_config__ = __webpack_require__("../../../../../src/app/environments/language.config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__services_reports_exportexcel__ = __webpack_require__("../../../../../src/app/services/reports/exportexcel.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__ = __webpack_require__("../../../../../src/app/environments/CommanMssage.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









//import { User } from './vo_member.interface';
var VOCMembersComponent = (function () {
    function VOCMembersComponent(_voService, 
        //public memberModel: MemberModel,
        _globalURL, _access_token, exportToPDF, exportToExcel, lang, _router, _common_message) {
        this._voService = _voService;
        this._globalURL = _globalURL;
        this._access_token = _access_token;
        this.exportToPDF = exportToPDF;
        this.exportToExcel = exportToExcel;
        this.lang = lang;
        this._router = _router;
        this._common_message = _common_message;
        this.checkValidUserName = true;
        this.showSveButton = true;
        this.validusername = false;
        this.showErrorMessage = false;
        //public user: User;
        this.selectedMember = 0;
        this.selectedDesignation = 0;
        this.voMembers = null;
        this.MemberAndDesignationList = [];
        this.MemberAndDesignationNamesList = [];
        this.data = {
            "Key": 0, "Value": 0, "MemberName": "", "DesignationName": ""
        };
        //Key Member Id, and Value = Designation Id
        this._username = "";
        this._password = "";
        this.arr = new Array({ key: 0, value: 0 });
        this.userName = "";
        this.password = "";
        this.checkpassword = true;
        if (sessionStorage.getItem("access_token") == "") {
            _router.navigate(['../login']);
        }
    }
    VOCMembersComponent.prototype.ngOnInit = function () {
        this.designations = null;
        this.members = null;
        this.getAllMembersVoDetails();
        this.getAllMembers();
    };
    VOCMembersComponent.prototype.ngAfterViewInit = function () {
        //this.dtTrigger.next();
        this.getAllMembersVoDetails();
    };
    VOCMembersComponent.prototype.getAllMembers = function () {
        var _this = this;
        this._voService.get(this._globalURL.GET_VO_MEMBERS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    _this._globalURL.isLoading = false;
                    _this.members = JSON.parse(res._body).Data;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            else {
                if (res.Status == true) {
                    _this.members = res.Data;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = "Unfortunatelly there is a technical problem while getting the details.";
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    VOCMembersComponent.prototype.getDesignations = function () {
        var _this = this;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.GET_DESIGNATION_DETAILS + "?forGroup=VO", sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    _this._globalURL.isLoading = false;
                    _this.designations = JSON.parse(res._body).Data;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            else {
                if (res.Status == true) {
                    _this.designations = res.Data;
                    _this._globalURL.isLoading = false;
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.WarningMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = "Unfortunatelly there is a technical problem while getting the details.";
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    VOCMembersComponent.prototype.getAllMembersVoDetails = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.GET_ALL_VO_SC_MEMEBER, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                //this.reRenderDT();
                _this.voMembers = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = "Unfortunatelly there is a technical problem while getting the details.";
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    VOCMembersComponent.prototype.addMember = function () {
        debugger;
        this.showSveButton = true;
        this._username = this.userName;
        this._password = this.password;
        this.data = {};
        this.data.Key = this.selectedMember;
        this.data.Value = this.selectedDesignation;
        for (var item in this.members) {
            if (this.selectedMember == this.members[item].Key)
                this.data.MemberName = this.members[item].Value;
        }
        for (var desItem in this.designations) {
            if (this.selectedDesignation == this.designations[desItem].Id)
                this.data.DesignationName = this.designations[desItem].ForGroup + " " + this.designations[desItem].Name;
        }
        this.MemberAndDesignationList.push(this.data);
    };
    VOCMembersComponent.prototype.recreateMemAndDesArray = function () {
        debugger;
        for (var item in this.MemberAndDesignationList)
            if (this.members[item].Key == this.MemberAndDesignationList[item].Key)
                this.members.splice(this.MemberAndDesignationList[item], 1);
    };
    VOCMembersComponent.prototype.removeItem = function (id) {
        this.MemberAndDesignationList.splice(id, 1);
        debugger;
    };
    VOCMembersComponent.prototype.add = function (key_, value_) {
        debugger;
        this.arr.push({ key: key_.value, value: value_.name });
    };
    VOCMembersComponent.prototype.createVOMember = function (ListData) {
        var _this = this;
        debugger;
        if (this.selectedDesignation <= 15 && this.selectedDesignation >= 18) {
            this._username = "";
            this._password = "";
        }
        else {
        }
        var finalUrl = this._globalURL.POST_VO_MEMBER + "?userName=" + this._username + "&password=" + this._password;
        this._voService.post(finalUrl, this.MemberAndDesignationList, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.status == 200) {
                _this._globalURL.isLoading = false;
                _this.getAllMembersVoDetails();
                _this.showMessage = true;
                _this.message = _this._common_message.VOBodyCreateMsg;
                setInterval(function () {
                    _this.showMessage = false;
                }, 5000);
                ListData.control.reset();
                _this.selectedDesignation = 0;
                _this.selectedMember = 0;
                _this.MemberAndDesignationList = [];
                _this.getAllMembersVoDetails();
                _this.getAllMembers();
            }
            else {
                _this.showErrorMessage = true;
                _this.message = _this._common_message.ErrorVOBodyCreateMsg;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this.getAllMembersVoDetails();
                _this.getAllMembers();
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = "Unfortunatelly there is a technical problem while getting the details.";
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
            _this.getAllMembersVoDetails();
            _this.getAllMembers();
        });
    };
    /***** */
    VOCMembersComponent.prototype.getMemberVoDetails = function () {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.GET_VO_MEMBERS, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.vomemberNameAndId_ = res.Data;
                _this._globalURL.isLoading = false;
            }
            else {
                _this.showWarningMessage = true;
                _this.message = _this._common_message.WarningMsg;
                setInterval(function () {
                    _this.showWarningMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
        })
            .catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    VOCMembersComponent.prototype.checkConfirmPassword = function (password, confirmpassword) {
        debugger;
        if (confirmpassword == password) {
            this.checkpassword = false;
        }
        else {
            this.checkpassword = true;
        }
        //console.log(searchValue);
    };
    VOCMembersComponent.prototype.checkUserName = function (userName) {
        var _this = this;
        debugger;
        this._voService.get(this._globalURL.GET_CHECK_USERNAME + userName, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == true) {
                _this.validusername = true;
                _this.checkValidUserName = false;
            }
            else {
                _this.validusername = false;
                _this.checkValidUserName = true;
            }
        }).catch(function (err) {
            _this._globalURL.isLoading = false;
            _this.message = _this._common_message.CatchBlockMsg;
            _this.showErrorMessage = true;
            setInterval(function () {
                _this.showErrorMessage = false;
            }, 5000);
        });
    };
    VOCMembersComponent.prototype.fordelete = function (data) {
        debugger;
        this.deleterecord = data;
    };
    VOCMembersComponent.prototype.removeVOMember = function (id) {
        var _this = this;
        debugger;
        this._globalURL.isLoading = true;
        this._voService.get(this._globalURL.REMOVE_SELECTED_VO_MEMBER + id, sessionStorage.getItem("access_token"))
            .then(function (res) {
            if (res.status === 401) {
                sessionStorage.clear();
                _this.showErrorMessage = true;
                _this.message = _this._common_message.error401message;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
                _this._router.navigate(['../login']);
            }
            if (res.Status == undefined)
                if (res.status == 200) {
                    _this._globalURL.isLoading = false;
                    _this.message = _this._common_message.RemoveMemberMsg;
                    _this.showMessage = true;
                    setInterval(function () {
                        _this.showMessage = false;
                    }, 5000);
                }
                else {
                    _this.showWarningMessage = true;
                    _this.message = _this._common_message.ErrorRemoveMemberMsg;
                    setInterval(function () {
                        _this.showWarningMessage = false;
                    }, 5000);
                    _this._globalURL.isLoading = false;
                }
            if (res.Status == true) {
                _this._globalURL.isLoading = false;
                _this.message = _this._common_message.RemoveMemberMsg;
                _this.showMessage = true;
                setInterval(function () {
                    _this.showMessage = false;
                }, 5000);
            }
            else {
                _this.showErrorMessage = true;
                _this.message = _this._common_message.ErrorRemoveMemberMsg;
                setInterval(function () {
                    _this.showErrorMessage = false;
                }, 5000);
                _this._globalURL.isLoading = false;
            }
            _this.getAllMembersVoDetails();
        });
    };
    VOCMembersComponent.prototype.R38_voMemberSCExportTopdf = function () {
        this._globalURL.isLoading = true;
        debugger;
        this.exportToPDF.R38_voMemberSCExportTopdf(this.voMembers);
        this._globalURL.isLoading = false;
    };
    VOCMembersComponent.prototype.voMemberExcel = function () {
        debugger;
        this.exportToExcel.voMembersExcel(this.voMembers);
    };
    VOCMembersComponent.prototype.selectdesignation = function () {
        this.showSveButton = false;
    };
    VOCMembersComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            template: __webpack_require__("../../../../../src/app/components/vo/vo_members/vo_members.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/app.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_vo_services__["a" /* VOService */],
            __WEBPACK_IMPORTED_MODULE_3__environments_Global__["a" /* GlobalAssets */],
            __WEBPACK_IMPORTED_MODULE_2__environments_access_token__["a" /* AccessToken */],
            __WEBPACK_IMPORTED_MODULE_5__services_reports_exportpdf__["a" /* ExportToPDF */],
            __WEBPACK_IMPORTED_MODULE_7__services_reports_exportexcel__["a" /* ExportToExcel */],
            __WEBPACK_IMPORTED_MODULE_6__environments_language_config__["a" /* LangulageConf */],
            __WEBPACK_IMPORTED_MODULE_1__angular_router__["a" /* Router */],
            __WEBPACK_IMPORTED_MODULE_8__environments_CommanMssage__["a" /* CommonMessageComponent */]])
    ], VOCMembersComponent);
    return VOCMembersComponent;
}());



/***/ }),

/***/ "../../../../../src/app/environments/CommanMssage.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CommonMessageComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var CommonMessageComponent = (function () {
    function CommonMessageComponent() {
        this.error401message = "SORRY..YOUR SESSION IS EXPIRED, PLEASE LOGIN AGAIN!";
        //Member Messages
        this.MemberCreatedMsg = "MEMBER CREATED SUCCESSFULLY..!";
        this.MemberUpdateMsg = "MEMBER UPDATED SUCCESSFULLY..!";
        this.WarningMsg = "THERE IS NO DATA AVAILABLE..!";
        this.shgUpdteFailed = "UNABLE TO UPDATE, PLEASE TRY AGAIN..!";
        this.MemberDeleteMsg = "MEMBER DELETED SUCCESSFULLY..!";
        this.MemberBodyCreateMsg = "MEMBER BODY CREATED SUCCESSFULLY.!";
        this.MemberRemoveMsg = "MEMBER DELETED SUCCESSFULLY..!";
        this.CatchBlockMsg = "UNFORTUNATELY, THERE IS A TECHNICAL PROBLEM TO PROCESS THE REQUEST, PLEASE TRY AGAIN!";
        //Attendence Module messgaes
        this.SaveMeetingAttendenceMsg = "ATTENDENCE SAVED SUCCESSFULLY";
        this.SaveErrorAttendenceMsg = "UNABLE TO SAVE THE MEMBER MEETING INFORMATION!";
        //SHG Messages
        this.SHGCreatedMsg = "SHG CREATED SUCCESSFULLY..!";
        this.SHGUpdateMsg = "SHG UPDATED SUCCESSFULLY..!";
        this.SHGDataErrorMsg = "THERE IS NO DATA AVAILABLE!";
        this.SHGDeleteMsg = "SHG DELETED SUCCESSFULLY..!";
        this.PaymentmodeUpdateMsg = "PAYMENT MODE UPDATED SUCCESSFULLY";
        //Loan Messages
        this.CreateLoanMsg = "LOAN APPLICATION SUBMITTED SUCCESSFULLY..!";
        this.OtherIncomeMsg = "ENTRY ADDED SUCCEFULLY..!";
        this.FundRequestMsg = "FUND REQUEST SUBMITTED SUCCESSFULLY..!";
        this.FundRequestErrorMsg = "UNABLE TO SUBMIT FUND REQUEST..!";
        this.FundUpdateMsg = "FUND APPLICATION UPDATED SUCCESSFULLY..!";
        this.ErrorFundupdateMsg = "FUND NOT UPDATED..!";
        this.FundRepaymentMsg = "FUND REPAYMENT DONE SUCCESSFULLY..!";
        this.LoanRepaymentMsg = "LOAN REPAYMENT DONE SUCCESSFULLY..!";
        this.LoanAppSaveErrorMsg = "ERROR..LOAN APPLICATION NOT SUBMITTED..!";
        this.MarkAttendenceMsg = "ATTENDENCE MARK SUCCESSFULLY..!";
        this.SlEntryMsg = "SL ADDED SUCCESSFULLY..!";
        this.ErrorSlEntryMsg = "SL ENTRY NOT ADDED..!";
        this.MarkRepaymentMsg = "REPAYMENT MARKED SUCCESSFULLY..!";
        this.MarkRepaymentErrMsg = "ERROR..REPAYMENT NOT MARKED..!";
        this.LoanUpdateMsg = "LOAN AMOUNT UPDATED SUCCESSFULLY.";
        this.ErrorPhotoUploadMsg = "PHOTO NOT UPLOADED..!";
        //Other income
        this.AddOtherIncomeMsg = "OTHER INCOME ADDED SUCCESSFULLY..!";
        this.AddErrorOtherIncomeMsg = "UNABLE TO SUBMIT OTHER INCOME!";
        this.SLAddMsg = "SL ADDED SUCCESSFULLY..!";
        this.DeleteOtherIncomeMsg = "OTHER INCOME DETAILS DELETED SUCCESSFULLY..!";
        //sl messages
        this.sladdmsg = "SL ENTRY ADDED SUCCESSFULLY..!";
        //VO Messages
        this.AddVOMsg = "VO ADDED SUCCESSFULLY..!";
        this.FundApproveMsg = "FUND APPROVED SUCCESSFULLY..!";
        this.FDAddMsg = "FD ADDED SUCCESSFULLY..!";
        this.NotFDAddMsg = "FD NOT ADDED..!";
        this.ReturnFDMsg = "FD RETURN SUCCESSFULLY..!";
        this.FDNotReturnMsg = "FD NOT RETURNED..!";
        this.PhotoUploadMsg = "PHOTO UPLOADED SUCCESSFULLY..!";
        //vo body massages
        this.RemoveMemberMsg = "MEMBER REMOVED FROM VO BODY..!";
        this.ErrorRemoveMemberMsg = "MEMBER NOT REMOVED FROM VO BODY";
        this.AddMemberMsg = "MEMBER ADDED TO VO BODY..!";
        this.AddDistrictMsg = "DISTRICT ADDED SUCCESSFULLY..!";
        this.NotAddDistrictMsg = "DISTRICT NOT ADDED..!";
        this.DistrictDeleteMsg = "DUSTRICT DELETED SUCCESSSFULLY..!";
        this.DistrictNotDeleted = "DISTRICT NOT DELETED..!";
        this.AddTalukaMsg = "TALUKA ADDED SUCCESSFULLY..!";
        this.ErrorAddTalukaMsg = "TALUKA NOT ADDED..!";
        this.AddVillageMsg = "VILLAGE ADDED SUCCESSFULLY..!";
        this.DeleteVillageMsg = "VILLAGE DELETED SUCCESSFULLY..!";
        this.ErrorDeleteVillageMsg = "VILLAGE NOT DELETED";
        this.ErrorAddVillageMsg = "VILLAGE NOT ADDED..!";
        this.TalukaDeleteMsg = "TALUKA DELETED SUCCESSSFULLY..!";
        this.AddEducationMsg = "EDUCATION ADDED SUCCESSFULLY..!";
        this.ErrorAddEducationMsg = "EDUCATION NOT ADDED..!";
        this.EducationNotAddMsg = "EDUCATION NOT ADDED";
        this.DeleteEducationMsg = "EDUCATION DELETED SUCCESSFULLY..!";
        this.ErrorDeleteEducationMsg = "EDUCATION NOT DELETED..!";
        this.GenderDeleteMsg = "GENDER DELETED SUCCESSSFULLY..!";
        this.AddGenderMsg = "GENDER ADDED SUCCESSFULLY..!";
        this.ErrorAddGenderMsg = "GENDER NOT ADDED..!";
        this.ErrorGenderDeleteMsg = "GENDER NOT DELETED SUCCESSFULLY..!";
        this.OccupationDeleteMsg = "OCCUPATION DELETED SUCCESSSFULLY..!";
        this.AddOccupationMsg = "OCCUPATION ADDED SUCCESSFULLY..!";
        this.MaritalStatusAddMsg = "MARITAL STATUS ADDED SUCCESSFULLY..!";
        this.DeleteMaritalStatusMsg = "MARITAL STATUS DELETED SUCCESSFULLY..!";
        this.AddSocialCategoryMsg = "SOCIAL CATEGORY ADDED SUCCESSFULLY..!";
        this.DeleteSocialCaytegoryMsg = "SOCIAL CATEGORY DELETED SUCCESSFULLY..!";
        this.AddEconomicCategoryMsg = "ECONOMIC CATEGORY ADDED SUCCESSFULLY..!";
        this.ErrorAddEconomicCategoryMsg = "ECONOMIC CATEGORY NOT ADDED..!";
        this.DeleteEconomicCaytegoryMsg = "ECONOMIC CATEGORY DELETED SUCCESSFULLY..!";
        this.ErrorDeleteEconomicCategoryMsg = "ECONOMIC CATEGORY NOT DELETED..!";
        this.AddRationCardMsg = "RATION CARD ADDED SUCCESSFULLY..!";
        this.ErrorAddRationCardMsg = "RATION CARD TYPE NOT ADDED..!";
        this.DeleteRationCardMsg = "RATION CARD DELETED SUCCESSFULLY..!";
        this.ErrorDeleteRationCardMsg = "RATION CARD TYPE NOT DELETED";
        this.AddDesignationMsg = "DESIGNATION ADDED SUCCESSFULLY..!";
        this.DeleteDesignationMsg = "DESIGNATION DELETED SUCCESSFULLY..!";
        this.NotDeleteDesignationMsg = "DESIGNATION NOT DELETED..!";
        this.AddSchemeMsg = "SCHEME ADDED SUCCESSFULLY..!";
        this.ErrorAddSchemeMsg = "SCHEME NOT ADDED";
        this.DeleteSchemeMsg = "SCHEME DELETED SUCCESSFULLY..!";
        this.ErrorDeleteSchemeMsg = "SCHEME NOT ADDED..!";
        this.AddAreaMsg = "AREA ADDED SUCCESSFULLY..!";
        this.NotAreaAddMsg = "AREA NOT ADDED..!";
        this.DeleteAreaMsg = "AREA DELETED SUCCESSFULLY..!";
        this.AreaNotDeleteMsg = "AREA NOT DELETED..!";
        this.AddLoanReasonMsg = "LOAN REASON ADDED SUCCESSFULLY..!";
        this.DeleteLoanReasonMsg = "LOAN REASON DELETED SUCCESSFULLY..!";
        this.AddFundTypeMsg = "FUND TYPE ADDED SUCCESSFULLY..!";
        this.DeleteFundTypeMsg = "FUND DELETE SUCCESSFULLY..!";
        this.NotAddDesignationMsg = "UNABLE TO ADD DESIGNATION..!";
        this.FundTypeCreateMsg = "FUND TYPE CREATED SUCCESSFULLY..!";
        this.ErrorFundTypeCreateMsg = "FUND TYPE  NOT CREATED..!";
        this.FundTypeDeleteMsg = "FUND TYPE ID DELETED SUCCESSFULLY..!";
        this.ErrorFundTypeDeleteMsg = "FUND TYPE NOT DELETED..!";
        this.VOBodyCreateMsg = "VO BODY CREATED SUCCESSFULLY..!";
        this.ErrorVOBodyCreateMsg = "VO BODY NOT CRAETED..!";
        //district message
        this.UpdateMsg = "RECORD UPDATED SUCCESSFULLY..!";
        this.CMRC_Finance_Details_Failed_to_load = "UNFORTUNATELY THERE IS A TECHNICAL PROBLEM WHILE LOADING THE FINANCE DETAILS, PLEASE TRY AGAIN..!";
        this.deleteDistrictMsg = "DISTRICT IS DELETED SUCCESSFULLY..!";
    }
    CommonMessageComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [])
    ], CommonMessageComponent);
    return CommonMessageComponent;
}());



/***/ }),

/***/ "../../../../../src/app/environments/Global.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GlobalAssets; });
var GlobalAssets = (function () {
    //this.GET_CMRC_FINANCE_DETAILS_BY_DIS = this.BASE_URL + "/Dashboard/GetCMRCFinancialDetails?cmrcId=";
    function GlobalAssets() {
        this.environment = "azureProd";
        this.environment = "azureProd";
        if (this.environment === "local") {
            this.BASE_URL = "http://localhost:59611/api";
            this.TOKEN = "http://localhost:59611/Token";
        }
        if (this.environment === "uat") {
            this.BASE_URL = "http://cmrcuatapi.maibasoft.com/api";
            this.TOKEN = "http://cmrcuatapi.maibasoft.com/Token";
        }
        if (this.environment === "prod") {
            this.BASE_URL = "https://pragaticrmcapi.maibasoft.com/api";
            this.TOKEN = "https://pragaticrmcapi.maibasoft.com/Token";
            //Setting the production env here.
        }
        if (this.environment === "azureuat") {
            this.BASE_URL = "https://csguatapi.azurewebsites.net/api";
            this.TOKEN = "https://csguatapi.azurewebsites.net/Token";
        }
        if (this.environment === "azureProd") {
            this.BASE_URL = "https://apicsg.azurewebsites.net/api";
            this.TOKEN = "https://apicsg.azurewebsites.net/Token";
        }
        this.GET_NEXT_CODE = this.BASE_URL + "/Account/GetNextCode?code=";
        this.gettest = this.BASE_URL + "/Test/GetTest";
        //this.GET_SHG_DETAIL = this.BASE_URL + "/SavingGroup/GetSHGDetails";
        this.GET_SHG_MASTER = this.BASE_URL + "/SHG/GetAllSHGByVOId";
        this.GET_SHG_DETAILD_BY_ID = this.BASE_URL + "/SHG/GetSHGBySHGId?id=";
        this.POST_SHG_MASTER = this.BASE_URL + "/SHG/CreateSHG";
        this.GET_SHG_ID_NAME = this.BASE_URL + "/SHG/GetSHGNameAndId";
        this.GET_MEM_ID_NAME = this.BASE_URL + "/Member/GetMemberNameAndId?shdId=";
        this.POST_CREATE_MEMBER = this.BASE_URL + "/Member/CreateMember";
        this.setSelectedSHG = 0;
        this.selectedLoanId = 0;
        this.SelectedSHGID = 0;
        this.IF_CAN_DELETE_SHG = this.BASE_URL + "/Vo/CheckIfCanDelete?id=";
        this.UPDATE_MEMBER_MASTER = this.BASE_URL + "/Member/UpdateMemeber";
        this.DELETE_MEMBER = this.BASE_URL + "/Member/DeleteMember?memberId=";
        this.GET_MEMBER_DETAILS = this.BASE_URL + "/Member/GetMemberDetailsBySHGId?SHGId=";
        this.GET_MARITAL_STATUS = this.BASE_URL + "/Master/GetMaritalStatus";
        this.GET_SHEMEWISE_MEM = this.BASE_URL + "/Dashboard/GetSchemeWiseMembers";
        this.GET_CASTEWISE_MEM = this.BASE_URL + "/Dashboard/GetCasteWiseMemebers";
        this.GET_MARRITAL_STATUS_WISE_DATA = this.BASE_URL + "/Dashboard/GetMarritalStatusWiseData";
        this.GET_AGE_WISE_DATA = this.BASE_URL + "/Dashboard/GetAgewiseMemberData";
        this.GET_LOAN_PURPOSE_WISE_DATA = this.BASE_URL + "/Dashboard/GetLoanPurposeWiseData";
        this.TOTAL_SHGANDMEMBER_COUNT = this.BASE_URL + "/Dashboard/GetCount";
        this.GET_SHEMEWISE_SHG = this.BASE_URL + "/Dashboard/GetSchemeWiseSHG";
        this.GET_LOAN_CASTE_WISE_DATA = this.BASE_URL + "/Dashboard/GetCasteWiseLoanDistributionData";
        this.GET_ALL_MEMBER_DETAILS_BY_SHGID = this.BASE_URL + "/Member/GetMemberDetailsBySHGId?SHGId=";
        this.UPDATE_MEMBER_DETAIL = this.BASE_URL + "/Member/UpdateMemeber";
        this.GETMARITALSTATUSKVP = this.BASE_URL + "/Master/GetMaritalStatus";
        this.GET_FINANCE_DETAILS = this.BASE_URL + "/Dashboard/GetFinanceDetails";
        this.GET_CMRC_FINANCE_DETAILS = this.BASE_URL + "/Dashboard/GetCMRCFinancialDetails";
        this.SHG_LOAN_DETAILS = this.BASE_URL + "/Loan/GetSHGLoanApplications";
        this.MEMBER_LOAN_DETAILS = this.BASE_URL + "/Loan/GetLoanDetails?status=";
        this.CREATE_LOAN_APPLICATION = this.BASE_URL + "/Loan/CreateLoanApplication";
        this.selectedMemId = 0;
        this.GET_REPAYMENT = this.BASE_URL + "/Loan/GetRepayment?loanId=";
        this.loanAmount = 0;
        this.CALCULATE_REPAYMENT = this.BASE_URL + "/Loan/CalculateRepayment";
        this.UPDATE_STATUS = this.BASE_URL + "/Loan/UpdateLoan";
        this.UPDATE_LOAN_AMT = this.BASE_URL + "/Loan/UpdateRemainingLoanAmount";
        this.MARK_REPAYMENT = this.BASE_URL + "/Loan/MarkRepayment";
        this.UPDATE_PAYMENT_MODE = this.BASE_URL + "/Loan/UpdatePaymentMode";
        this.UPDATE_OUTSTANDING_AMT = this.BASE_URL + "/Loan/UpdateLoanOutstandingAmt";
        this.MEMBER_LOAN_PERFORMANCE = this.BASE_URL + "/Loan/GetMemberLoanPerformanceDetails";
        this.GET_LOAN_DETAILS_BY_LOAN_ID = this.BASE_URL + "/Loan/GetLoanDetailsByLoanId?loanId=";
        this.GET_SHG_BY_VOID = this.BASE_URL + "/SHG/GetAllSHGByVOId?voId=";
        this.GET_MEM_BY_SHG_AND_MEM_ID = this.BASE_URL + "/Member/GetMemebrDetails";
        this.CHANGE_PASSWORD = this.BASE_URL + "/Account/ChangePassword";
        //End
        //CMRC Api
        this.GET_SHG_BY_SCHEME = this.BASE_URL + "/Master/GetSchemeDetailsByCMRCId?schemeId=";
        this.POST_CREATE_VO = this.BASE_URL + "/Vo/CreateVoDetails";
        this.GET_CMRC_DISTRICT = this.BASE_URL + "/District/GetDistrict";
        this.GET_VO_BY_CMRC = this.BASE_URL + "/vo/GetAllVOByCMRCId";
        this.GET_VO_MEMBERS = this.BASE_URL + "/Member/GetMembersKeyValueByVOId";
        this.REMOVE_SELECTED_VO_MEMBER = this.BASE_URL + '/Vo/RemoveVOMember?memId=';
        this.GET_ALL_MEMBERS_BY_CMRCID = this.BASE_URL + "/CMRCMember/GetAllMembersByCMRCId?status=";
        this.GET_ALL_WITHDRAWL_MEMBERS = this.BASE_URL + "/CMRCMember/GetAllMembersByCMRCId?status=";
        this.POST_VO_MEMBER = this.BASE_URL + "/vo/AddVoMember";
        this.GET_ALL_VO_MEMBER = this.BASE_URL + "/Member/GetAllMembersByVOId?status=";
        // this.GET_SHG_NAME_AND_ID = this.BASE_URL + "/SHG/GetSHGNameAndId";
        this.GET_SHG_NAME_AND_ID = this.BASE_URL + "/SHG/GetSHGNameAndId";
        this.GET_SHG_NAME_ID_BY_CMRC_ID = this.BASE_URL + "/SHG/KVPGetSHGNameAndIdforCMRC";
        this.GET_VO_BY_CMRC_ID = this.BASE_URL + "/Vo/GetVoByCMRCId";
        this.GET_MEMKVP_BY_VOID = this.BASE_URL + "/Vo/GetMembersByVOId?voId=";
        this.GET_ALL_MEMBERS_BY_SHG = this.BASE_URL + "/SHG/GetAllSHGByVOId";
        this.GET_SHG_NAME_AND_ID_VOID = this.BASE_URL + "/SHG/GetSHGNameAndId?voId=";
        this.ADD_PHOTO = this.BASE_URL + "/Account/UploadPhoto";
        this.UPDATE_SHG_MASTER = this.BASE_URL + "/SHG/UpdateSHG";
        this.DELETE_SHG = this.BASE_URL + "/SHG/DeleteSHG?SHGId=";
        //MASTER CMRC API Anjali;
        this.GETRATIONCARDKVP = this.BASE_URL + "/Master/KVPRationCard";
        this.GET_GENDER_KVP = this.BASE_URL + "/Master/KVPGenGender";
        this.CREATE_FUNDTYPE = this.BASE_URL + "/Master/AddFundType?fundType=";
        this.CREATE_DESIGNATION = this.BASE_URL + "/Master/AddDesignation";
        this.DELETE_DESIGNATION = this.BASE_URL + "/Master/DeleteDesignation?designationId=";
        this.DELETE_FUNDTYPE = this.BASE_URL + "/Master/DeleteFundType?fundTypeId=";
        this.DELETE_SCHEME = this.BASE_URL + "/Master/DeleteScheme?schemeId=";
        this.GET_SCHEME_DETAILS = this.BASE_URL + "/Master/GetAllSchemeDetails";
        this.GET_FUNDTYPE = this.BASE_URL + "/Master/GetAllFundTypeDetails";
        this.CREATE_SCHEME = this.BASE_URL + "/Master/AddScheme?schemeName=";
        this.GET_DESIGNATION_DETAILS = this.BASE_URL + "/Master/GetAllDesignationDetails";
        this.GET_DESIGNATION_DETAILS_FOR_VO = this.BASE_URL + "/Master/GetAllDesignationDetails?forGroup=";
        this.GET_ECONOMIC_CATEGORY_DETAILS = this.BASE_URL + "/Master/GetAllEconomicCategoryDetails";
        this.GET_LOAN_REASON = this.BASE_URL + "/Master/GetAllLoanReasonDetails";
        this.GET_OCCUPATION_DETAILS = this.BASE_URL + "/Master/GetAllOccupationDetails";
        this.GET_SOCIAL_CATEGORY = this.BASE_URL + "/Master/GetAllSocialCategoryDetails";
        this.CREATE_ECONOMIC_CATEGORY = this.BASE_URL + "/Master/AddEconomicCategory?economicCategory=";
        this.CREATE_LOAN_REASON = this.BASE_URL + "/Master/AddLoanReason?loanReason=";
        this.CREATE_OCCUPATION = this.BASE_URL + "/Master/AddOccupation?occupation=";
        this.CREATE_SOCIAL_CATEGORY = this.BASE_URL + "/Master/AddSocialCategory?socialCategory=";
        this.DELETE_ECONOMIC_CATEGORY = this.BASE_URL + "/Master/DeleteEconomicCategory?economicCategoryId=";
        this.DELETE_LOAN_REASON = this.BASE_URL + "/Master/DeleteLoanReason?loanReasonId=";
        this.DELETE_OCCUPATION = this.BASE_URL + "/Master/DeleteOccupation?occupationId=";
        this.DELETE_SOCIAL_CATEGORY = this.BASE_URL + "/Master/DeleteSocialCategory?SocialCategoryId=";
        this.ADD_EDUCATION = this.BASE_URL + "/Master/AddEducation?educationName=";
        this.ADD_ECONOMIC_CATEGORY = this.BASE_URL + "/Master/GetAllEconomicCategoryDetails";
        this.GET_EDUCATION = this.BASE_URL + "/Master/GetEducationDetails";
        this.GET_EDUCATION_KVP = this.BASE_URL + "/Master/KVPGetEducationIdName";
        this.GET_MARITALSTATUS = this.BASE_URL + "/Master/GetMaritalStatus";
        this.DELETE_TALUKA = this.BASE_URL + "/Master/DeleteTaluka?talukaId=";
        this.DELETE_EDUCATION = this.BASE_URL + "/Master/DeleteEducation?educationId=";
        this.GET_TALUKA = this.BASE_URL + "/Master/GetTaluka";
        this.CREATE_GENDER = this.BASE_URL + "/Master/AddGender?genderType=";
        this.CREATE_RETION_CARD = this.BASE_URL + "/Master/AddRationCard?rationCard=";
        this.CREATE_MARITALSTATUS = this.BASE_URL + "/Master/AddMaritalStatus?maritalStatus=";
        this.GET_GENDER_DETAILS = this.BASE_URL + "/Master/GetAllGenderDetails";
        this.GET_RETION_CARD_DETAILS = this.BASE_URL + "/Master/GetAllRationCardDetails";
        this.GET_MARITALSTATUS = this.BASE_URL + "/Master/GetListOfMarritalStatus";
        this.DELETE_GENDER = this.BASE_URL + "/Master/DeleteGender?genderId=";
        this.DELET_RETION_CARD = this.BASE_URL + "/Master/DeleteRationCard?rationcardId=";
        this.DELETE_MARRITALSTATUS = this.BASE_URL + "/Master/DeleteMaritalStatus?marritalId=";
        this.GET_AREA_DETAILS = this.BASE_URL + "/Master/GetAllAreaDetails";
        this.CREATE_AREA = this.BASE_URL + "/Master/AddArea?areaName=";
        this.DELETE_AREA = this.BASE_URL + "/Master/DeleteArea?areaId=";
        this.GET_MINORITY = this.BASE_URL + "/Master/GetAllMinorityDetails";
        this.ADD_MINORITY = this.BASE_URL + "/Master/AddMinority?minorityName=";
        this.DELETE_MINORITY = this.BASE_URL + "/Master/DeleteMinority?minorityId=";
        //cmrc to vo dashbord api...        
        this.GET_SCHEMEWISE_SHG_BYVOID = this.BASE_URL + "/Dashboard/GetSchemeWiseSHG?voId=";
        this.GET_VO_SHG_AND_MEM_BY_CMRC = this.BASE_URL + "/Dashboard/GetCount?voId=";
        this.GET_MARRITAL_STATUS_WISE_DATABYVOID = this.BASE_URL + "/Dashboard/GetMarritalStatusWiseData?voId=";
        this.GET_AGE_WISE_DATABYVOID = this.BASE_URL + "/Dashboard/GetAgewiseMemberData?voId=";
        this.GET_LOAN_PURPOSE_WISE_DATABYVOID = this.BASE_URL + "/Dashboard/GetLoanPurposeWiseData?voId=";
        this.GET_LOAN_CAST_WISE_DATABYVOID = this.BASE_URL + "/Dashboard/GetCasteWiseLoanDistributionData?voId=";
        this.GET_VODETAIL_BY_CMRCID = this.BASE_URL + "/Vo/GetSingalVoDetailByCmrcId?voId=";
        this.GET_SHG_COUNT_BY_VILLAGE_ID = this.BASE_URL + "/Dashboard/GetShgCountByVillageId?villageId=";
        //MEMBER dROPDOWN API...
        this.KVP_GET_CAST = this.BASE_URL + "/Master/KVPGetCast";
        this.KVP_GET_DESIGNATION = this.BASE_URL + "/Master/KVPGetDesignationIdName";
        this.KVP_ECONOMIC_CATEGORY = this.BASE_URL + "/Master/KVPGetEconomicCategoryIdName";
        // Get District Api....... Anjali
        this.GET_DISTRICT = this.BASE_URL + "/Master/GetDistrict";
        this.POST_DISTRICT = this.BASE_URL + "/Master/AddDistrict?districtName=";
        this.DELETE_DISTRICT = this.BASE_URL + "/Master/DeleteDistrict?distId=";
        this.CREATE_NEW_TALUKA = this.BASE_URL + "/Master/AddTaluka?talukaName=";
        this.GET_DISTRICT_AND_TALUKA = this.BASE_URL + "/Master/GetDistrictAndTaluka";
        this.GET_TALUKA_BY_DISTRICT = this.BASE_URL + "/Master/GetTalukaByDistrict?distId=";
        this.GET_AREA_KVP = this.BASE_URL + "/Master/GetKVPArea";
        this.GET_SCHEME_KVP = this.BASE_URL + "/Master/GetSchemeNamesKeyValuePair";
        this.GET_DISTRICT_BY_TALUKA_KEY_VALUE_PAIR = this.BASE_URL + "/Master/GetTalukaByDistrict?distId=";
        this.GETGENDERKVP = this.BASE_URL + "/Master/KVPGenGender";
        //Member Photo Type interface.
        this.MEM_PHOTO = 1;
        this.VO_PHOTO = 3;
        this.SHG_PHOTO = 2;
        this.CMRC_PHOTO = 4;
        this.LOAN_APPLICATION_PHOTO = 5;
        this.LOAN_REPAYMENT_PHOTO = 6;
        this.CMRC_TO_VO_FUND_BANK_RECEIPT = 7;
        this.CMRC_TO_VO_FUND_CHECK_RECEIPT = 8;
        this.VO_SHG_BANK_RECEIPT_PAYMENT_MODE_PHOTO = 9;
        this.VO_SHG_CHECK_RECEIPT_PAYMENT_MODE_PHOTO = 10;
        this.OTHER_INCOME_BANK_RECEIPT = 11;
        this.OTHER_INCOME_CHECK_RECEIPT = 12;
        this.GET_OTHER_INCOME_DETAILS = this.BASE_URL + "/OtherIncome/GetOtherIncomeDetails";
        this.DELETE_OTHER_INCOME_DETAILS = this.BASE_URL + "/OtherIncome/DeleteOtherIncome?id=";
        this.GET_MEMBERS_OF_VO = this.BASE_URL + "/Vo/GetVOMembers";
        this.GET_FUND_TYPE_KET_VALUE_PAIR = this.BASE_URL + "/Master/KVPMstFundType";
        this.GETRATIONCARDKVP = this.BASE_URL + "/Master/KVPRationCard";
        this.GETALLOCCUPATION = this.BASE_URL + "/Master/KVPGetOccupation";
        //fUND APIS
        this.GET_ALL_VO_FUND_DETAILS = this.BASE_URL + "/Fund/GetFundDetailsByVoId?status=2";
        this.GET_ALL_VO_FUND_DETAILS_FOR_VO = this.BASE_URL + "/Fund/GetFundDetailsByVoId?status=";
        this.GET_ALL_VO_FUND_DETAILS_FOR_CMRC = this.BASE_URL + "/Fund/GetAllFundDetailsByCMRCId";
        this.GET_FUND_DETAILS_BY_VO_ID = this.BASE_URL + "/Fund/GetAllFundDetailsByCMRCId?status=";
        this.REQUEST_FUND_FROM_CRMC = this.BASE_URL + "/Fund/RequestFundFromVoToCMRC";
        this.UPDATE_FUND_FROM_CMRC_TO_VO = this.BASE_URL + "/Fund/UpdateFund";
        this.GET_VOKVP_CMRC = this.BASE_URL + "/Vo/GetVOByCMRCId";
        this.GET_FUND_REPAYMENT_DETAILS_VO = this.BASE_URL + "/Fund/GetFundRepaymentDetails?fundId=";
        this.GET_CALCULATED_FUND_DETAILS = this.BASE_URL + "/Fund/CalculateFundRepayment?fundId=";
        this.SAVE_FUND_REPAYMENT = this.BASE_URL + "/Fund/SaveFundRepayment";
        //fund district api
        this.GET_DISTRICT_FUND_DETAILS = this.BASE_URL + "/Fund/GetFundDetailsByVoIdToCMRC?status=";
        this.UPDATE_DISTRICT_FUND_DETAILS = this.BASE_URL + "/Fund/UpdateFundForDistrict";
        //loan district api
        this.GET_DISTRICT_LOAN_DETAILS = this.BASE_URL + "/Loan/GetStatuswiseAllLoanDetails?status=";
        this.UPDATE_DISTRICT_LOAN_DETAILS = this.BASE_URL + "/Loan/UpdateLoanDetailsForDistrict";
        //district Other Income api
        this.GET_DISTRICT_OTHER_INCOME_DETAILS = this.BASE_URL + "/OtherIncome/GetAllOtherIncomeDetails";
        //SC API
        this.CREATE_SC_BY_VO_MEMBER = this.BASE_URL + "/SC/CreateSCMember";
        this.GET_SC_MEMBERS = this.BASE_URL + "/SC/GetSCMemberDetails";
        //USER PROFILE API
        this.GET_USER_PROFILE_DETAIL = this.BASE_URL + "/Account/UserDetails?roleId=";
        this.CREATE_SC_MEMBER_KEY_VALUE_PAIR = this.BASE_URL + "/SC/CreateSCMember";
        // VO OTHER INCOME API
        this.GET_ALL_SELECT_SHG_FOR_MEMBER = this.BASE_URL + "/Member/GetMemberNameAndId?shdId=";
        this.ADD_OTHER_INCOME = this.BASE_URL + "/OtherIncome/CreateOtherIncome";
        //Attendance
        this.GET_ALL_VO_SC_MEMEBER = this.BASE_URL + "/Vo/GetVOAndSCMembers";
        // cmrc dashbord api...
        this.GET_VO_SHG_MEMBER_COUNT_CMRC = this.BASE_URL + "/Dashboard/GetVoShgMemberCountForCmrc";
        // cmrc share amount....
        this.GET_SHARE_AMOUNT = this.BASE_URL + "/ShareDetails/GetShareAmountDetailsByVoAndCmrcId";
        this.GET_VO_CMRCID = this.BASE_URL + "/Vo/GetVOByCMRCId";
        //Anjali..
        this.GET_SHGNAME_ID_VOID = this.BASE_URL + "/SHG/GetSHGNameAndId?voId=";
        this.RETURN_SHARE_AMOUNT = this.BASE_URL + "/ShareDetails/UpdateShareDetails";
        //FD API Anjali..
        this.GET_FD = this.BASE_URL + "/FD/GetAllFdDetails?status=";
        this.CREATE_FD = this.BASE_URL + "/FD/CreateFD";
        this.GET_MEM_BY_VOID = this.BASE_URL + "/Member/GetMembersKeyValueByVOId?voId=";
        this.UPDATE_FD = this.BASE_URL + "/FD/UpdateFD";
        //change password api.
        this.CHANGEPASSWORD = this.BASE_URL + "/Account/ChangePassword";
        //Attendance
        this.GET_ATTENDANCE_DETAILS = this.BASE_URL + "/VOMeetingAttendance/GetMeetingDetails";
        this.MARK_MEETING_ATTENDANCE = this.BASE_URL + "/VOMeetingAttendance/MarkAttendance";
        this.GET_VO_MEETING_DT = this.BASE_URL + "/VOMeetingAttendance/GetMeetingDate";
        //End
        //check username
        this.GET_CHECK_USERNAME = this.BASE_URL + "/Account/CheckUserName?userName=";
        //balancesheet
        this.GET_BALANCESHEET = this.BASE_URL + "/AccountTransaction/GetBalanceSheet?roleId=";
        this.GET_DETAILED_BALANCESHEET = this.BASE_URL + "/AccountTransaction/GetBalancesheetByDates?roleId=";
        this.GET_SELECTED_GL_TYPE_DETAILS = this.BASE_URL + "/AccountTransaction/GetSelectedGLTypeDetails?roleId=";
        this.GET_SL_ENTRIES_DETAILS = this.BASE_URL + "/AccountTransaction/GetOtherContraSLEntryList?roleId=";
        this.GET_AVAILABLEACCOUNTSS = this.BASE_URL + "/AccountTransaction/GetAvilableAcounts";
        this.SAVE_SL_ENTRY = this.BASE_URL + "/AccountTransaction/SaveOtherSLContraEntry";
        this.CHECKIF_PM_APPLICABLE = this.BASE_URL + "/AccountTransaction/CheckIfPMIsApplicable?slTypeId=";
        this.GET_PROFIT_AND_LOSS = this.BASE_URL + "/AccountTransaction/GetProfitAndLoss?roleId=";
        //end balancesheet
        //Reports for cmrc shg Api.
        this.GET_SHGS_BYVO = this.BASE_URL + "/SHG/GetAllSHGByVOId?voId=";
        this.GET_SHG_BYCMRC = this.BASE_URL + "/Vo/GetAllSHGByCMRCId";
        //master village Anjali
        this.GET_VILLAGE = this.BASE_URL + "/Master/GetAllVillageDetails";
        this.CREATE_VILLAGE = this.BASE_URL + "/Master/CreateVillage?villageName=";
        this.DELETE_VILLAGE = this.BASE_URL + "/Master/DeleteVillage?villageId=";
        //Shg village dropdown - Anjali
        this.KVPGET_VILLAGE = this.BASE_URL + "/Master/KVPGetVillage";
        // District Module - Dasboard 
        this.GET_KVP_DISTRICT_CMRC_DASHBOARD = this.BASE_URL + "/CMRCMember/KVPGetCmrcIdName";
        this.GET_DISTRICT_CMRCVO_SHGMEMBER_COUNT = this.BASE_URL + "/Dashboard/GetCmrcVoShgMemberCountForDistrict";
        this.GET_VOCOUNT_BYCMRCID = this.BASE_URL + "/Vo/GetVOByCMRCId?cmrcId=";
        this.GET_DISTRICT_VO_MEMBER_COUNT = this.BASE_URL + "/Dashboard/GetCmrcwiseVoShgMemberCount";
        this.UPDATE_DISTRICT_FD_DETAILS = this.BASE_URL + "/FD/UpdateFdForDistrict";
        this.GET_VOID_NAME_FOR_DISTRICT = this.BASE_URL + "/VO/KVPGetAllVoIdName";
        this.UPDATE_DISTRICT_MEMBER_SHARE_DETAILS = this.BASE_URL + "/ShareDetails/UpdateShareDetailsForDistrct";
        this.GET_ALL_CMRC_KPV = this.BASE_URL + "/CMRCMember/KVPGetAllCmrcIdName";
        this.UPDATE_DISTRICT_OTHER_INCOME_DETAILS = this.BASE_URL + "/OtherIncome/UpdateOtherIncomeForDistrict";
        this.GET_ALL_SHG_BYVOIDSTATUS = this.BASE_URL + "/SHG/GetAllSHGByVOId";
        //end district api
        //public apis
        this.CMRC_PUBLIC_INFORMATION = this.BASE_URL + "/PublicPage/GetPublicPageInformation?cmrcId=";
        //end public apis
    }
    Object.defineProperty(GlobalAssets.prototype, "envConfig", {
        get: function () {
            return this.environment;
        },
        set: function (env) {
            if (env === "local") {
                this.BASE_URL = "http://localhost:59611/api";
                this.TOKEN = "http://localhost:59611/Token";
            }
            if (env === "uat") {
                this.BASE_URL = "http://cmrcuatapi.maibasoft.com/api";
                this.TOKEN = "http://cmrcuatapi.maibasoft.com/Token";
            }
            if (env === "prod") {
                this.BASE_URL = "https://pragaticrmcapi.maibasoft.com/api";
                this.TOKEN = "https://pragaticrmcapi.maibasoft.com/Token";
                //Setting the production env here.
            }
            if (this.environment === "azureuat") {
                this.BASE_URL = "https://csguatapi.azurewebsites.net/api";
                this.TOKEN = "https://csguatapi.azurewebsites.net/Token";
            }
            if (this.environment === "azureProd") {
                this.BASE_URL = "https://apicsg.azurewebsites.net/api";
                this.TOKEN = "https://apicsg.azurewebsites.net/Token";
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_SHEMEWISE_SHG", {
        get: function () {
            return this.GET_SHEMEWISE_SHG;
        },
        //public s = this.envConfig = "local";
        set: function (v) {
            this.envConfig = this.environment;
            if (v == "")
                this.GET_SHEMEWISE_SHG = this.BASE_URL + "/Dashboard/GetSchemeWiseSHG";
            else
                this.GET_SHEMEWISE_SHG = this.BASE_URL + "/Dashboard/GetSchemeWiseSHG?voId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_TOTAL_SHGANDMEMBER_COUNT", {
        get: function () {
            return this.TOTAL_SHGANDMEMBER_COUNT;
        },
        set: function (v) {
            this.envConfig = this.environment;
            if (v == "")
                this.TOTAL_SHGANDMEMBER_COUNT = this.BASE_URL + "/Dashboard/GetCount";
            else
                this.TOTAL_SHGANDMEMBER_COUNT = this.BASE_URL + "/Dashboard/GetCount?voId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_MARRITAL_STATUS_WISE_DATA", {
        get: function () {
            return this.TOTAL_SHGANDMEMBER_COUNT;
        },
        set: function (v) {
            this.envConfig = this.environment;
            if (v == "")
                this.GET_MARRITAL_STATUS_WISE_DATA = this.BASE_URL + "/Dashboard/GetMarritalStatusWiseData";
            else
                this.GET_MARRITAL_STATUS_WISE_DATA = this.BASE_URL + "/Dashboard/GetMarritalStatusWiseData?voId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_AGE_WISE_DATA", {
        get: function () {
            return this.GET_AGE_WISE_DATA;
        },
        set: function (v) {
            this.envConfig = this.environment;
            if (v == "")
                this.GET_AGE_WISE_DATA = this.BASE_URL + "/Dashboard/GetAgewiseMemberData";
            else
                this.GET_AGE_WISE_DATA = this.BASE_URL + "/Dashboard/GetAgewiseMemberData?voId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_LOAN_PURPOSE_WISE_DATA", {
        get: function () {
            return this.GET_LOAN_PURPOSE_WISE_DATA;
        },
        set: function (v) {
            this.envConfig = this.environment;
            if (v === "")
                this.GET_LOAN_PURPOSE_WISE_DATA = this.BASE_URL + "/Dashboard/GetLoanPurposeWiseData";
            else
                this.GET_LOAN_PURPOSE_WISE_DATA = this.BASE_URL + "/Dashboard/GetLoanPurposeWiseData?voId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_LOAN_CASTE_WISE_DATA", {
        get: function () {
            return this.GET_LOAN_CASTE_WISE_DATA;
        },
        set: function (v) {
            this.envConfig = this.environment;
            if (v == "")
                this.GET_LOAN_CASTE_WISE_DATA = this.BASE_URL + "/Dashboard/GetCasteWiseLoanDistributionData";
            else
                this.GET_LOAN_CASTE_WISE_DATA = this.BASE_URL + "/Dashboard/GetCasteWiseLoanDistributionData?voId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_FINANCE_DETAILS", {
        get: function () {
            return this.GET_FINANCE_DETAILS;
        },
        set: function (v) {
            this.envConfig = this.environment;
            if (v === "")
                this.GET_FINANCE_DETAILS = this.BASE_URL + "/Dashboard/GetFinanceDetails";
            else
                this.GET_FINANCE_DETAILS = this.BASE_URL + "/Dashboard/GetFinanceDetails?voId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_CMRC_FINANCE_DETAILS", {
        get: function () {
            return this.GET_CMRC_FINANCE_DETAILS;
        },
        set: function (v) {
            this.envConfig = this.environment;
            this.GET_CMRC_FINANCE_DETAILS = this.BASE_URL + "/Dashboard/GetCMRCFinancialDetails?cmrcId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_BALANCESHEET", {
        get: function () {
            return this.GET_BALANCESHEET;
        },
        //this.GET_CMRC_FINANCE_DETAILS =this.BASE_URL + "/Dashboard/GetCMRCFinancialDetails";
        set: function (v) {
            this.envConfig = this.environment;
            if (v == "")
                this.GET_BALANCESHEET = this.BASE_URL + "/AccountTransaction/GetBalanceSheet?roleId=";
            else
                this.GET_BALANCESHEET = this.BASE_URL + "/AccountTransaction/GetBalanceSheet?roleId=" + sessionStorage.getItem("viewForRoleId") + "&refId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_CMRC_GET_BALANCESHEET", {
        get: function () {
            return this.GET_CMRC_DASHBOARD;
        },
        set: function (v) {
            this.envConfig = this.environment;
            this.GET_CMRC_DASHBOARD = this.BASE_URL + "/AccountTransaction/GetBalanceSheet?roleId=2&refId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_BALANCESHEET_VIEW_BY_DIS", {
        get: function () {
            return this.GET_BALANCESHEET;
        },
        set: function (v) {
            debugger;
            this.envConfig = this.environment;
            this.GET_BALANCESHEET = this.BASE_URL + "/AccountTransaction/GetBalanceSheet?roleId=" + sessionStorage.getItem("viewForRoleId") + "&refId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_USER_PROFILE_DETAIL", {
        get: function () {
            return this.GET_USER_PROFILE_DETAIL;
        },
        set: function (v) {
            this.envConfig = this.environment;
            if (v == "")
                this.GET_USER_PROFILE_DETAIL = this.BASE_URL + "/Account/UserDetails?roleId=";
            else
                this.GET_USER_PROFILE_DETAIL = this.BASE_URL + "/Account/UserDetails?roleId=" + sessionStorage.getItem("viewForRoleId") + "&refId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_USER_PROFILE_DETAIL_CMRC", {
        get: function () {
            return this.GET_CMRC_USER_PROFILE_DETAIL;
        },
        set: function (v) {
            this.envConfig = this.environment;
            this.GET_CMRC_USER_PROFILE_DETAIL = this.BASE_URL + "/Account/UserDetails?roleId=2&refId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_USER_PROFILE_DETAIL_VIEW_BY_DIS", {
        get: function () {
            return this.GET_USER_PROFILE_DETAIL;
        },
        //get_GET_USER_PROFILE_DETAIL = this.BASE_URL + "/Account/UserDetails?roleId=";
        set: function (v) {
            debugger;
            this.envConfig = this.environment;
            this.GET_USER_PROFILE_DETAIL = this.BASE_URL + "/Account/UserDetails?roleId=" + sessionStorage.getItem("viewForRoleId") + "&refId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_VO_SHG_MEMBER_COUNT_CMRC", {
        get: function () {
            return this.GET_VO_SHG_MEMBER_COUNT_CMRC;
        },
        set: function (v) {
            this.envConfig = this.environment;
            this.GET_VO_SHG_MEMBER_COUNT_CMRC = this.BASE_URL + "/Dashboard/GetVoShgMemberCountForCmrc?cmrcId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GlobalAssets.prototype, "get_GET_CMRC_FINANCE_DETAILS_BY_DIS", {
        get: function () {
            return this.GET_CMRC_FINANCE_DETAILS_BY_DIS;
        },
        set: function (v) {
            debugger;
            this.envConfig = this.environment;
            this.GET_CMRC_FINANCE_DETAILS_BY_DIS = this.BASE_URL + "/Dashboard/GetCMRCFinancialDetails?cmrcId=" + v;
        },
        enumerable: true,
        configurable: true
    });
    return GlobalAssets;
}());



/***/ }),

/***/ "../../../../../src/app/environments/GlobalVeriables.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GlobalVariable; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var GlobalVariable = (function () {
    function GlobalVariable() {
        this.ShgId = "";
        this.VoId = 0;
        this.getAllMEmbersByShgId = "";
        this.setSelectedSHG = 0;
        this.SelectedSHGID = 0;
        this.SelectedFundId = 0;
        this.voBaseCode = "";
        this.cmrcBaseCode = "";
        this.shgBaseCode = "";
        this.selectedGLTypeId = 0;
        this.NEW_LOAN = 2;
        this.APPROVED_LOAN = 1;
        this.CLOSED_LOAN = 3;
        this.REJECTED_LOAN = 4;
        this.CashInHand = 0;
        this.CashAtBank = 0;
        this.TotalAvailableAmount = 0;
        this.VoIdForAgeWiseGroupdetails = 0;
        this.roleId = 0;
        //SL Constants
        this.CASH_IN_HAND_TO_CASH_AT_BANK = 17;
        this.MAVIMRoleId = 1;
        this.CMRCRoleId = 2;
        this.VORoleId = 3;
        this.SHGRoleId = 4;
        //VO Details:
        this.VOName = "";
        this.CMRCName = "";
        this.cmrcIdforPublicPage = 0;
    }
    GlobalVariable = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
    ], GlobalVariable);
    return GlobalVariable;
}());



/***/ }),

/***/ "../../../../../src/app/environments/access_token.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AccessToken; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var AccessToken = (function () {
    function AccessToken() {
        this.access_token = '';
        this.roleId = '';
        this.Name = '';
    }
    AccessToken = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
    ], AccessToken);
    return AccessToken;
}());

//export const AccessToken = ""; 


/***/ }),

/***/ "../../../../../src/app/environments/language.config.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LangulageConf; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var LangulageConf = (function () {
    function LangulageConf() {
        //it will default set language to English
        this.en = true;
        this.mr = false;
    }
    LangulageConf = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
    ], LangulageConf);
    return LangulageConf;
}());



/***/ }),

/***/ "../../../../../src/app/routing/CSGRoutes.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PublicRoutes; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_public_login_login_component__ = __webpack_require__("../../../../../src/app/components/public/login/login.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_public_Public_Component__ = __webpack_require__("../../../../../src/app/components/public/Public.Component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_vo_VO_BaseComponent__ = __webpack_require__("../../../../../src/app/components/vo/VO.BaseComponent.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_vo_dashboard_dashboard_component__ = __webpack_require__("../../../../../src/app/components/vo/dashboard/dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_vo_member_member_component__ = __webpack_require__("../../../../../src/app/components/vo/member/member.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__components_vo_fix_deposite_fixdeposite_component__ = __webpack_require__("../../../../../src/app/components/vo/fix_deposite/fixdeposite.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__components_vo_loan_loan_component__ = __webpack_require__("../../../../../src/app/components/vo/loan/loan.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_vo_shg_master_shg_master_component__ = __webpack_require__("../../../../../src/app/components/vo/shg_master/shg_master.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__components_vo_loan_loanrepayment_component__ = __webpack_require__("../../../../../src/app/components/vo/loan/loanrepayment.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__components_sc_base_component__ = __webpack_require__("../../../../../src/app/components/sc/base.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_sc_loan_loan_component__ = __webpack_require__("../../../../../src/app/components/sc/loan/loan.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__components_cmrc_CMRC_BaseComponent__ = __webpack_require__("../../../../../src/app/components/cmrc/CMRC.BaseComponent.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__components_cmrc_dashboard_dashboard_component__ = __webpack_require__("../../../../../src/app/components/cmrc/dashboard/dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__components_cmrc_vo_vo_component__ = __webpack_require__("../../../../../src/app/components/cmrc/vo/vo.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__components_cmrc_reports_reports_component__ = __webpack_require__("../../../../../src/app/components/cmrc/reports/reports.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__components_cmrc_district_district_component__ = __webpack_require__("../../../../../src/app/components/cmrc/district/district.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__components_vo_vo_members_vo_members_component__ = __webpack_require__("../../../../../src/app/components/vo/vo_members/vo_members.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__components_vo_sc_member_sc_member_component__ = __webpack_require__("../../../../../src/app/components/vo/sc_member/sc_member.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__components_cmrc_fund_fund_component__ = __webpack_require__("../../../../../src/app/components/cmrc/fund/fund.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__components_vo_attendance_attendance_component__ = __webpack_require__("../../../../../src/app/components/vo/attendance/attendance.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__components_sc_members_member_component__ = __webpack_require__("../../../../../src/app/components/sc/members/member.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__components_cmrc_gender_gender_component__ = __webpack_require__("../../../../../src/app/components/cmrc/gender/gender.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__components_cmrc_taluka_taluka_component__ = __webpack_require__("../../../../../src/app/components/cmrc/taluka/taluka.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__components_cmrc_education_education_component__ = __webpack_require__("../../../../../src/app/components/cmrc/education/education.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__components_cmrc_occupation_occupation_component__ = __webpack_require__("../../../../../src/app/components/cmrc/occupation/occupation.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__components_cmrc_social_category_social_category_component__ = __webpack_require__("../../../../../src/app/components/cmrc/social_category/social_category.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__components_cmrc_economic_category_economic_category_component__ = __webpack_require__("../../../../../src/app/components/cmrc/economic_category/economic_category.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__components_cmrc_ration_card_ration_card_component__ = __webpack_require__("../../../../../src/app/components/cmrc/ration_card/ration_card.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__components_cmrc_designation_designation_component__ = __webpack_require__("../../../../../src/app/components/cmrc/designation/designation.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__components_cmrc_scheme_scheme_component__ = __webpack_require__("../../../../../src/app/components/cmrc/scheme/scheme.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__components_cmrc_area_area_component__ = __webpack_require__("../../../../../src/app/components/cmrc/area/area.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__components_cmrc_loan_reason_loan_reason_component__ = __webpack_require__("../../../../../src/app/components/cmrc/loan_reason/loan_reason.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__components_cmrc_fund_types_fund_types_component__ = __webpack_require__("../../../../../src/app/components/cmrc/fund_types/fund_types.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__components_cmrc_memShare_memShare_component__ = __webpack_require__("../../../../../src/app/components/cmrc/memShare/memShare.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__components_cmrc_maritalStatus_maritalStatus_component__ = __webpack_require__("../../../../../src/app/components/cmrc/maritalStatus/maritalStatus.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__components_cmrc_minority_minority_component__ = __webpack_require__("../../../../../src/app/components/cmrc/minority/minority.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__components_cmrc_fd_fd_component__ = __webpack_require__("../../../../../src/app/components/cmrc/fd/fd.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__components_vo_fund_fund_component__ = __webpack_require__("../../../../../src/app/components/vo/fund/fund.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__components_vo_fund_fundrepayment_component__ = __webpack_require__("../../../../../src/app/components/vo/fund/fundrepayment.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__components_vo_income_other_income_component__ = __webpack_require__("../../../../../src/app/components/vo/income/other_income.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__components_cmrc_ledger_ledger_component__ = __webpack_require__("../../../../../src/app/components/cmrc/ledger/ledger.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__components_public_cmrc_cmrc_component__ = __webpack_require__("../../../../../src/app/components/public/cmrc/cmrc.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__components_public_mavim_mavim_component__ = __webpack_require__("../../../../../src/app/components/public/mavim/mavim.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__components_public_work_work_component__ = __webpack_require__("../../../../../src/app/components/public/work/work.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__components_vo_ledgerentries_ledgerentries_component__ = __webpack_require__("../../../../../src/app/components/vo/ledgerentries/ledgerentries.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__components_vo_AccountTransaction_accounttransaction_component__ = __webpack_require__("../../../../../src/app/components/vo/AccountTransaction/accounttransaction.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__components_cmrc_AccountTransaction_accounttransaction_component__ = __webpack_require__("../../../../../src/app/components/cmrc/AccountTransaction/accounttransaction.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__components_cmrc_fund_fundrepayment_component__ = __webpack_require__("../../../../../src/app/components/cmrc/fund/fundrepayment.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__components_cmrc_ledgerentries_ledgerentries_component__ = __webpack_require__("../../../../../src/app/components/cmrc/ledgerentries/ledgerentries.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__components_cmrc_village_village_component__ = __webpack_require__("../../../../../src/app/components/cmrc/village/village.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__components_cmrc_reports_members_report_component__ = __webpack_require__("../../../../../src/app/components/cmrc/reports/members_report.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__components_cmrc_reports_shg_report_component__ = __webpack_require__("../../../../../src/app/components/cmrc/reports/shg_report.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__components_cmrc_reports_scheme_wise_shg_component__ = __webpack_require__("../../../../../src/app/components/cmrc/reports/scheme_wise_shg_component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__components_cmrc_reports_shgbyvo_component__ = __webpack_require__("../../../../../src/app/components/cmrc/reports/shgbyvo.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__components_district_DISTRICT_BaseComponent__ = __webpack_require__("../../../../../src/app/components/district/DISTRICT.BaseComponent.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__components_cmrc_reports_memberperformance_memberperfromance__ = __webpack_require__("../../../../../src/app/components/cmrc/reports/memberperformance/memberperfromance.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__components_district_dashboard_dashboard_component__ = __webpack_require__("../../../../../src/app/components/district/dashboard/dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__components_vo_finance_finance_component__ = __webpack_require__("../../../../../src/app/components/vo/finance/finance.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__components_district_fund_fund_component__ = __webpack_require__("../../../../../src/app/components/district/fund/fund.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__components_district_fd_fd_component__ = __webpack_require__("../../../../../src/app/components/district/fd/fd.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__components_district_loan_loan_component__ = __webpack_require__("../../../../../src/app/components/district/loan/loan.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__components_public_contact_contact_component__ = __webpack_require__("../../../../../src/app/components/public/contact/contact.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__components_district_memShare_memShare_component__ = __webpack_require__("../../../../../src/app/components/district/memShare/memShare.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__components_district_otherIncome_otherIncome_component__ = __webpack_require__("../../../../../src/app/components/district/otherIncome/otherIncome.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__components_district_shg_shg_component__ = __webpack_require__("../../../../../src/app/components/district/shg/shg.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__components_district_member_member_component__ = __webpack_require__("../../../../../src/app/components/district/member/member.component.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






















































//import { MemberPerformanceComponent } from '../components/cmrc/reports/memberperformance/memberperfromance';














var publicroutes = [
    {
        path: '', component: __WEBPACK_IMPORTED_MODULE_3__components_public_Public_Component__["a" /* PublicComponent */], children: [
            { path: '', component: __WEBPACK_IMPORTED_MODULE_44__components_public_mavim_mavim_component__["a" /* MavimComponent */] },
            { path: 'public', component: __WEBPACK_IMPORTED_MODULE_3__components_public_Public_Component__["a" /* PublicComponent */] },
            { path: 'mavim', component: __WEBPACK_IMPORTED_MODULE_44__components_public_mavim_mavim_component__["a" /* MavimComponent */] },
            { path: 'cmrcp', component: __WEBPACK_IMPORTED_MODULE_43__components_public_cmrc_cmrc_component__["a" /* CMRCComponent */] },
            { path: 'login', component: __WEBPACK_IMPORTED_MODULE_2__components_public_login_login_component__["a" /* LoginComponent */] },
            { path: 'contact', component: __WEBPACK_IMPORTED_MODULE_63__components_public_contact_contact_component__["a" /* ContactComponent */] },
            { path: 'work', component: __WEBPACK_IMPORTED_MODULE_45__components_public_work_work_component__["a" /* WorkComponent */] }
        ]
    },
    {
        path: 'login', component: __WEBPACK_IMPORTED_MODULE_3__components_public_Public_Component__["a" /* PublicComponent */], children: [
            { path: '', redirectTo: '/login', pathMatch: 'full' },
            { path: 'login', component: __WEBPACK_IMPORTED_MODULE_2__components_public_login_login_component__["a" /* LoginComponent */] }
        ]
    },
    {
        path: 'vo', component: __WEBPACK_IMPORTED_MODULE_4__components_vo_VO_BaseComponent__["a" /* VOBaseComponent */], children: [
            { path: '', component: __WEBPACK_IMPORTED_MODULE_5__components_vo_dashboard_dashboard_component__["a" /* VoDashboardComponent */] },
            { path: 'dashbord', component: __WEBPACK_IMPORTED_MODULE_5__components_vo_dashboard_dashboard_component__["a" /* VoDashboardComponent */] },
            { path: 'shg_master', component: __WEBPACK_IMPORTED_MODULE_9__components_vo_shg_master_shg_master_component__["a" /* ShgMasterComponent */] },
            { path: 'shg_master/member', component: __WEBPACK_IMPORTED_MODULE_6__components_vo_member_member_component__["a" /* MemberComponent */] },
            { path: 'member', component: __WEBPACK_IMPORTED_MODULE_6__components_vo_member_member_component__["a" /* MemberComponent */] },
            { path: 'dashboad', component: __WEBPACK_IMPORTED_MODULE_5__components_vo_dashboard_dashboard_component__["a" /* VoDashboardComponent */] },
            { path: 'fixdeposite', component: __WEBPACK_IMPORTED_MODULE_7__components_vo_fix_deposite_fixdeposite_component__["a" /* FixDepositeComponent */] },
            { path: 'loan', component: __WEBPACK_IMPORTED_MODULE_8__components_vo_loan_loan_component__["a" /* LoanComponent */] },
            { path: 'loanrepayment', component: __WEBPACK_IMPORTED_MODULE_10__components_vo_loan_loanrepayment_component__["a" /* LoanRepaymentComponent */] },
            { path: 'vo_members', component: __WEBPACK_IMPORTED_MODULE_18__components_vo_vo_members_vo_members_component__["a" /* VOCMembersComponent */] },
            { path: 'sc_member/vo_members', component: __WEBPACK_IMPORTED_MODULE_18__components_vo_vo_members_vo_members_component__["a" /* VOCMembersComponent */] },
            { path: 'fund', component: __WEBPACK_IMPORTED_MODULE_39__components_vo_fund_fund_component__["a" /* VOFundComponent */] },
            { path: 'fundrepayment', component: __WEBPACK_IMPORTED_MODULE_40__components_vo_fund_fundrepayment_component__["a" /* VOFundRepaymentComponent */] },
            { path: 'vo_members/sc_member', component: __WEBPACK_IMPORTED_MODULE_19__components_vo_sc_member_sc_member_component__["a" /* SCMemberComponent */] },
            { path: 'attendance', component: __WEBPACK_IMPORTED_MODULE_21__components_vo_attendance_attendance_component__["a" /* AttendanceComponent */] },
            { path: 'income', component: __WEBPACK_IMPORTED_MODULE_41__components_vo_income_other_income_component__["a" /* VOOtherIncome */] },
            { path: 'AccTransaction', component: __WEBPACK_IMPORTED_MODULE_47__components_vo_AccountTransaction_accounttransaction_component__["a" /* VOViewAccountTransctionComponent */] },
            { path: 'SLEntry', component: __WEBPACK_IMPORTED_MODULE_46__components_vo_ledgerentries_ledgerentries_component__["a" /* SLEntryComponent */] },
            { path: 'Finance', component: __WEBPACK_IMPORTED_MODULE_59__components_vo_finance_finance_component__["a" /* VOFinanceComponent */] }
        ]
    },
    {
        path: 'sc', component: __WEBPACK_IMPORTED_MODULE_11__components_sc_base_component__["a" /* SCBaseComponent */], children: [
            { path: '', component: __WEBPACK_IMPORTED_MODULE_12__components_sc_loan_loan_component__["a" /* SCLoanComponent */] },
            { path: 'loan', component: __WEBPACK_IMPORTED_MODULE_12__components_sc_loan_loan_component__["a" /* SCLoanComponent */] },
            { path: 'members', component: __WEBPACK_IMPORTED_MODULE_22__components_sc_members_member_component__["a" /* ALLSCMembers */] }
        ]
    },
    {
        path: 'district', component: __WEBPACK_IMPORTED_MODULE_56__components_district_DISTRICT_BaseComponent__["a" /* DISTRICTBaseComponent */], children: [
            { path: '', component: __WEBPACK_IMPORTED_MODULE_58__components_district_dashboard_dashboard_component__["a" /* DistrictDashboardComponent */] },
            { path: '', component: __WEBPACK_IMPORTED_MODULE_58__components_district_dashboard_dashboard_component__["a" /* DistrictDashboardComponent */] },
            { path: 'dashbord', component: __WEBPACK_IMPORTED_MODULE_58__components_district_dashboard_dashboard_component__["a" /* DistrictDashboardComponent */] },
            { path: 'fund', component: __WEBPACK_IMPORTED_MODULE_60__components_district_fund_fund_component__["a" /* DistrictFundComponent */] },
            { path: 'fd', component: __WEBPACK_IMPORTED_MODULE_61__components_district_fd_fd_component__["a" /* DistrictFDComponent */] },
            { path: 'loan', component: __WEBPACK_IMPORTED_MODULE_62__components_district_loan_loan_component__["a" /* DistrictLoanComponent */] },
            { path: 'memShare', component: __WEBPACK_IMPORTED_MODULE_64__components_district_memShare_memShare_component__["a" /* DistrictMemberShareComponent */] },
            { path: 'otherIncome', component: __WEBPACK_IMPORTED_MODULE_65__components_district_otherIncome_otherIncome_component__["a" /* DistrictOtherIncomeComponent */] },
            { path: 'shg', component: __WEBPACK_IMPORTED_MODULE_66__components_district_shg_shg_component__["a" /* DistrictSHGComponent */] },
            { path: 'member', component: __WEBPACK_IMPORTED_MODULE_67__components_district_member_member_component__["a" /* DistrictMemberComponent */] }
        ]
    },
    {
        path: 'cmrc', component: __WEBPACK_IMPORTED_MODULE_13__components_cmrc_CMRC_BaseComponent__["a" /* CMRCBaseComponent */], children: [
            { path: '', component: __WEBPACK_IMPORTED_MODULE_14__components_cmrc_dashboard_dashboard_component__["a" /* CMRCDashboardComponent */] },
            { path: 'dashboard', component: __WEBPACK_IMPORTED_MODULE_14__components_cmrc_dashboard_dashboard_component__["a" /* CMRCDashboardComponent */] },
            { path: 'vo', component: __WEBPACK_IMPORTED_MODULE_15__components_cmrc_vo_vo_component__["a" /* VoComponent */] },
            { path: 'district', component: __WEBPACK_IMPORTED_MODULE_17__components_cmrc_district_district_component__["a" /* CmrcdistrictComponent */] },
            { path: 'fund', component: __WEBPACK_IMPORTED_MODULE_20__components_cmrc_fund_fund_component__["a" /* CMRCFundComponent */] },
            { path: 'fundRepayment', component: __WEBPACK_IMPORTED_MODULE_49__components_cmrc_fund_fundrepayment_component__["a" /* CMRCFundRepaymentComponent */] },
            { path: 'reports', component: __WEBPACK_IMPORTED_MODULE_16__components_cmrc_reports_reports_component__["a" /* CmrcReportComponent */] },
            { path: 'reports/scheme-wise-shg', component: __WEBPACK_IMPORTED_MODULE_54__components_cmrc_reports_scheme_wise_shg_component__["a" /* scheme_wise_shg_Component */] },
            { path: 'reports/shg-by-vo', component: __WEBPACK_IMPORTED_MODULE_55__components_cmrc_reports_shgbyvo_component__["a" /* SHGByVoComponent */] },
            { path: 'gender', component: __WEBPACK_IMPORTED_MODULE_23__components_cmrc_gender_gender_component__["a" /* GenderComponent */] },
            { path: 'ledger', component: __WEBPACK_IMPORTED_MODULE_42__components_cmrc_ledger_ledger_component__["a" /* LedgerComponent */] },
            { path: 'taluka', component: __WEBPACK_IMPORTED_MODULE_24__components_cmrc_taluka_taluka_component__["a" /* TalukaComponent */] },
            { path: 'education', component: __WEBPACK_IMPORTED_MODULE_25__components_cmrc_education_education_component__["a" /* EducationComponent */] },
            { path: 'occupation', component: __WEBPACK_IMPORTED_MODULE_26__components_cmrc_occupation_occupation_component__["a" /* OccupationComponent */] },
            { path: 'social_category', component: __WEBPACK_IMPORTED_MODULE_27__components_cmrc_social_category_social_category_component__["a" /* SocialcategoryComponent */] },
            { path: 'economic_category', component: __WEBPACK_IMPORTED_MODULE_28__components_cmrc_economic_category_economic_category_component__["a" /* EconomiccategoryComponent */] },
            { path: 'ration_card', component: __WEBPACK_IMPORTED_MODULE_29__components_cmrc_ration_card_ration_card_component__["a" /* RationcardComponent */] },
            { path: 'designation', component: __WEBPACK_IMPORTED_MODULE_30__components_cmrc_designation_designation_component__["a" /* DesignationComponent */] },
            { path: 'scheme', component: __WEBPACK_IMPORTED_MODULE_31__components_cmrc_scheme_scheme_component__["a" /* SchemeComponent */] },
            { path: 'area', component: __WEBPACK_IMPORTED_MODULE_32__components_cmrc_area_area_component__["a" /* AreaComponent */] },
            { path: 'loan_reason', component: __WEBPACK_IMPORTED_MODULE_33__components_cmrc_loan_reason_loan_reason_component__["a" /* LoanreasonComponent */] },
            { path: 'reports/member-performance', component: __WEBPACK_IMPORTED_MODULE_57__components_cmrc_reports_memberperformance_memberperfromance__["a" /* MemberPerformanceComponent */] },
            { path: 'fund_types', component: __WEBPACK_IMPORTED_MODULE_34__components_cmrc_fund_types_fund_types_component__["a" /* FundTypeComponent */] },
            { path: 'memShare', component: __WEBPACK_IMPORTED_MODULE_35__components_cmrc_memShare_memShare_component__["a" /* MemShareComponent */] },
            { path: 'maritalStatus', component: __WEBPACK_IMPORTED_MODULE_36__components_cmrc_maritalStatus_maritalStatus_component__["a" /* MaritalStatusComponent */] },
            { path: 'minority', component: __WEBPACK_IMPORTED_MODULE_37__components_cmrc_minority_minority_component__["a" /* MinorityComponent */] },
            { path: 'fd', component: __WEBPACK_IMPORTED_MODULE_38__components_cmrc_fd_fd_component__["a" /* FDComponent */] },
            { path: 'memShare', component: __WEBPACK_IMPORTED_MODULE_35__components_cmrc_memShare_memShare_component__["a" /* MemShareComponent */] },
            { path: 'cmrcAccTransaction', component: __WEBPACK_IMPORTED_MODULE_48__components_cmrc_AccountTransaction_accounttransaction_component__["a" /* VOCMRCAccountTransctionComponent */] },
            // { path: 'LedgerEntry', component: CMRCSLEntryComponent },
            { path: 'reports/shg-report', component: __WEBPACK_IMPORTED_MODULE_53__components_cmrc_reports_shg_report_component__["a" /* SHGReportsComponent */] },
            { path: 'reports/members-report', component: __WEBPACK_IMPORTED_MODULE_52__components_cmrc_reports_members_report_component__["a" /* ActiveAndWithdrawlMembersComponent */] },
            { path: 'LedgerEntry', component: __WEBPACK_IMPORTED_MODULE_50__components_cmrc_ledgerentries_ledgerentries_component__["a" /* CMRCSLEntryComponent */] },
            { path: 'village', component: __WEBPACK_IMPORTED_MODULE_51__components_cmrc_village_village_component__["a" /* VillageComponent */] }
        ]
    }
];
var PublicRoutes = (function () {
    function PublicRoutes() {
    }
    PublicRoutes = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            imports: [__WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* RouterModule */].forRoot(publicroutes)],
            exports: [__WEBPACK_IMPORTED_MODULE_1__angular_router__["b" /* RouterModule */]]
        })
    ], PublicRoutes);
    return PublicRoutes;
}());



/***/ }),

/***/ "../../../../../src/app/services/FileService/file_upload.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FileUploadService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/map.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_catch__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/catch.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/toPromise.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var FileUploadService = (function () {
    function FileUploadService(_http) {
        this._http = _http;
    }
    FileUploadService.prototype.post = function (url, modeldata, token) {
        debugger;
        return this._http
            .post(url, modeldata, this.getPutHeaders(token))
            .toPromise()
            .catch();
    };
    //To Define the Header information
    FileUploadService.prototype.getPutHeaders = function (_token) {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        var __token = 'Bearer ' + _token.replace(/['"]+/g, '');
        // headers.append('Content-Type', undefined);
        // headers.append('Accept', 'application/json');
        //        headers.append('Authorization',__token);
        return new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({
            headers: headers
        });
    };
    FileUploadService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    FileUploadService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */]])
    ], FileUploadService);
    return FileUploadService;
}());



/***/ }),

/***/ "../../../../../src/app/services/cmrc.services.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CMRCService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/map.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_catch__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/catch.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/toPromise.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





//import 'rxjs/add/Observable/throw';

var CMRCService = (function () {
    function CMRCService(_http) {
        this._http = _http;
        this.finalURL = null;
    }
    //Get request with no parameter
    CMRCService.prototype.get = function (url, token) {
        debugger;
        //if (this.checkParam(param1)) {
        //    this.paramFlag1 = true;
        //    this.finalURL = url + param1;
        //}
        //if (this.paramFlag1)
        //    if (this.checkParam(param2)) {
        //        this.paramFlag2 = true;
        //        this.finalURL = url + param2;
        //    }
        //if (this.paramFlag1 && this.paramFlag2) {
        //    if (this.checkParam(param3)) {
        //        this.paramFlag3 = true;
        //        this.finalURL = url + param3;
        //    }
        //}
        //debugger;
        return this._http.get(url, this.getPutHeaders(token))
            .map(function (response) { return response.json(); })
            .toPromise()
            .catch();
    };
    CMRCService.prototype.checkParam = function (para) {
        if (para.toString() == "" || para.toString() == undefined || para == undefined)
            return false;
        else
            return true;
    };
    CMRCService.prototype.post = function (url, modeldata, token) {
        debugger;
        return this._http
            .post(url, modeldata, this.getPutHeaders(token))
            .toPromise()
            .catch();
    };
    //To Define the Header information
    CMRCService.prototype.getPutHeaders = function (_token) {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        var __token = 'Bearer ' + _token.replace(/['"]+/g, '');
        headers.append('Content-Type', 'application/json');
        headers.append('Authorization', __token);
        return new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({
            headers: headers
        });
    };
    CMRCService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    CMRCService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */]])
    ], CMRCService);
    return CMRCService;
}());



/***/ }),

/***/ "../../../../../src/app/services/common.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CommonService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/map.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_catch__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/catch.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/toPromise.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var CommonService = (function () {
    function CommonService(_http) {
        this._http = _http;
        this.finalURL = null;
    }
    //Get request with no parameter
    CommonService.prototype.get = function (url) {
        debugger;
        return this._http.get(url)
            .map(function (response) { return response.json(); })
            .toPromise()
            .catch();
    };
    CommonService.prototype.checkParam = function (para) {
        if (para.toString() == "" || para.toString() == undefined || para == undefined)
            return false;
        else
            return true;
    };
    CommonService.prototype.post = function (url, modeldata, token) {
        debugger;
        return this._http
            .post(url, modeldata, this.getPutHeaders(token))
            .toPromise()
            .catch();
    };
    //To Define the Header information
    CommonService.prototype.getPutHeaders = function (_token) {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        var __token = 'Bearer ' + _token.replace(/['"]+/g, '');
        headers.append('Content-Type', 'application/json');
        headers.append('Authorization', __token);
        return new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({
            headers: headers
        });
    };
    CommonService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    // handleError(error: Response) {
    //     console.error(error);
    //     return Observable.throw(error);
    // }
    CommonService.prototype.convertDigitToWordsInEnglish = function (num) {
        var a = ['', 'ONE ', 'TWO ', 'THREE ', 'FOUR ', 'FIVE ', 'SIX ', 'SEVEN ', 'EIGHT ', 'NINE ', 'TEN ', 'ELEVEN ', 'TWELWE ', 'THIRTEEN ', 'FOURTEEN ', 'FIFTEEN ', 'SIXTEEN ', 'SECENTEEN ', 'EIGHTEEN ', 'NINETEEN '];
        var b = ['', '', 'TWENTY', 'THIRTY', 'FOURTY', 'FIFTY', 'SIXTY', 'SEVENTY', 'EIGHT', 'NINTY'];
        if ((num = num.toString()).length > 9)
            return 'overflow';
        var n = ('000000000' + num).substr(-9).match(/^(\d{2})(\d{2})(\d{2})(\d{1})(\d{2})$/);
        if (!n)
            return;
        var str = '';
        str += (Number(n[1]) != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'CRORE ' : '';
        str += (Number(n[2]) != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'LAKH ' : '';
        str += (Number(n[3]) != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'THOUSAND ' : '';
        str += (Number(n[4]) != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'HUNDRED ' : '';
        str += (Number(n[5]) != 0) ? ((str != '') ? '& ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + 'ONLY ' : '';
        return str;
    };
    CommonService.prototype.convertDigitToWordsInMarathi = function (num) {
        var a = ['', 'एक ', 'दोन ', 'तीन ', 'चार ', 'पाच ', 'सहा ', 'सात ', 'आठ ', 'नऊ ', 'दहा ', 'अकरा ', 'बारा ', 'तेरा ', 'चौदा ', 'पंदरा ', 'सोळा ', 'सतरा ', 'अठरा ', 'एकोणवीस '];
        var b = ['', '', 'वीस', 'तीस', 'चाळीस', 'पन्नास', 'साठ', 'सत्तर', 'अंशी', 'नौवद'];
        if ((num = num.toString()).length > 9)
            return 'overflow';
        var n = ('000000000' + num).substr(-9).match(/^(\d{2})(\d{2})(\d{2})(\d{1})(\d{2})$/);
        if (!n)
            return;
        var str = '';
        str += (Number(n[1]) != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'करोड ' : '';
        str += (Number(n[2]) != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'लाख ' : '';
        str += (Number(n[3]) != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'हजार ' : '';
        str += (Number(n[4]) != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'शे ' : '';
        str += (Number(n[5]) != 0) ? ((str != '') ? 'अणि ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + 'फक्त ' : '';
        return str;
    };
    CommonService.prototype.convertDigitToWordsInHindi = function (num) {
        var a = ['', 'एक ', 'दो ', 'तीन ', 'चार ', 'पांच ', 'छे ', 'सात ', 'आठ ', 'नौ ', 'दस ', 'ग्यारह ', 'बारह ', 'तेरह ', 'चौदह ', 'पंद्रह ', 'सोलह ', 'सतरह ', 'अठारा ', 'उन्नीस '];
        var b = ['', '', 'बिस', 'तिस', 'चालीस', 'पचास', 'साठ', 'सत्तर', 'अस्सी', 'नब्बे'];
        if ((num = num.toString()).length > 9)
            return 'overflow';
        var n = ('000000000' + num).substr(-9).match(/^(\d{2})(\d{2})(\d{2})(\d{1})(\d{2})$/);
        if (!n)
            return;
        var str = '';
        str += (Number(n[1]) != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'करोड़ ' : '';
        str += (Number(n[2]) != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'लाख ' : '';
        str += (Number(n[3]) != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'हज़ार ' : '';
        str += (Number(n[4]) != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'सौ ' : '';
        str += (Number(n[5]) != 0) ? ((str != '') ? 'और ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + 'सिर्फ ' : '';
        return str;
    };
    CommonService.prototype.checkUserSession = function (token) {
        //Check user token and Redirect to the Login page code should go here.
    };
    CommonService.prototype.getCurrentMonth = function (i) {
        var month = "";
        switch (i) {
            case 0:
                month = "JAN";
                break;
            case 1:
                month = "FEB";
                break;
            case 2:
                month = "MAR";
                break;
            case 3:
                month = "APR";
                break;
            case 4:
                month = "MAY";
                break;
            case 5:
                month = "JUN";
                break;
            case 6:
                month = "JUL";
                break;
            case 7:
                month = "AUG";
                break;
            case 8:
                month = "SEPT";
                break;
            case 9:
                month = "OCT";
                break;
            case 10:
                month = "NOV";
                break;
            case 11:
                month = "DEC";
                break;
        }
        return month;
    };
    CommonService.prototype.getTodaysDate = function () {
        var date = new Date();
        return date.getDate() + " " + this.getCurrentMonth(date.getMonth()) + " " + date.getFullYear();
    };
    CommonService.prototype.convertToDate = function (date) {
        debugger;
        var mon = parseInt(date.date.getMonth()) + 1;
        return date.date.getFullYear() + "-" + mon + "-" + date.date.getDate();
    };
    CommonService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */]])
    ], CommonService);
    return CommonService;
}());



/***/ }),

/***/ "../../../../../src/app/services/district.services.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DISTRICTService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/map.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_catch__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/catch.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/toPromise.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





//import 'rxjs/add/Observable/throw';

var DISTRICTService = (function () {
    function DISTRICTService(_http) {
        this._http = _http;
        this.finalURL = null;
    }
    //Get request with no parameter
    DISTRICTService.prototype.get = function (url, token) {
        debugger;
        //if (this.checkParam(param1)) {
        //    this.paramFlag1 = true;
        //    this.finalURL = url + param1;
        //}
        //if (this.paramFlag1)
        //    if (this.checkParam(param2)) {
        //        this.paramFlag2 = true;
        //        this.finalURL = url + param2;
        //    }
        //if (this.paramFlag1 && this.paramFlag2) {
        //    if (this.checkParam(param3)) {
        //        this.paramFlag3 = true;
        //        this.finalURL = url + param3;
        //    }
        //}
        //debugger;
        return this._http.get(url, this.getPutHeaders(token))
            .map(function (response) { return response.json(); })
            .toPromise()
            .catch();
    };
    DISTRICTService.prototype.checkParam = function (para) {
        if (para.toString() == "" || para.toString() == undefined || para == undefined)
            return false;
        else
            return true;
    };
    DISTRICTService.prototype.post = function (url, modeldata, token) {
        debugger;
        return this._http
            .post(url, modeldata, this.getPutHeaders(token))
            .toPromise()
            .catch();
    };
    //To Define the Header information
    DISTRICTService.prototype.getPutHeaders = function (_token) {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        var __token = 'Bearer ' + _token.replace(/['"]+/g, '');
        headers.append('Content-Type', 'application/json');
        headers.append('Authorization', __token);
        return new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({
            headers: headers
        });
    };
    DISTRICTService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    DISTRICTService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */]])
    ], DISTRICTService);
    return DISTRICTService;
}());



/***/ }),

/***/ "../../../../../src/app/services/login.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoginService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/map.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_catch__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/catch.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/toPromise.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





//import 'rxjs/add/Observable/throw';

var LoginService = (function () {
    function LoginService(_http) {
        this._http = _http;
        this.headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]({ 'Content-Type': 'application/json' });
        this.finalURL = null;
    }
    //Get request with no parameter
    LoginService.prototype.get = function (url, param1, param2, param3) {
        debugger;
        //if (this.checkParam(param1)) {
        //    this.paramFlag1 = true;
        //    this.finalURL = url + param1;
        //}
        //if (this.paramFlag1)
        //    if (this.checkParam(param2)) {
        //        this.paramFlag2 = true;
        //        this.finalURL = url + param2;
        //    }
        //if (this.paramFlag1 && this.paramFlag2) {
        //    if (this.checkParam(param3)) {
        //        this.paramFlag3 = true;
        //        this.finalURL = url + param3;
        //    }
        //}
        debugger;
        return this._http.get(url)
            .map(function (response) { return response.json(); })
            .toPromise()
            .catch();
    };
    LoginService.prototype.checkParam = function (para) {
        if (para.toString() == "" || para.toString() == undefined || para == undefined)
            return false;
        else
            return true;
    };
    LoginService.prototype.post = function (url, modeldata) {
        debugger;
        modeldata = "grant_type=password&password=" + modeldata.password + "&username=" + modeldata.username;
        return this._http
            .post(url, modeldata, this.getPutHeaders())
            .toPromise()
            .catch();
    };
    //To Define the Header information
    LoginService.prototype.getPutHeaders = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        headers.append("content-Type", "application/x-www-form-urlencoded");
        return new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({
            headers: headers,
            method: "POST"
        });
    };
    LoginService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    LoginService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */]])
    ], LoginService);
    return LoginService;
}());



/***/ }),

/***/ "../../../../../src/app/services/reports/exportexcel.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ExportToExcel; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_file_saver__ = __webpack_require__("../../../../file-saver/FileSaver.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_file_saver___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_file_saver__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_xlsx__ = __webpack_require__("../../../../xlsx/xlsx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_xlsx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_xlsx__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_xlsx_style__ = __webpack_require__("../../../../xlsx-style/xlsx.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_xlsx_style___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_xlsx_style__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';
var EXCEL_EXTENSION = '.xlsx';
var ExportToExcel = (function () {
    function ExportToExcel() {
        this.shgExportFileName = "SHG LIST";
        this.balanceSheetFileName = "BALANCESHEET REPORT";
    }
    ExportToExcel.prototype.convertSystemDateToReportDate = function (date) {
        var t_date = date.split('-');
        var final_date = t_date[2].split('T')[0] + " " + this.getCurrentMonth((parseInt(t_date[1])) - 1) + " " + t_date[0];
        return final_date;
    };
    ExportToExcel.prototype.getTodaysDate = function () {
        var date = new Date();
        return date.toDateString() + " " + date.getHours() + ":" + date.getMinutes();
    };
    //Method to return the Month in the Text.
    ExportToExcel.prototype.getCurrentMonth = function (i) {
        var month = "";
        switch (i) {
            case 0:
                month = "JAN";
                break;
            case 1:
                month = "FEB";
                break;
            case 2:
                month = "MAR";
                break;
            case 3:
                month = "APR";
                break;
            case 4:
                month = "MAY";
                break;
            case 5:
                month = "JUN";
                break;
            case 6:
                month = "JUL";
                break;
            case 7:
                month = "AUG";
                break;
            case 8:
                month = "SEPT";
                break;
            case 9:
                month = "OCT";
                break;
            case 10:
                month = "NOV";
                break;
            case 11:
                month = "DEC";
                break;
        }
        return month;
    };
    ExportToExcel.prototype.CasteWiseSchemeExport = function (data) {
        // let confjson1 = [{
        //   "SchemName": "",
        //   "Caste": 0,
        //   "Data": 0,
        //   "TotalSHG" : 0
        // },  
        // {
        //   "TotalMem": 0,
        //   "TotalCount": 0
        // }];
        // //confjson1.Push(1);
        // let confJson: any[] = confjson1;
        // confJson.push(confjson1);
    };
    ExportToExcel.prototype.SHGListExport = function (json) {
        var worksheet = __WEBPACK_IMPORTED_MODULE_2_xlsx__["utils"].json_to_sheet(json);
        this.wrapAndCenterCell(worksheet.A1);
        this.wrapAndCenterCell(worksheet.B1);
        this.wrapAndCenterCell(worksheet.C1);
        this.wrapAndCenterCell(worksheet.D1);
        this.wrapAndCenterCell(worksheet.E1);
        this.wrapAndCenterCell(worksheet.F1);
        this.wrapAndCenterCell(worksheet.G1);
        this.wrapAndCenterCell(worksheet.H1);
        this.wrapAndCenterCell(worksheet.I1);
        this.wrapAndCenterCell(worksheet.J1);
        this.wrapAndCenterCell(worksheet.K1);
        this.wrapAndCenterCell(worksheet.L1);
        this.wrapAndCenterCell(worksheet.M1);
        this.wrapAndCenterCell(worksheet.N1);
        this.wrapAndCenterCell(worksheet.O1);
        this.wrapAndCenterCell(worksheet.P1);
        this.wrapAndCenterCell(worksheet.Q1);
        this.wrapAndCenterCell(worksheet.R1);
        this.wrapAndCenterCell(worksheet.S1);
        this.wrapAndCenterCell(worksheet.T1);
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        // Use XLSXStyle instead of XLSX write function which property writes cell styles.
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_3_xlsx_style__["write"](workbook, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, this.shgExportFileName);
    };
    ExportToExcel.prototype.ActivrOrWithdrolMemExcel = function (json, forMemberName) {
        var worksheet = __WEBPACK_IMPORTED_MODULE_2_xlsx__["utils"].json_to_sheet(json);
        this.wrapAndCenterCell(worksheet.A1);
        this.wrapAndCenterCell(worksheet.B1);
        this.wrapAndCenterCell(worksheet.C1);
        this.wrapAndCenterCell(worksheet.D1);
        this.wrapAndCenterCell(worksheet.E1);
        this.wrapAndCenterCell(worksheet.F1);
        this.wrapAndCenterCell(worksheet.G1);
        this.wrapAndCenterCell(worksheet.H1);
        this.wrapAndCenterCell(worksheet.I1);
        this.wrapAndCenterCell(worksheet.J1);
        this.wrapAndCenterCell(worksheet.K1);
        this.wrapAndCenterCell(worksheet.L1);
        this.wrapAndCenterCell(worksheet.M1);
        this.wrapAndCenterCell(worksheet.N1);
        this.wrapAndCenterCell(worksheet.O1);
        this.wrapAndCenterCell(worksheet.P1);
        this.wrapAndCenterCell(worksheet.Q1);
        this.wrapAndCenterCell(worksheet.R1);
        this.wrapAndCenterCell(worksheet.S1);
        this.wrapAndCenterCell(worksheet.T1);
        this.wrapAndCenterCell(worksheet.U1);
        this.wrapAndCenterCell(worksheet.V1);
        this.wrapAndCenterCell(worksheet.W1);
        this.wrapAndCenterCell(worksheet.X1);
        this.wrapAndCenterCell(worksheet.Y1);
        this.wrapAndCenterCell(worksheet.Z1);
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        // Use XLSXStyle instead of XLSX write function which property writes cell styles.
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_3_xlsx_style__["write"](workbook, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, forMemberName + " " + "MEMBER PROFILE_");
    };
    ExportToExcel.prototype.shgByCmrcExcel = function (json) {
        var worksheet = __WEBPACK_IMPORTED_MODULE_2_xlsx__["utils"].json_to_sheet(json);
        this.wrapAndCenterCell(worksheet.A1);
        this.wrapAndCenterCell(worksheet.B1);
        this.wrapAndCenterCell(worksheet.C1);
        this.wrapAndCenterCell(worksheet.D1);
        this.wrapAndCenterCell(worksheet.E1);
        this.wrapAndCenterCell(worksheet.F1);
        this.wrapAndCenterCell(worksheet.G1);
        this.wrapAndCenterCell(worksheet.H1);
        this.wrapAndCenterCell(worksheet.I1);
        this.wrapAndCenterCell(worksheet.J1);
        this.wrapAndCenterCell(worksheet.K1);
        this.wrapAndCenterCell(worksheet.L1);
        this.wrapAndCenterCell(worksheet.M1);
        this.wrapAndCenterCell(worksheet.N1);
        this.wrapAndCenterCell(worksheet.O1);
        this.wrapAndCenterCell(worksheet.P1);
        this.wrapAndCenterCell(worksheet.Q1);
        this.wrapAndCenterCell(worksheet.R1);
        this.wrapAndCenterCell(worksheet.S1);
        this.wrapAndCenterCell(worksheet.T1);
        this.wrapAndCenterCell(worksheet.U1);
        this.wrapAndCenterCell(worksheet.V1);
        this.wrapAndCenterCell(worksheet.W1);
        this.wrapAndCenterCell(worksheet.X1);
        this.wrapAndCenterCell(worksheet.Y1);
        this.wrapAndCenterCell(worksheet.Z1);
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        // Use XLSXStyle instead of XLSX write function which property writes cell styles.
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_3_xlsx_style__["write"](workbook, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, "LIST_OF_SHG_BY_CMRC_REPORT_");
    };
    ExportToExcel.prototype.shgByVoExcel = function (json) {
        var worksheet = __WEBPACK_IMPORTED_MODULE_2_xlsx__["utils"].json_to_sheet(json);
        this.wrapAndCenterCell(worksheet.A1);
        this.wrapAndCenterCell(worksheet.B1);
        this.wrapAndCenterCell(worksheet.C1);
        this.wrapAndCenterCell(worksheet.D1);
        this.wrapAndCenterCell(worksheet.E1);
        this.wrapAndCenterCell(worksheet.F1);
        this.wrapAndCenterCell(worksheet.G1);
        this.wrapAndCenterCell(worksheet.H1);
        this.wrapAndCenterCell(worksheet.I1);
        this.wrapAndCenterCell(worksheet.J1);
        this.wrapAndCenterCell(worksheet.K1);
        this.wrapAndCenterCell(worksheet.L1);
        this.wrapAndCenterCell(worksheet.M1);
        this.wrapAndCenterCell(worksheet.N1);
        this.wrapAndCenterCell(worksheet.O1);
        this.wrapAndCenterCell(worksheet.P1);
        this.wrapAndCenterCell(worksheet.Q1);
        this.wrapAndCenterCell(worksheet.R1);
        this.wrapAndCenterCell(worksheet.S1);
        this.wrapAndCenterCell(worksheet.T1);
        this.wrapAndCenterCell(worksheet.U1);
        this.wrapAndCenterCell(worksheet.V1);
        this.wrapAndCenterCell(worksheet.W1);
        this.wrapAndCenterCell(worksheet.X1);
        this.wrapAndCenterCell(worksheet.Y1);
        this.wrapAndCenterCell(worksheet.Z1);
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        // Use XLSXStyle instead of XLSX write function which property writes cell styles.
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_3_xlsx_style__["write"](workbook, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, "LIST_OF_SHG_BY_VO_REPORT_");
    };
    ExportToExcel.prototype.ageWiseGroupDetailsExcel = function (json) {
        var worksheet = __WEBPACK_IMPORTED_MODULE_2_xlsx__["utils"].json_to_sheet(json);
        this.wrapAndCenterCell(worksheet.A1);
        this.wrapAndCenterCell(worksheet.B1);
        this.wrapAndCenterCell(worksheet.C1);
        this.wrapAndCenterCell(worksheet.D1);
        this.wrapAndCenterCell(worksheet.E1);
        this.wrapAndCenterCell(worksheet.F1);
        this.wrapAndCenterCell(worksheet.G1);
        this.wrapAndCenterCell(worksheet.H1);
        this.wrapAndCenterCell(worksheet.I1);
        this.wrapAndCenterCell(worksheet.J1);
        this.wrapAndCenterCell(worksheet.K1);
        this.wrapAndCenterCell(worksheet.L1);
        this.wrapAndCenterCell(worksheet.M1);
        this.wrapAndCenterCell(worksheet.N1);
        this.wrapAndCenterCell(worksheet.O1);
        this.wrapAndCenterCell(worksheet.P1);
        this.wrapAndCenterCell(worksheet.Q1);
        this.wrapAndCenterCell(worksheet.R1);
        this.wrapAndCenterCell(worksheet.S1);
        this.wrapAndCenterCell(worksheet.T1);
        this.wrapAndCenterCell(worksheet.U1);
        this.wrapAndCenterCell(worksheet.V1);
        this.wrapAndCenterCell(worksheet.W1);
        this.wrapAndCenterCell(worksheet.X1);
        this.wrapAndCenterCell(worksheet.Y1);
        this.wrapAndCenterCell(worksheet.Z1);
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        // Use XLSXStyle instead of XLSX write function which property writes cell styles.
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_3_xlsx_style__["write"](workbook, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, "LIST_OF_AGE_WISE_GROUP_REPORT_");
    };
    ExportToExcel.prototype.VillageWiseShgExcel = function (json) {
        debugger;
        var worksheet = __WEBPACK_IMPORTED_MODULE_2_xlsx__["utils"].json_to_sheet(json);
        this.wrapAndCenterCell(worksheet.A1);
        this.wrapAndCenterCell(worksheet.B1);
        this.wrapAndCenterCell(worksheet.C1);
        this.wrapAndCenterCell(worksheet.D1);
        this.wrapAndCenterCell(worksheet.E1);
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        // Use XLSXStyle instead of XLSX write function which property writes cell styles.
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_3_xlsx_style__["write"](workbook, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, "VILLAGE_WISE_SHG_REPORT");
    };
    ExportToExcel.prototype.schemeWiseShgExcel = function (json) {
        var worksheet = __WEBPACK_IMPORTED_MODULE_2_xlsx__["utils"].json_to_sheet(json);
        this.wrapAndCenterCell(worksheet.A1);
        this.wrapAndCenterCell(worksheet.B1);
        this.wrapAndCenterCell(worksheet.C1);
        this.wrapAndCenterCell(worksheet.D1);
        this.wrapAndCenterCell(worksheet.E1);
        this.wrapAndCenterCell(worksheet.F1);
        this.wrapAndCenterCell(worksheet.G1);
        this.wrapAndCenterCell(worksheet.H1);
        this.wrapAndCenterCell(worksheet.I1);
        this.wrapAndCenterCell(worksheet.J1);
        this.wrapAndCenterCell(worksheet.K1);
        this.wrapAndCenterCell(worksheet.L1);
        this.wrapAndCenterCell(worksheet.M1);
        this.wrapAndCenterCell(worksheet.N1);
        this.wrapAndCenterCell(worksheet.O1);
        this.wrapAndCenterCell(worksheet.P1);
        this.wrapAndCenterCell(worksheet.Q1);
        this.wrapAndCenterCell(worksheet.R1);
        this.wrapAndCenterCell(worksheet.S1);
        this.wrapAndCenterCell(worksheet.T1);
        this.wrapAndCenterCell(worksheet.U1);
        this.wrapAndCenterCell(worksheet.V1);
        this.wrapAndCenterCell(worksheet.W1);
        this.wrapAndCenterCell(worksheet.X1);
        this.wrapAndCenterCell(worksheet.Y1);
        this.wrapAndCenterCell(worksheet.Z1);
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        // Use XLSXStyle instead of XLSX write function which property writes cell styles.
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_3_xlsx_style__["write"](workbook, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, "SCHEME_WISE_SHG_REPORT_");
    };
    ExportToExcel.prototype.listOfVoExcel = function (json) {
        var worksheet = __WEBPACK_IMPORTED_MODULE_2_xlsx__["utils"].json_to_sheet(json);
        this.wrapAndCenterCell(worksheet.A1);
        this.wrapAndCenterCell(worksheet.B1);
        this.wrapAndCenterCell(worksheet.C1);
        this.wrapAndCenterCell(worksheet.D1);
        this.wrapAndCenterCell(worksheet.E1);
        this.wrapAndCenterCell(worksheet.F1);
        this.wrapAndCenterCell(worksheet.G1);
        this.wrapAndCenterCell(worksheet.H1);
        this.wrapAndCenterCell(worksheet.I1);
        this.wrapAndCenterCell(worksheet.J1);
        this.wrapAndCenterCell(worksheet.K1);
        this.wrapAndCenterCell(worksheet.L1);
        this.wrapAndCenterCell(worksheet.M1);
        this.wrapAndCenterCell(worksheet.N1);
        this.wrapAndCenterCell(worksheet.O1);
        this.wrapAndCenterCell(worksheet.P1);
        this.wrapAndCenterCell(worksheet.Q1);
        this.wrapAndCenterCell(worksheet.R1);
        this.wrapAndCenterCell(worksheet.S1);
        this.wrapAndCenterCell(worksheet.T1);
        this.wrapAndCenterCell(worksheet.U1);
        this.wrapAndCenterCell(worksheet.V1);
        this.wrapAndCenterCell(worksheet.W1);
        this.wrapAndCenterCell(worksheet.X1);
        this.wrapAndCenterCell(worksheet.Y1);
        this.wrapAndCenterCell(worksheet.Z1);
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        // Use XLSXStyle instead of XLSX write function which property writes cell styles.
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_3_xlsx_style__["write"](workbook, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, "LIST_OF_VO_REPORT_");
    };
    ExportToExcel.prototype.voMembersExcel = function (json) {
        debugger;
        var worksheet = __WEBPACK_IMPORTED_MODULE_2_xlsx__["utils"].json_to_sheet(json);
        this.wrapAndCenterCell(worksheet.A1);
        this.wrapAndCenterCell(worksheet.B1);
        this.wrapAndCenterCell(worksheet.C1);
        this.wrapAndCenterCell(worksheet.D1);
        this.wrapAndCenterCell(worksheet.E1);
        this.wrapAndCenterCell(worksheet.F1);
        this.wrapAndCenterCell(worksheet.G1);
        this.wrapAndCenterCell(worksheet.H1);
        this.wrapAndCenterCell(worksheet.I1);
        this.wrapAndCenterCell(worksheet.J1);
        this.wrapAndCenterCell(worksheet.K1);
        this.wrapAndCenterCell(worksheet.L1);
        this.wrapAndCenterCell(worksheet.M1);
        this.wrapAndCenterCell(worksheet.N1);
        this.wrapAndCenterCell(worksheet.O1);
        debugger;
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        // Use XLSXStyle instead of XLSX write function which property writes cell styles.
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_3_xlsx_style__["write"](workbook, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, "SC_REPORT");
    };
    ExportToExcel.prototype.subLedgerExcel = function (json) {
        var worksheet = __WEBPACK_IMPORTED_MODULE_2_xlsx__["utils"].json_to_sheet(json);
        this.wrapAndCenterCell(worksheet.A1);
        this.wrapAndCenterCell(worksheet.B1);
        this.wrapAndCenterCell(worksheet.C1);
        this.wrapAndCenterCell(worksheet.D1);
        this.wrapAndCenterCell(worksheet.E1);
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        // Use XLSXStyle instead of XLSX write function which property writes cell styles.
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_3_xlsx_style__["write"](workbook, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, "SUB_LEDGER_DETAILS_REPORT_");
    };
    ExportToExcel.prototype.loanDetailExportToExcel = function (json) {
        var worksheet = __WEBPACK_IMPORTED_MODULE_2_xlsx__["utils"].json_to_sheet(json);
        this.wrapAndCenterCell(worksheet.A1);
        this.wrapAndCenterCell(worksheet.B1);
        this.wrapAndCenterCell(worksheet.C1);
        this.wrapAndCenterCell(worksheet.D1);
        this.wrapAndCenterCell(worksheet.E1);
        this.wrapAndCenterCell(worksheet.F1);
        this.wrapAndCenterCell(worksheet.G1);
        this.wrapAndCenterCell(worksheet.H1);
        this.wrapAndCenterCell(worksheet.I1);
        this.wrapAndCenterCell(worksheet.J1);
        this.wrapAndCenterCell(worksheet.K1);
        this.wrapAndCenterCell(worksheet.L1);
        this.wrapAndCenterCell(worksheet.M1);
        this.wrapAndCenterCell(worksheet.N1);
        this.wrapAndCenterCell(worksheet.O1);
        this.wrapAndCenterCell(worksheet.P1);
        this.wrapAndCenterCell(worksheet.Q1);
        this.wrapAndCenterCell(worksheet.R1);
        this.wrapAndCenterCell(worksheet.S1);
        this.wrapAndCenterCell(worksheet.T1);
        this.wrapAndCenterCell(worksheet.U1);
        this.wrapAndCenterCell(worksheet.V1);
        this.wrapAndCenterCell(worksheet.W1);
        this.wrapAndCenterCell(worksheet.X1);
        this.wrapAndCenterCell(worksheet.Y1);
        this.wrapAndCenterCell(worksheet.Z1);
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        // Use XLSXStyle instead of XLSX write function which property writes cell styles.
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_3_xlsx_style__["write"](workbook, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, "SHG_LOAN_DETAILS_");
    };
    ExportToExcel.prototype.ExportBalancesheetToExcel = function (data, reportData) {
        debugger;
        var worksheet = __WEBPACK_IMPORTED_MODULE_2_xlsx__["utils"].sheet_to_json(data);
        // this.wrapAndCenterCell(worksheet.D1);
        // this.wrapAndCenterCell(worksheet.E1);
        // this.wrapAndCenterCell(worksheet.F1);
        // this.wrapAndCenterCell(worksheet.G1);
        // this.wrapAndCenterCell(worksheet.H1);
        // this.wrapAndCenterCell(worksheet.I1);
        // this.wrapAndCenterCell(worksheet.J1);
        // this.wrapAndCenterCell(worksheet.K1);
        // this.wrapAndCenterCell(worksheet.L1);
        // this.wrapAndCenterCell(worksheet.M1);
        // this.wrapAndCenterCell(worksheet.N1);
        // this.wrapAndCenterCell(worksheet.O1);
        // this.wrapAndCenterCell(worksheet.P1);
        // this.wrapAndCenterCell(worksheet.Q1);
        // this.wrapAndCenterCell(worksheet.R1);
        // this.wrapAndCenterCell(worksheet.S1);
        // this.wrapAndCenterCell(worksheet.T1);
        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };
        // Use XLSXStyle instead of XLSX write function which property writes cell styles.
        var excelBuffer = __WEBPACK_IMPORTED_MODULE_3_xlsx_style__["write"](workbook, { bookType: 'xlsx', type: 'buffer' });
        this.saveAsExcelFile(excelBuffer, this.balanceSheetFileName);
    };
    //Do not change.
    ExportToExcel.prototype.wrapAndCenterCell = function (cell) {
        var wrapAndCenterCellStyle = {
            alignment: { wrapText: false, vertical: 'center', horizontal: 'center' },
            //fill: {patternType: "solid"},
            font: { sz: "12" }
        };
        this.setCellStyle(cell, wrapAndCenterCellStyle);
    };
    ExportToExcel.prototype.setCellStyle = function (cell, style) {
        cell.s = style;
    };
    ExportToExcel.prototype.saveAsExcelFile = function (buffer, filename) {
        var data = new Blob([buffer], {
            type: EXCEL_TYPE
        });
        __WEBPACK_IMPORTED_MODULE_1_file_saver__["saveAs"](data, filename + this.getTodaysDate() + EXCEL_EXTENSION);
    };
    ExportToExcel = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [])
    ], ExportToExcel);
    return ExportToExcel;
}());



/***/ }),

/***/ "../../../../../src/app/services/reports/exportpdf.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ExportToPDF; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_jspdf__ = __webpack_require__("../../../../jspdf/dist/jspdf.min.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_jspdf___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_jspdf__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__environments_GlobalVeriables__ = __webpack_require__("../../../../../src/app/environments/GlobalVeriables.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ExportToPDF = (function () {
    function ExportToPDF(globalVariable) {
        this.globalVariable = globalVariable;
        this.R2_headername = "GENERAL AND SUB LEDGER DETAILS REPORT";
        this.R16_headername = "MEMBER PROFILE REPORT";
        this.R52_headername = "SHG REPORT BY CMRC";
        this.maritalStatusFName = "MARITALL STATUS WISE REPORT";
    }
    ExportToPDF.prototype.convertSystemDateToReportDate = function (date) {
        var t_date = date.split('-');
        var final_date = t_date[2].split('T')[0] + " " + this.getCurrentMonth((parseInt(t_date[1])) - 1) + " " + t_date[0];
        return final_date;
    };
    ExportToPDF.prototype.getTodaysDate = function () {
        var date = new Date();
        return date.toDateString() + " " + date.getHours() + ":" + date.getMinutes();
    };
    //Method use to convert the amount to currency.
    ExportToPDF.prototype.ConvertCurrency = function (amt) {
        //debugger;
        //  return "10,439 /-";
        var s_amt = amt.toString();
        var amt_l = s_amt.length;
        switch (amt_l) {
            case 4:
                return s_amt.slice(0, 1) + "," + s_amt.slice(1, amt_l) + "/-";
            case 5:
                return s_amt.slice(0, 2) + "," + s_amt.slice(2, amt_l) + "/-";
            case 6:
                return s_amt.slice(0, 1) + "," + s_amt.slice(0, 2) + "," + s_amt.slice(3, amt_l) + "/-";
            case 7:
                return s_amt.slice(0, 2) + "," + s_amt.slice(2, 4) + "," + s_amt.slice(4, amt_l) + "/-";
            default:
                return s_amt + "/-";
        }
        //let n_count = num.length;        
    };
    //Method to return the Month in the Text.
    ExportToPDF.prototype.getCurrentMonth = function (i) {
        var month = "";
        switch (i) {
            case 0:
                month = "JAN";
                break;
            case 1:
                month = "FEB";
                break;
            case 2:
                month = "MAR";
                break;
            case 3:
                month = "APR";
                break;
            case 4:
                month = "MAY";
                break;
            case 5:
                month = "JUN";
                break;
            case 6:
                month = "JUL";
                break;
            case 7:
                month = "AUG";
                break;
            case 8:
                month = "SEPT";
                break;
            case 9:
                month = "OCT";
                break;
            case 10:
                month = "NOV";
                break;
            case 11:
                month = "DEC";
                break;
        }
        return month;
    };
    ExportToPDF.prototype.convertDate = function (date) {
        return "";
    };
    ExportToPDF.prototype.FixTextWidth = function (doc, x, x_counter, y, data) {
        var len = data.length;
        var strArray = [];
        var start = 0;
        for (var i = 0; i <= len; (i = i + x_counter)) {
            var testData = data.substr(i, x_counter);
            doc.text(x, y, testData);
            y = y + 5;
        }
        return y;
    };
    ExportToPDF.prototype.downloadPDF = function () {
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 10;
        // this.FixTextWidth(doc, 2, 10, 30, "Pragati Lokasnachalit, sadhan kendra, karjat, ds Raigadh");
        var dotLoc = 80;
        var x_counter = 0;
        var y = 0;
        var p = 275;
        var q = 285;
        var y_counter = 10;
        var x_rect;
        doc.setFont("arial", "bold");
        doc.setFontSize(15);
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "SHG FORM DETAILS");
        doc.setFontSize(10);
        doc.setFontType("normal");
        doc.rect(90, 35, 75, 7, 's');
        doc.text(x, y = y + y_counter, "SCHEME NAME");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 15, 75, 7, 's');
        doc.text(x, y = y + y_counter, "SHG NAME");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 25, 75, 7, 's');
        doc.text(x, y = y + y_counter, "GENDER");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 35, 75, 7, 's');
        doc.text(x, y = y + y_counter, "ADDRESS");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 45, 75, 7, 's');
        doc.text(x, y = y + y_counter, "VILLAGE");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 55, 75, 7, 's');
        doc.text(x, y = y + y_counter, "DISTRICT");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 65, 75, 7, 's');
        doc.text(x, y = y + y_counter, "TALUKA");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 75, 75, 7, 's');
        doc.text(x, y = y + y_counter, "DATA OF FORMATION");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 85, 75, 7, 's');
        doc.text(x, y = y + y_counter, "MEETING DATE");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 95, 75, 7, 's');
        doc.text(x, y = y + y_counter, "AREA");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 105, 75, 7, 's');
        doc.text(x, y = y + y_counter, "BLOCK");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 115, 75, 7, 's');
        doc.text(x, y = y + y_counter, " PAN CARD NUMBER");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 125, 75, 7, 's');
        doc.text(x, y = y + y_counter, " BANK NAME ");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 135, 75, 7, 's');
        doc.text(x, y = y + y_counter, "BRANCH NAME");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 145, 75, 7, 's');
        doc.text(x, y = y + y_counter, "BANK ACCOUNT NUMBER");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 155, 75, 7, 's');
        doc.text(x, y = y + y_counter, "IFSC CODE ");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 165, 75, 7, 's');
        doc.text(x, y = y + y_counter, "CONTACT NUMBER ");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 175, 75, 7, 's');
        doc.text(x, y = y + y_counter, "ADHAR CARD NUMBER");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 185, 75, 7, 's');
        doc.text(x, y = y + y_counter, "PAN CARD NUMBER");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 195, 75, 7, 's');
        doc.text(x, y = y + y_counter, "SHG JOINING DATE");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 205, 75, 7, 's');
        doc.text(x, y = y + y_counter, "DESIGNATION");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 215, 75, 7, 's');
        doc.text(x, y = y + y_counter, "BANK NAME");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 225, 75, 7, 's');
        doc.text(x, y = y + y_counter, "BRANCH NAME");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 235, 75, 7, 's');
        doc.text(x, y = y + y_counter, "PERSONAL BANK ACCOUNT NUMBER");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 245, 75, 7, 's');
        doc.text(x, y = y + y_counter, "IFSC CODE");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 255, 75, 7, 's');
        doc.text(x, y = y + y_counter, "BANK ADDRESS");
        doc.text(dotLoc, y, ":");
        doc.rect(90, 265, 75, 7, 's');
        doc.text(145, p = p + (y_counter), "DATE AND MEMBER SIGNATURE");
        doc.text(145, q = q + (y_counter), "DATE PRESIDENT AND SIGNATURE");
        doc.save("SHG_FORM.pdf");
    };
    ExportToPDF.prototype.R7_AgeWiseGroupDetails = function (data) {
        debugger;
        // alert("pdf called");
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 3;
        var dotLoc = 80;
        var x_counter = 25;
        var y = 44;
        var p = 275;
        var q = 285;
        var y_counter = 30;
        var x_rect = 1;
        var y_rect = 40;
        var x_len = 205;
        var y_len = 0;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(65, 8, "AGE WISE SHG GROUP DETAILS ");
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        doc.setFontSize(9);
        doc.text(75, 15, "CMRC NAME    :");
        doc.text(105, 15, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName.toString());
        doc.text(75, 20, "CMRC CODE    :");
        doc.text(105, 20, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode.toString());
        // doc.text(75, 25, "VO NAME    :");
        // doc.text(105, 25, data.VOName == null ? "" : data.VOName.toString());
        // doc.text(75, 30, "VO CODE    :")
        // doc.text(103, 30, this.globalVariable.voBaseCode == null ? "" : this.globalVariable.voBaseCode.toString());
        doc.setFontSize(10);
        doc.text(5, 33, "TOTAL COUNT  :");
        doc.text(35, 33, data.length.toString() == null ? " " : data.length.toString());
        doc.rect(x_rect, 28, x_len, 0);
        doc.setFontSize(10);
        doc.text(x, y, "VO NAME");
        doc.text(x = x + x_counter + 22, y, "Village");
        doc.text(x = x + x_counter + 15, y, "SHG Code");
        doc.text(x = x + x_counter + 22, y, "Formation Date");
        doc.text(x = x + x_counter + 15, y, "Years");
        doc.text(x = x + x_counter - 5, y, "Months");
        doc.rect(x_rect, 46, x_len, 0);
        doc.setFontType("normal");
        y = y + 10;
        var newY = 0;
        for (var item in data) {
            x = 3;
            newY = this.FixTextWidth(doc, x, 18, y, data[item].VOName == null ? "" : data[item].VOName);
            //  doc.text(x, y, data[item].VOName == null ? "" : data[item].VOName);
            doc.text(x = x + x_counter + 22, y, data[item].VillageName == null ? "" : data[item].VillageName);
            doc.text(x = x + x_counter + 12, y, data[item].Code == null ? "" : data[item].Code.toString());
            x = x + 20;
            doc.text(x = x + x_counter + 5, y, data[item].DateOfFormation == null ? "" : this.convertSystemDateToReportDate(data[item].DateOfFormation.toString()));
            doc.text(x = x + x_counter + 17, y, data[item].Year == null ? "" : data[item].Year.toString());
            doc.text(x = x + x_counter - 3, y, data[item].Month == null ? "" : data[item].Month.toString());
            y = newY;
            doc.rect(x_rect, newY - 4, x_len, 0);
            y_rect = y_rect + 5;
            y = y + y_counter - 20;
            if (y >= 280) {
                doc.addPage();
                y = 20;
                newY = 15;
            }
        }
        doc.save("AGE_WISE_GROUP_DETAILS_" + this.getTodaysDate() + ".pdf");
    };
    ExportToPDF.prototype.R8_AgeWiseSchemeDetails = function (data) {
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 3;
        var dotLoc = 80;
        var x_counter = 25;
        var y = 40;
        var p = 275;
        var q = 285;
        var y_counter = 30;
        var x_rect = 1;
        var y_rect = 40;
        var x_len = 205;
        var y_len = 0;
        var x_colon = 96;
        var y_colan = 15;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(69, 10, "SCHEME WISE SHG DETAILS ");
        doc.setFontSize(9);
        doc.text(72, 15, "CMRC NAME");
        doc.text(x_colon, y_colan, ":");
        doc.text(103, 15, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName.toString());
        doc.text(72, 20, "CMRC CODE");
        doc.text(x_colon, y_colan + 5, ":");
        doc.text(103, 20, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode.toString());
        // doc.text(72, 25, "VO NAME")
        // doc.text(x_colon,y_colan + 10, ":");
        // doc.text(103, 25, this.voProfileDetails(data.VONAME) == null ? "" : this.voProfileDetails(data.VONAME.toString()));
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        debugger;
        doc.rect(x_rect, 30, x_len, 0);
        doc.setFontSize(10);
        doc.text(x, y, "Scheme Code");
        doc.text(x = x + x_counter + 2, y, "Scheme Name");
        doc.text(x = x + x_counter + 5, y, "Scheme Date");
        doc.text(x = x + x_counter + 5, y, "SHG NAME");
        doc.rect(0, 44, 210, 0);
        doc.setFontType("normal");
        y = y + 10;
        for (var item in data) {
            x = 3;
            doc.text(x, y, data[item].SchemeId == null ? "" : data[item].SchemeId.toString());
            doc.text(x = x + x_counter, y, data[item].SchemeName == null ? "" : data[item].SchemeName.toString());
            doc.text(x = x + x_counter + 4, y, data[item].SchemeDate == null ? "" : this.convertSystemDateToReportDate(data[item].SchemeDate.toString()));
            doc.text(x = x + x_counter + 5, y, data[item].Name == null ? "" : data[item].Name.toString());
            x = x + 20;
            doc.rect(0, y + 4, 210, 0);
            y_rect = y_rect + 15;
            y = y + y_counter - 20;
            if (y >= 280) {
                doc.addPage();
                y = 20;
                y = 15;
            }
        }
        doc.save("SCHEME_WISE_SHG_DETAILS_" + this.getTodaysDate() + ".pdf");
    };
    ExportToPDF.prototype.R38_SchemeAndCastWiseSHGDetails = function (data, casteData, shgCount, memebrCount, forVoName) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 2;
        var dotLoc = 80;
        var x_counter = 25;
        var y = 40;
        var p = 275;
        var q = 285;
        var y_counter = 30;
        var x_rect = 1;
        var y_rect = 40;
        var x_len = 205;
        var y_len = 0;
        var x_colon_counter = 100;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(43, 10, "SCHEME AND CASTE WISE SCHEME DETAILS ");
        doc.setFontSize(9);
        doc.text(75, 16, "CMRC NAME");
        doc.text(x_colon_counter, 16, ":");
        doc.text(110, 16, forVoName.CMRCName == null ? "" : forVoName.CMRCName);
        doc.text(75, 21, "CMRC CODE");
        doc.text(x_colon_counter, 21, ":");
        doc.text(110, 21, forVoName.ParentCode == null ? "" : forVoName.ParentCode.toString());
        doc.text(75, 26, "VO NAME");
        doc.text(x_colon_counter, 26, ":");
        doc.text(110, 26, forVoName.Name == null ? "" : forVoName.Name);
        doc.text(75, 31, "VO CODE");
        doc.text(x_colon_counter, 31, ":");
        doc.text(110, 31, forVoName.Code == null ? "" : forVoName.Code.toString());
        doc.setFontSize(8);
        doc.setFontType("bold");
        doc.text(175, 8, this.getTodaysDate());
        doc.rect(x_rect - 2, 34, x_len + 7, 0);
        doc.setFontSize(10);
        doc.text(x, y, "SCHEME NAME");
        doc.text(x = x + x_counter + 5, y, "TOTAL SHG");
        doc.text(x = x + x_counter, y, "SC");
        doc.text(x = x + x_counter - 5, y, "ST");
        doc.text(x = x + x_counter - 7, y, "NT+");
        doc.text(x = x + x_counter - 6, y, "OBC");
        doc.text(x = x + x_counter - 8, y, "MINORITY");
        doc.text(x = x + x_counter - 5, y, "OPEN");
        doc.text(x = x + x_counter - 12, y, "TOTAL MEM");
        doc.text(x = x + x_counter, y, "SCHEME %");
        doc.rect(x_rect - 2, 44, x_len + 7, 0);
        doc.setFontType("normal");
        y = y + 10;
        for (var item in data) {
            debugger;
            x = 2;
            doc.text(x, y, data[item].SchemeName == null ? "" : data[item].SchemeName);
            doc.text(x = x + x_counter + 10, y, data[item].TotalSHGCount == null ? "0" : data[item].TotalSHGCount.toString());
            for (var indata in data[item].Data) {
                doc.text(x = x + 20, y, data[item].Data[indata].totalMem.toString());
            }
            doc.text(x = x + x_counter - 12, y, data[item].TotalMembers == 0 ? "0" : data[item].TotalMembers.toString());
            doc.text(x = x + x_counter - 6, y, data[item].TotalMembersPercentage == 0 ? "0" : data[item].TotalMembersPercentage.toString() + " " + "%");
            doc.rect(x_rect, y + 4, x_len, 0);
            y = y + 10;
        }
        x = 7;
        doc.text(2, y, "Total");
        doc.text(x = x + x_counter + 5, y, shgCount.toString());
        for (var totalcount in casteData) {
            doc.text(x = x + x_counter - 5, y, casteData[totalcount].totalMem == 0 ? "0" : casteData[totalcount].totalMem.toString());
        }
        doc.text(x = x + x_counter - 12, y, memebrCount == 0 ? "0" : memebrCount.toString());
        doc.text(x = x + x_counter - 7, y, "100 %");
        x = 5;
        doc.rect(x_rect, y + 4, x_len, 0);
        y = y + 10;
        doc.text(x = x + x_counter - 5, y, "CASTE WISE (%)");
        //doc.setFontSize(10);
        x = 37;
        x_counter = 20;
        for (var totalcountinper in casteData) {
            doc.text(x = x + x_counter, y, casteData[totalcountinper].percentage == 0 ? "0" : casteData[totalcountinper].percentage.toString() + " " + "%");
            /// x_counter = x_counter + 1;
        }
        doc.save("SCHEME_AND_CASTE_WISE_DETAILS_" + this.getTodaysDate() + ".pdf");
    };
    //Pdf for active or withdrawl members- Anjali
    ExportToPDF.prototype.R16_MemberProfileAtCmrcLevel = function (data, fileName) {
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 3;
        var dotLoc = 80;
        var x_counter = 25;
        var y = 40;
        var x_colon_counter = 100;
        var y_counter = 30;
        var x_rect = 2;
        var y_rect = 260;
        var x_len = 220;
        var y_len = 0;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(54, 10, fileName + " " + this.R16_headername);
        doc.setFontSize(9);
        doc.text(88 + 19, 15, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(78, 15, "CMRC CODE");
        doc.text(x_colon_counter + 1, 15, ":");
        doc.text(87 + 20, 20, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(78, 20, "CMRC NAME");
        doc.text(x_colon_counter + 1, 20, ":");
        doc.setFontSize(10);
        doc.text(5, 35, "MEMBERS COUNT :");
        doc.text(40, 35, data.length.toString() == null ? "" : data.length.toString());
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        doc.text(x, y, "SHG NAME");
        doc.text(x = x + x_counter + 4, y, "CODE");
        doc.text(x = x + x_counter, y, "MEMBER FULL NAME");
        x = x + 20;
        doc.text(x = x + x_counter - 4, y, "DESIGNATION");
        doc.text(x = x + x_counter, y, "MOBILE NUMBER");
        doc.text(x = x + x_counter + 2, y, "CATEGORY");
        doc.text(x = x + x_counter, y, "SHG JOIN DATE");
        doc.setFontType("normal");
        doc.rect(0, 30, 210, 0, 's');
        y = y + 10;
        var newY = 0;
        for (var item in data) {
            x = 3;
            newY = this.FixTextWidth(doc, x, 12, y, data[item].SHGName);
            doc.text(x = x + x_counter, y, data[item].Code.toString());
            doc.text(x = x + x_counter + 5, y, data[item].FirstName.toString() + " " + data[item].LastName.toString());
            x = x + 20;
            doc.text(x = x + x_counter, y, data[item].DesignationName == null ? "" : data[item].DesignationName);
            doc.text(x = x + x_counter, y, data[item].MobileNumber.toString());
            doc.text(x = x + x_counter + 3, y, data[item].Caste == null ? "" : data[item].Caste);
            doc.text(x = x + x_counter - 2, y, data[item].DateOfJoin == null ? "" : this.convertSystemDateToReportDate(data[item].DateOfJoin));
            y = newY;
            doc.rect(x_rect, newY - 4, x_len, 0);
            y_rect = y_rect + 15;
            if (y >= 280) {
                doc.addPage();
                y = 20;
                newY = 10;
            }
        }
        doc.save(fileName + "_" + "MEMBER_PROFILE_REPORT" + "_" + this.getTodaysDate());
    };
    //Pdf changes for Sub leadger details - Anjali
    ExportToPDF.prototype.R143_slDetailExportTopdf = function (data) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 3;
        var dotLoc = 80;
        var x_counter = 25;
        var y = 44;
        var p = 275;
        var q = 285;
        var y_counter = 10;
        var x_rect = 2;
        var y_rect = 40;
        var x_colon_counter = 100;
        var x_len = 215;
        var y_len = 0;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(72, 10, "SUB LEDGER REPORT");
        doc.setFontSize(9);
        doc.text(88 + 19, 16, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(78, 16, "CMRC CODE");
        doc.text(x_colon_counter + 1, 16, ":");
        doc.text(87 + 21, 21, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(78, 21, "CMRC NAME");
        doc.text(x_colon_counter + 1, 21, ":");
        doc.text(82 + 26, 26, this.globalVariable.VOName == null ? "" : this.globalVariable.VOName);
        doc.text(78, 26, "VO NAME");
        doc.text(x_colon_counter + 1, 26, ":");
        doc.text(77 + 31, 31, this.globalVariable.voBaseCode == null ? "" : this.globalVariable.voBaseCode);
        doc.text(78, 31, "VO CODE");
        doc.text(x_colon_counter + 1, 31, ":");
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        debugger;
        doc.text(x, y, "GL NAME");
        doc.text(x = x + x_counter, y, "SL NAME");
        doc.text(x = x + x_counter + 70, y, "APPLICABLE TO");
        doc.text(x = x + x_counter + 5, y, "FROM ACCOUNT");
        doc.text(x = x + x_counter + 5, y, "TO ACCOUNT");
        doc.setFontType("normal");
        doc.rect(0, 36, 210, 0, 's');
        for (var gltypes in data) {
            for (var sltypes in data[gltypes].slTypes) {
                x = 3;
                y = y + y_counter;
                doc.text(x, y, data[gltypes].GLName);
                doc.text(x = x + x_counter, y, data[gltypes].slTypes[sltypes].SLTypeName);
                doc.text(x = x + x_counter + 70, y, data[gltypes].slTypes[sltypes].ApplicableName);
                doc.text(x = x + x_counter + 5, y, data[gltypes].slTypes[sltypes].FromName);
                doc.text(x = x + x_counter + 5, y, data[gltypes].slTypes[sltypes].ToName);
                doc.rect(x_rect, y + 5, x_len, 0);
                if (y >= 280) {
                    doc.addPage();
                    y = 20;
                    y = 10;
                }
            }
        }
        doc.save("SUB_LADGER_REPORT_" + this.getTodaysDate() + ".pdf");
    };
    //Pdf changes for Shg by cmrcId - Anjali
    ExportToPDF.prototype.R33_shgByCmrcDetailsExportToPdf = function (data) {
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 0;
        var y = 0;
        var x_len = 0;
        var y_len = 0;
        var x_rect = 0;
        var y_rect = 0;
        var x_counter = 25;
        var y_counter = 10;
        var x_colon_counter = 100;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(x = x + 77, y = y + 10, this.R52_headername);
        doc.setFontSize(7);
        doc.text(180, y, this.getTodaysDate());
        doc.setFontSize(10);
        doc.color_spaces = "red";
        doc.text(x, y = y + 5, "CMRC CODE");
        doc.text(x + 25, y, ":");
        doc.text(x + 30, y, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(x, y = y + 5, "CMRC NAME");
        doc.text(x + 25, y, ":");
        doc.text(x + 30, y, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.setFontSize(10);
        doc.text(5, 35, "SHG COUNT :");
        doc.text(31, 35, data.length.toString() == null ? "" : data.length.toString());
        doc.rect(x_rect, y_rect = y_rect + 30, 220, 0);
        x = 2;
        y = 40;
        doc.setFontSize(8);
        doc.text(x, y, "SHG NAME");
        doc.text(x = x + x_counter + 19, y, "CODE");
        doc.text(x = x + x_counter + 4, y, "VO NAME");
        doc.text(x = x + x_counter + 8, y, "CMRC NAME");
        doc.text(x = x + x_counter + 9, y, "DISTRICT");
        doc.text(x = x + x_counter, y, "TALUKA");
        doc.text(x = x + x_counter - 2, y, "VILLAGE");
        debugger;
        var y_count = 50;
        doc.setFontSize(7);
        for (var item in data) {
            x = 2;
            y = y_count;
            var nameY = this.FixTextWidth(doc, x, (x_counter - 1), y, data[item].Name == null ? "" : data[item].Name);
            doc.text(x = x + x_counter + 18, y, data[item].Code.toString());
            var voNameY = this.FixTextWidth(doc, x = x + x_counter - 2, 20, y, data[item].VOName == null ? "" : data[item].VOName);
            if (nameY > voNameY)
                y_count = nameY;
            else
                y_count = voNameY;
            var cmrcNameY = this.FixTextWidth(doc, x = x + x_counter + 13, 20, y, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
            if (y_count < cmrcNameY)
                y_count = cmrcNameY;
            doc.text(x = x + x_counter + 13, y, data[item].District == null ? "" : data[item].District);
            doc.text(x = x + x_counter, y, data[item].Taluka == null ? "" : data[item].Taluka);
            doc.text(x = x + x_counter - 5, y, data[item].VillageName == null ? "" : data[item].VillageName);
            doc.rect(2, y_count - 3, 205, 0);
            if (y >= 280) {
                doc.addPage();
                y = 20;
                y_count = 10;
            }
        }
        doc.save("SHG_REPORT_BY_CMRC" + "_ " + this.getTodaysDate() + ".pdf");
    };
    //Pdf changes for Vo's shg - Anjali
    ExportToPDF.prototype.R34_shgByVoExportTopdf = function (data) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 0;
        var y = 0;
        var x_len = 0;
        var y_len = 0;
        var x_rect = 0;
        var y_rect = 0;
        var x_counter = 25;
        var y_counter = 10;
        var x_colon_counter = 100;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(x = x + 77, y = y + 10, this.R52_headername);
        doc.setFontSize(7);
        doc.text(180, y, this.getTodaysDate());
        doc.setFontSize(10);
        doc.color_spaces = "red";
        doc.text(88 + 19, 15, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(78, 15, "CMRC CODE");
        doc.text(x_colon_counter + 1, 15, ":");
        doc.text(87 + 20, 20, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(78, 20, "CMRC NAME");
        doc.text(x_colon_counter + 1, 20, ":");
        doc.text(82 + 25, 25, data[0].VOName);
        doc.text(78, 25, "VO NAME");
        doc.text(x_colon_counter + 1, 25, ":");
        doc.text(77 + 30, 30, data[0].ParentCode);
        doc.text(78, 30, "VO CODE");
        doc.text(x_colon_counter + 1, 30, ":");
        doc.setFontSize(10);
        doc.text(5, 36, "SHG COUNT :");
        doc.text(29, 36, data.length.toString() == null ? "" : data.length.toString());
        doc.rect(x_rect, y_rect = y_rect + 32, 220, 0);
        x = 2;
        y = 40;
        doc.setFontSize(8);
        doc.text(x, y, "SHG NAME");
        doc.text(x = x + x_counter + 19, y, "CODE");
        doc.text(x = x + x_counter + 4, y, "VO NAME");
        doc.text(x = x + x_counter + 8, y, "CMRC NAME");
        doc.text(x = x + x_counter + 9, y, "DISTRICT");
        doc.text(x = x + x_counter, y, "TALUKA");
        doc.text(x = x + x_counter - 2, y, "VILLAGE");
        var y_count = 50;
        doc.setFontSize(7);
        for (var item in data) {
            x = 2;
            y = y_count;
            var nameY = this.FixTextWidth(doc, x, (x_counter - 1), y, data[item].Name == null ? "" : data[item].Name);
            doc.text(x = x + x_counter + 18, y, data[item].Code.toString());
            var voNameY = this.FixTextWidth(doc, x = x + x_counter - 2, 20, y, data[item].VOName == null ? "" : data[item].VOName);
            if (nameY > voNameY)
                y_count = nameY;
            else
                y_count = voNameY;
            var cmrcNameY = this.FixTextWidth(doc, x = x + x_counter + 13, 20, y, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
            if (y_count < cmrcNameY)
                y_count = cmrcNameY;
            doc.text(x = x + x_counter + 13, y, data[item].District == null ? "" : data[item].District);
            doc.text(x = x + x_counter, y, data[item].Taluka == null ? "" : data[item].Taluka);
            doc.text(x = x + x_counter - 5, y, data[item].VillageName == null ? "" : data[item].VillageName);
            doc.rect(2, y_count - 3, 205, 0);
            if (y >= 270) {
                doc.addPage();
                y = 20;
                y_count = 15;
            }
        }
        doc.save("LIST_OF_SHG_REPORT_BY_VO_" + this.getTodaysDate() + ".pdf");
    };
    //Pdf changes for Vo - Anjali
    ExportToPDF.prototype.R36_VoExportTopdf = function (data, topData) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 3;
        var dotLoc = 80;
        var x_counter = 30;
        var y = 40;
        var p = 275;
        var q = 285;
        var y_counter = 30;
        var x_rect = 2;
        var y_rect = 40;
        var x_len = 220;
        var y_len = 0;
        var x_colon_counter = 100;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(74, 10, "LIST OF VO REPORT ");
        doc.setFontSize(9);
        doc.text(88 + 19, 15, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(78, 15, "CMRC CODE");
        doc.text(x_colon_counter + 1, 15, ":");
        doc.text(87 + 20, 20, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(78, 20, "CMRC NAME");
        doc.text(x_colon_counter + 1, 20, ":");
        doc.setFontSize(10);
        doc.text(5, 30, "VO COUNT :");
        doc.text(27, 30, data.length.toString() == null ? "" : data.length.toString());
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        doc.text(x, y, "VO NAME");
        doc.text(x = x + x_counter + 15, y, "CODE");
        x = x + 3;
        doc.text(x = x + x_counter + 3, y, "CMRC NAME");
        doc.text(x = x + x_counter + 5, y, "DISTRICT");
        doc.text(x = x + x_counter + 5, y, "TALUKA");
        doc.text(x = x + x_counter + 4, y, "VILLAGE");
        doc.setFontType("normal");
        doc.rect(0, 25, 210, 0, 's');
        y = y + 10;
        for (var item in data) {
            x = 3;
            debugger;
            this.FixTextWidth(doc, x, 21, y, data[item].VOName);
            //doc.text(x, y, data[item].VOName == null ? "" : data[item].VOName);
            doc.text(x = x + x_counter + 11, y, data[item].Code.toString());
            x = x + 20;
            doc.text(x = x + x_counter - 11, y, data[item].CMRCName == null ? "" : data[item].CMRCName);
            doc.text(x = x + x_counter + 7, y, data[item].District == null ? "" : data[item].District);
            doc.text(x = x + x_counter + 5, y, data[item].Taluka == null ? "" : data[item].Taluka);
            doc.text(x = x + x_counter + 4, y, data[item].Village == null ? "" : data[item].Village);
            doc.rect(x_rect, y + 7, x_len, 0);
            y_rect = y_rect + 15;
            y = y + y_counter - 20;
            if (y >= 280) {
                doc.addPage();
                y = 20;
                y = 20;
            }
        }
        doc.save("LIST_OF_VO_REPORT_" + this.getTodaysDate() + ".pdf");
    };
    //pdf For download Vo's login. Anjali
    ExportToPDF.prototype.R33_voShgExportTopdf = function (data) {
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 3;
        var dotLoc = 80;
        var x_counter = 30;
        var y = 40;
        var p = 275;
        var q = 285;
        var y_counter = 30;
        var x_rect = 2;
        var y_rect = 40;
        var x_len = 220;
        var y_len = 0;
        var x_colon_counter = 100;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(80, 10, "SHG REPORT ");
        doc.setFontSize(9);
        doc.text(88 + 19, 15, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(78, 15, "CMRC CODE");
        doc.text(x_colon_counter + 1, 15, ":");
        doc.text(87 + 20, 20, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(78, 20, "CMRC NAME");
        doc.text(x_colon_counter + 1, 20, ":");
        doc.text(82 + 25, 25, data[0].VOName);
        doc.text(78, 25, "VO NAME");
        doc.text(x_colon_counter + 1, 25, ":");
        doc.text(77 + 30, 30, data[0].ParentCode);
        doc.text(78, 30, "VO CODE");
        doc.text(x_colon_counter + 1, 30, ":");
        doc.setFontSize(10);
        doc.text(5, 36, "SHG COUNT :");
        doc.text(30, 36, data.length.toString() == null ? "" : data.length.toString());
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        debugger;
        doc.text(x, y, "SHG NAME");
        doc.text(x = x + x_counter + 20, y, "CODE");
        x = x + 3;
        doc.text(x = x + x_counter + 3, y, "SCHEME");
        doc.text(x = x + x_counter + 2, y, "TOTAL MEMBERS");
        doc.text(x = x + x_counter + 5, y, "CONTACT");
        doc.text(x = x + x_counter - 4, y, "DATE FORMATION");
        doc.setFontType("normal");
        doc.rect(0, 32, 210, 0, 's');
        y = y + 10;
        var newY = 0;
        var newPageCounter = 1;
        for (var item in data) {
            debugger;
            x = 3;
            newY = this.FixTextWidth(doc, x, 20, y, data[item].Name == null ? "" : data[item].Name);
            doc.text(x = x + x_counter + 13, y, data[item].Code.toString());
            x = x + 20;
            doc.text(x = x + x_counter - 6, y, data[item].SchemeName == null ? "" : data[item].SchemeName);
            doc.text(x = x + x_counter + 4, y, data[item].NumberOfMembers.toString() == null ? "" : data[item].NumberOfMembers.toString());
            doc.text(x = x + x_counter, y, data[item].ContactNumber == null ? "" : data[item].ContactNumber);
            doc.text(x = x + x_counter - 4, y, data[item].DateOfFormation == null ? "" : this.convertSystemDateToReportDate(data[item].DateOfFormation));
            y = newY;
            doc.rect(x_rect, newY - 4, x_len, 0);
            y_rect = y_rect + 15;
            y = y + y_counter - 20;
            //  newPageCounter += 1;
            // if (newPageCounter % y_counter == 0) {
            //     doc.addPage();
            //     y = 40;
            //     y_counter = 30;
            // }
            if (y >= 280) {
                doc.addPage();
                y = 20;
                newY = 10;
            }
        }
        doc.save("SHG_REPORT_" + this.getTodaysDate() + ".pdf");
    };
    //Change this accorsing to the task number.
    ExportToPDF.prototype.R4SHGInVillageExporttoPdf = function (data, code) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var fileName = "NO.OF SHG IN A VILLAGE REPORT.pdf";
        var x = 3;
        var y = 35;
        var x_counter = 40;
        var x_colon_counter = 30;
        var x_value_counter = 40;
        var y_counter = 10;
        var x_cordinate = 0;
        var y_cordinate = 30;
        var x_length = 210;
        var y_length = 0;
        doc.setFontSize(15);
        doc.setFont("arial", "bold");
        doc.rect(x_cordinate, y_cordinate - 5, x_length, y_length, 's');
        doc.text(65, 10, "NO.OF SHG IN A VILLAGE REPORT");
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        doc.setFontSize(9);
        doc.text(82, 15, "CMRC Name");
        doc.text(105, 15, ":");
        doc.text(110, 15, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(82, 20, "CODE");
        doc.text(105, 20, ":");
        doc.text(110, 20, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.setFontSize(10);
        doc.text(x, y, "SR. NO");
        doc.text(x = x + x_counter - 15, y, "NO.OF.SHG");
        doc.text(x = x + x_counter - 11, y, "VILLAGE NAME");
        doc.text(x = x + x_counter - 7, y, "VO NAME");
        doc.rect(x_cordinate, y_cordinate + 10, x_length, y_length, 's');
        doc.setFontType("normal");
        for (var item in data) {
            y = y + 15;
            x = 3;
            x_cordinate = 0;
            x_length = 210;
            y_length = 0;
            length = 200;
            doc.text(x, y, data[item].Id == null ? "" : data[item].Id.toString());
            doc.text(x = x + x_counter - 11, y, data[item].ShgCount == null ? "" : data[item].ShgCount.toString());
            doc.text(x = x + x_counter - 11, y, data[item].VillageName == null ? "" : data[item].VillageName.toString());
            doc.text(x = x + x_counter - 11, y, data[item].VOName == null ? "" : data[item].VOName.toString());
            doc.rect(x_cordinate, y_cordinate + 25, x_length, y_length, 's');
            if (y >= 280) {
                doc.addPage();
                y = 20;
                y_cordinate = 10;
            }
        }
        doc.save("NO.OF_SHG_IN_A_VILLAGE_REPORT" + "_" + this.getTodaysDate() + ".pdf");
    };
    ExportToPDF.prototype.R23CmrcSummeryExportToPDF = function (data, cmrcCounts, code) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var fileName = "CMRC PROFILE";
        var x = 25;
        var y = 35;
        var x_counter = 180;
        var x_colon_counter = 38;
        var x_value_counter = 45;
        var y_counter = 10;
        var x_cordinate = 2;
        var y_cordinate = 25;
        var x_length = 165;
        var y_length = 0;
        doc.setFont("arial", "bold");
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        doc.setFontSize(15);
        doc.rect(x_cordinate, y_cordinate, 220, y_length, 's');
        doc.text(85, 10, "CMRC PROFILE");
        doc.setFontSize(8);
        doc.text(85, 15, "CMRC CODE");
        doc.text(x_colon_counter + 67, 15, ":");
        doc.text(109, 15, code);
        doc.text(85, 20, "CMRC NAME");
        doc.text(x_colon_counter + 67, 20, ":");
        doc.text(109, 20, data.Name);
        doc.setFontSize(10);
        for (var item in cmrcCounts) {
            doc.text(x, y, cmrcCounts[item].Type == "Vo" ? "TOTAL VO - " + cmrcCounts[item].Count.toString() : cmrcCounts[item].Type == "Shg" ? "TOTAL SHG - " + cmrcCounts[item].Count.toString() : cmrcCounts[item].Type == "Member" ? "TOTAL MEMBER - " + cmrcCounts[item].Count.toString() : "");
            //doc.text(x, y + 5, cmrcCounts[item].Type == "Vo" ? cmrcCounts[item].Count.toString() : cmrcCounts[item].Type == "Shg" ? cmrcCounts[item].Count.toString() : cmrcCounts[item].Type == "Member" ? cmrcCounts[item].Count.toString() : "");
            x = x + x_value_counter;
        }
        x = 25;
        y = 35;
        x_cordinate = 25;
        doc.setFontSize(10);
        doc.setFontType("normal");
        y_cordinate = 55;
        y_counter = 10;
        doc.rect(x_cordinate, y_cordinate, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "CMRC NAME");
        doc.text(x + x_colon_counter, y, ":");
        // this.FixTextWidth(doc, x_value_counter + 18, 21, y_cordinate - 10, data.Name);
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Name == null ? "" : data.Name);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter + 5, "AREA");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Area == null ? "" : data.Area);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "VILLAGE NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Taluka == null ? "" : data.Taluka);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "ADDRESS");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        // this.FixTextWidth(doc, x_value_counter + 18, 21, y_cordinate - 15, data.Address == null ? "" : data.Address);
        doc.text(x + x_value_counter, y, data.Address == null ? "" : data.Address);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "TALUKA");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Taluka == null ? "" : data.Taluka);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "DISTRICT");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.District == null ? "" : data.District);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "PINCODE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.PinCode == null ? "" : data.PinCode.toString());
        // y = 35;
        // x = 10;
        // x_colon_counter = 40;
        // x_value_counter = 50;
        // x_counter = 100;
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "PAN CARD NUMBER");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.PanCardNumber == null ? "" : data.PanCardNumber.toString());
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "FORMATION DATE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.FormationDate.toString() == null ? "" : this.convertSystemDateToReportDate(data.FormationDate.toString()));
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK A/C NUMBER");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankAccountNumber == null ? "" : data.BankAccountNumber.toString());
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankName == null ? "" : data.BankName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BRANCH NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BranchName == null ? "" : data.BranchName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK ADDRESS");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankAddress == null ? "" : data.BankAddress);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "IFSC CODE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.IFSCCode == null ? "" : data.IFSCCode);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.save(fileName + "_" + this.getTodaysDate() + ".pdf");
    };
    //pdf for VO Dashboard puposewise Loan Distribution - shital
    ExportToPDF.prototype.R41PurposewiseLoanDistExportToPdf = function (data, totalData, NameForVo) {
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var fileName = "PURPOSE WISE LOAN DISTRIBUTION.pdf";
        var x = 25;
        var y = 30;
        var x_counter = 40;
        var y_counter = 10;
        var x_cordinate = 0;
        var y_cordinate = 34;
        var x_length = 210;
        var y_length = 0;
        doc.setFontSize(15);
        doc.setFont("arial", "bold");
        doc.text(67, 10, "PURPOSE WISE LOAN DISTRIBUTION");
        doc.setFontSize(8);
        doc.setFontType("bold");
        doc.text(175, 8, this.getTodaysDate());
        doc.setFontSize(9);
        x = 88;
        y = 15;
        x_counter = 30;
        doc.text(88, 15, "CMRC Name");
        doc.text(112, 15, ":");
        doc.text(116, 15, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(88, 20, "CMRC CODE");
        doc.text(112, 20, ":");
        doc.text(116, 20, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(88, 25, "VO Name");
        doc.text(112, 25, ":");
        doc.text(116, 25, NameForVo.Name == null ? "" : NameForVo.Name);
        doc.text(88, 30, "VO CODE");
        doc.text(112, 30, ":");
        doc.text(116, 30, NameForVo.Code == null ? "" : NameForVo.Code);
        doc.text(112, 30, ":");
        doc.text(116, 30, NameForVo.Code == null ? "" : NameForVo.Code);
        doc.rect(x_cordinate, y_cordinate, x_length, y_length, 's');
        doc.setFontSize(10);
        doc.text(5, 37, "TOTAL COUNT  :");
        doc.text(34, 37, data.length.toString() == null ? "" : data.length.toString());
        doc.setFontSize(10);
        x = 10;
        y = 45;
        x_counter = 40;
        doc.text(x, y, "TYPE");
        doc.text(x = x + x_counter, y, "TOTAL MEMBERS");
        doc.text(x = x + x_counter, y, "TOTAL MEMBERS(%)");
        doc.text(x = x + x_counter, y, "TOTAL AMOUNT");
        doc.text(x = x + x_counter, y, "TOTAL AMOUNT(%)");
        doc.setFontType("normal");
        for (var item in data) {
            x = 10;
            y = y + y_counter;
            x_cordinate = 5;
            x_length = 200;
            y_length = 0;
            doc.text(x, y, data[item].LoanType == null ? "" : data[item].LoanType.toString());
            doc.text(x = x + x_counter, y, data[item].TotalMember == null ? "" : data[item].TotalMember.toString());
            doc.text(x = x + x_counter, y, data[item].TotalMemberPer == null ? "" : data[item].TotalMemberPer.toString() + "%");
            doc.text(x = x + x_counter, y, data[item].TotalAmount == null ? "" : this.ConvertCurrency(data[item].TotalAmount.toString()));
            doc.text(x = x + x_counter, y, data[item].TotalAmountPer == null ? "" : data[item].TotalAmountPer.toString() + "%");
            doc.rect(0, y + 3, x_length + 10, y_length, 's');
        }
        x = 10;
        debugger;
        doc.rect(2, y + 3, x_length, y_length, 's');
        doc.text(x, y = y + y_counter + 2, "TOTAL");
        doc.setFontType("bold");
        doc.text(x = x + x_counter, y, totalData.TotalMember);
        doc.text(x = x + x_counter, y, totalData.TotalMemberPer + " %");
        doc.text(x = x + x_counter, y, this.ConvertCurrency(totalData.TotalAmount));
        doc.text(x = x + x_counter, y, totalData.TotalAmountPer + " %");
        doc.save("PURPOSE_WISE_LOAN_DISTRIBUTION" + "_" + this.getTodaysDate() + ".pdf");
    };
    //pdf for Scrutiny commity - Anjali.
    ExportToPDF.prototype.R38_voMemberSCExportTopdf = function (data) {
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 3;
        var dotLoc = 80;
        var x_counter = 30;
        var y = 44;
        var p = 275;
        var q = 285;
        var y_counter = 30;
        var x_rect = 2;
        var y_rect = 40;
        var x_len = 220;
        var y_len = 0;
        var x_colon_counter = 100;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(76, 10, "VO BODY REPORT ");
        doc.setFontSize(9);
        doc.text(88 + 19, 16, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(78, 16, "CMRC CODE");
        doc.text(x_colon_counter + 1, 16, ":");
        doc.text(87 + 21, 21, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(78, 21, "CMRC NAME");
        doc.text(x_colon_counter + 1, 21, ":");
        doc.text(82 + 26, 26, this.globalVariable.VOName == null ? "" : this.globalVariable.VOName);
        doc.text(78, 26, "VO NAME");
        doc.text(x_colon_counter + 1, 26, ":");
        doc.text(77 + 31, 31, this.globalVariable.voBaseCode == null ? "" : this.globalVariable.voBaseCode);
        doc.text(78, 31, "VO CODE");
        doc.text(x_colon_counter + 1, 31, ":");
        doc.setFontSize(10);
        doc.text(3, 39, "VO BODY COUNT :");
        doc.text(37, 39, data.length.toString() == null ? "" : data.length.toString());
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        doc.text(x, y, "VO CODE");
        doc.text(x = x + x_counter + 13, y, "VO Name");
        x = x + 3;
        doc.text(x = x + x_counter + 3, y, "MEMBER NAME");
        doc.text(x = x + x_counter + 22, y, "DESIGNATION");
        doc.text(x = x + x_counter + 16, y, "CMRC NAME");
        doc.setFontType("normal");
        doc.rect(0, 35, 210, 0, 's');
        y = y + 10;
        var newY = 0;
        for (var item in data) {
            x = 3;
            doc.text(x, y, data[item].VOCode == null ? "" : data[item].VOCode);
            newY = this.FixTextWidth(doc, x + 20, 22, y, data[item].VOName == null ? "" : data[item].VOName);
            // doc.text(x = x + x_counter + 13, y, data[item].VOName == null ? "" : data[item].VOName);
            newY = this.FixTextWidth(doc, x + 80, 24, y, data[item].MemberFullName == null ? "" : data[item].MemberFullName);
            // doc.text(x = x + x_counter + 7, y, data[item].MemberFullName == null ? "" : data[item].MemberFullName);
            doc.text(x = x + x_counter + 102, y, data[item].Designation == null ? "" : data[item].Designation);
            doc.text(x = x + x_counter + 15, y, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
            doc.rect(x_rect, y - 4, x_len, 0);
            y_rect = y_rect + 15;
            y = y + y_counter - 20;
            if (y >= 280) {
                doc.addPage();
                y = 20;
                newY = 10;
            }
        }
        doc.save("VO_BODY_REPORT_" + this.getTodaysDate() + ".pdf");
    };
    //GL TYPE - Anjali
    ExportToPDF.prototype.RExportBalancesheetToPdf = function (reportData, headerData, forVoName) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 0;
        var y = 0;
        var x_len = 0;
        var y_len = 0;
        var x_rect = 0;
        var y_rect = 0;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(x = x + 80, y = y + 10, "BALANCESHEET");
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        doc.text(x, y = y + 4, "(FROM - " + headerData.frDt + " TILL - " + headerData.toDt + ")");
        doc.setFontSize(10);
        doc.color_spaces = "red";
        doc.text(x, y = y + 5, "VO NAME");
        doc.text(x + 25, y, ":");
        doc.text(x + 30, y, forVoName.VOName == null ? "" : forVoName.VOName);
        doc.text(x, y = y + 5, "VO CODE");
        doc.text(x + 25, y, ":");
        doc.text(x + 30, y, forVoName.Code == null ? "" : forVoName.Code);
        doc.setFontType("normal");
        doc.rect(x_rect, y_rect = y_rect + 30, 220, 0);
        doc.rect(x_rect = x_rect + 2, y_rect = y_rect + 5, 102, 60);
        doc.rect(x_rect = x_rect + 104, y_rect, 102, 60);
        doc.rect(2, y_rect = y_rect + 62, 102, 60);
        //   doc.rect(x_rect = x_rect + 2, y_rect = y_rect + 235, 100, 60);
        x = 5;
        y = 40;
        debugger;
        var x_counter = 65;
        var y_counter = 15;
        doc.setFontType("bold");
        doc.text(x, y, "LIABILITIES");
        doc.rect(x - 3, y + 6, 102, 0);
        doc.setFontType("normal");
        doc.text(x, y = y + y_counter, "CURRENT LIABILITIES");
        doc.rect(x - 3, y + 6, 102, 0);
        doc.text(x, y = y + y_counter, "NET INCOME/LOSS");
        doc.rect(x - 3, y + 6, 102, 0);
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "TOTAL");
        y = 40;
        doc.text(x = x + x_counter, y, "AMOUNT");
        doc.setFontType("normal");
        doc.text(x, y = y + y_counter, this.ConvertCurrency(reportData.balancesheet.LiabilityAmount.toString()));
        doc.text(x, y = y + y_counter, this.ConvertCurrency(reportData.balancesheet.NetProfitOrLoss.toString()));
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, this.ConvertCurrency(reportData.balancesheet.TotalLiability.toString()));
        x = 109;
        y = 40;
        x_counter = 68;
        y_counter = 11;
        doc.text(x, y, "ASSET");
        doc.rect(x - 3, y + 5, 102, 0);
        doc.setFontType("normal");
        doc.text(x, y = y + y_counter, "CURRENT ASSET");
        doc.rect(x - 3, y + 5, 102, 0);
        doc.text(x, y = y + y_counter, "CASH IN HAND");
        doc.rect(x - 3, y + 5, 102, 0);
        doc.text(x, y = y + y_counter, "CASH IN BANK");
        doc.rect(x - 3, y + 5, 102, 0);
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter + 3, "TOTAL");
        y = 40;
        doc.setFontType("bold");
        doc.text(x = x + x_counter, y, "AMOUNT");
        doc.setFontType("normal");
        doc.text(x, y = y + y_counter, this.ConvertCurrency(reportData.balancesheet.AssetAmount.toString()));
        doc.text(x, y = y + y_counter, this.ConvertCurrency(reportData.balancesheet.CashInHandAmount.toString()));
        doc.text(x, y = y + y_counter, this.ConvertCurrency(reportData.balancesheet.cashAtBankAmount.toString()));
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter + 3, this.ConvertCurrency(reportData.balancesheet.TotalAsset.toString()));
        x = 5;
        y = 103;
        x_counter = 65;
        y_counter = 15;
        doc.text(x, y, "INCOME AND EXPENDITURE");
        doc.text(x = x + x_counter, y, "AMOUNT");
        x = 5;
        doc.rect(x - 3, y + 6, 102, 0);
        doc.setFontType("normal");
        doc.text(x, y = y + y_counter, "INCOME");
        doc.rect(x - 3, y + 6, 102, 0);
        doc.text(x, y = y + y_counter, "EXPENDITURE");
        doc.rect(x - 3, y + 6, 102, 0);
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "TOTAL");
        doc.setFontType("normal");
        y = 103;
        doc.text(x = x + x_counter, y = y + y_counter, this.ConvertCurrency(reportData.balancesheet.IncomeAmount.toString()));
        doc.text(x, y = y + y_counter, this.ConvertCurrency(reportData.balancesheet.ExpenseAmount.toString()));
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, this.ConvertCurrency((reportData.balancesheet.IncomeAmount - reportData.balancesheet.ExpenseAmount).toString()));
        doc.save("BALANCESHEET_FINANCE_" + this.getTodaysDate());
    };
    ExportToPDF.prototype.RExportGLTransactionDetailsToPdf = function (reportData, headerData) {
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 0;
        var y = 0;
        var x_len = 0;
        var y_len = 0;
        var x_rect = 0;
        var y_rect = 0;
        var x_counter = 25;
        var y_counter = 10;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(x = x + 80, y = y + 10, headerData.reportName + " REPORT");
        doc.setFontSize(7);
        doc.text(180, y, this.getTodaysDate());
        doc.text(x, y = y + 4, "(FROM - " + headerData.frDt + " TILL - " + headerData.toDt + ")");
        doc.setFontSize(10);
        doc.color_spaces = "red";
        doc.text(x, y = y + 5, "VO NAME");
        doc.text(x + 25, y, ":");
        doc.text(x + 30, y, headerData.VOName);
        doc.text(x, y = y + 5, "CODE");
        doc.text(x + 25, y, ":");
        doc.text(x + 30, y, headerData.Code);
        doc.rect(x_rect, y_rect = y_rect + 30, 220, 0);
        x = 2;
        y = 40;
        doc.setFontSize(8);
        doc.text(x, y, "SUB LEDGER NAME");
        doc.text(x = x + x_counter + 15, y, "FROM ACC");
        doc.text(x = x + x_counter + 12, y, "TO ACC");
        doc.text(x = x + x_counter + 12, y, "AMOUNT");
        doc.text(x = x + x_counter, y, "TRNS DATE");
        doc.text(x = x + x_counter, y, "REF ID");
        doc.text(x = x + x_counter - 5, y, "PAY MODE");
        debugger;
        var y_count = 50;
        doc.setFontSize(7);
        for (var item in reportData.TransactionDetails) {
            x = 2;
            y = y_count;
            var frName = "";
            var toName = "";
            switch (reportData.TransactionDetails[item].FromId) {
                case 1:
                    frName = "MAVIM";
                    break;
                case 2:
                    frName = reportData.TransactionDetails[item].CMRCName == null ? "" : reportData.TransactionDetails[item].CMRCName;
                    break;
                case 3:
                    frName = reportData.TransactionDetails[item].VOName == null ? "" : reportData.TransactionDetails[item].VOName;
                    break;
                case 4:
                    frName = reportData.TransactionDetails[item].SHGName == null ? "" : reportData.TransactionDetails[item].SHGName;
                    break;
                case 5:
                    frName = reportData.TransactionDetails[item].MemberName == null ? "" : reportData.TransactionDetails[item].MemberName;
                    break;
                case 6:
                    frName = "OTHER PERSON";
                    break;
                case 7:
                    frName = "BANK";
                    break;
                case 8:
                    frName = "CASH IN HAND";
                    break;
            }
            switch (reportData.TransactionDetails[item].ToId) {
                case 1:
                    toName = "MAVIM";
                    break;
                case 2:
                    toName = reportData.TransactionDetails[item].CMRCName == null ? "" : reportData.TransactionDetails[item].CMRCName;
                    break;
                case 3:
                    toName = reportData.TransactionDetails[item].VOName == null ? "" : reportData.TransactionDetails[item].VOName;
                    break;
                case 4:
                    toName = reportData.TransactionDetails[item].SHGName == null ? "" : reportData.TransactionDetails[item].SHGName;
                    break;
                case 5:
                    toName = reportData.TransactionDetails[item].MemberName == null ? "" : reportData.TransactionDetails[item].MemberName;
                    break;
                case 6:
                    toName = "OTHER PERSON";
                    break;
                case 7:
                    toName = "BANK";
                    break;
                case 8:
                    toName = "CASH IN HAND";
                    break;
            }
            var slYCount = this.FixTextWidth(doc, x, (x_counter - 1), y, reportData.TransactionDetails[item].SLTypeName);
            //doc.text(x, y, reportData.TransactionDetails[item].SLTypeName);            
            var frNameYCount = this.FixTextWidth(doc, x = x + x_counter + 15, 20, y, frName);
            if (slYCount > frNameYCount)
                y_count = slYCount;
            else
                y_count = frNameYCount;
            var toNameYCount = this.FixTextWidth(doc, x = x + x_counter + 12, 20, y, toName);
            if (y_count < toNameYCount)
                y_count = toNameYCount;
            doc.text(x = x + x_counter + 12, y, reportData.TransactionDetails[item].Amount == null ? "" : this.ConvertCurrency(reportData.TransactionDetails[item].Amount.toString()));
            doc.text(x = x + x_counter, y, reportData.TransactionDetails[item].TransactionDate == null ? "" : this.convertSystemDateToReportDate(reportData.TransactionDetails[item].TransactionDate.toString()));
            doc.text(x = x + x_counter, y, reportData.TransactionDetails[item].RefId == null ? "" : reportData.TransactionDetails[item].RefId.toString());
            doc.text(x = x + x_counter - 5, y, reportData.TransactionDetails[item].PaymentMode == 1 ? "CASH IN HAND" : "CASH- AT BANK");
            doc.rect(2, y_count - 3, 205, 0);
            if (y >= 280) {
                doc.addPage();
                y = 20;
                y_count = 10;
            }
        }
        x = 2;
        doc.setFontSize(8);
        doc.setFontType("bold");
        doc.text(x, y + 15, "TOTAL");
        doc.text(x + 100, y + 15, reportData.Total == null ? "" : this.ConvertCurrency(reportData.Total.toString()));
        doc.save("DETAILED_BALANCESHEET_" + this.getTodaysDate() + ".pdf");
    };
    ExportToPDF.prototype.LibilityAssetIncomeExporttoPdf = function (data, reportName, ForAmount) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 3;
        var dotLoc = 80;
        var x_counter = 30;
        var y = 40;
        var p = 275;
        var q = 285;
        var y_counter = 30;
        var x_rect = 2;
        var y_rect = 40;
        var x_len = 220;
        var y_len = 0;
        var x_colon_counter = 100;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(78, 10, reportName + " " + "REPORT ");
        doc.setFontSize(9);
        doc.text(88 + 19, 15, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(78, 15, "CMRC CODE");
        doc.text(x_colon_counter + 1, 15, ":");
        doc.text(87 + 20, 20, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(78, 20, "CMRC NAME");
        doc.text(x_colon_counter + 1, 20, ":");
        //  doc.text(82 + 25, 25, data[0].VOName);
        // doc.text(78, 25, "VO NAME");
        // doc.text(x_colon_counter + 1, 25, ":");
        //doc.text(77 + 30, 30, data[0].ParentCode);
        //  doc.text(78, 30, "VO CODE");
        //  doc.text(x_colon_counter + 1, 30, ":");
        doc.setFontSize(10);
        // doc.text(5, 36, "TOTAL COUNT :")
        //doc.text(35, 36, data.length.toString() == null ? "" : data.length.toString());
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        debugger;
        doc.text(x, y, "SUB LEDGER NAME");
        doc.text(x = x + x_counter + 30, y, "AMOUNT");
        x = x + 3;
        doc.text(x = x + x_counter + 7, y, "TRANSACTION DATE ");
        doc.text(x = x + x_counter + 18, y, "REF ID ");
        doc.text(x = x + x_counter, y, "PAYMENT MODE");
        doc.setFontType("normal");
        doc.rect(0, 28, 210, 0, 's');
        y = y + 10;
        var newY = 0;
        var newPageCounter = 1;
        for (var item in data) {
            debugger;
            x = 3;
            newY = this.FixTextWidth(doc, x, 29, y, data[item].SLTypeName == null ? "" : data[item].SLTypeName);
            doc.text(x = x + x_counter + 34, y, data[item].Amount.toString() == null ? "" : this.ConvertCurrency(data[item].Amount.toString()));
            doc.text(x = x + x_counter + 6, y, data[item].TransactionDate == null ? "" : data[item].TransactionDate);
            doc.text(x = x + x_counter + 18, y, data[item].RefId.toString() == null ? "" : data[item].RefId.toString());
            doc.text(x = x + x_counter, y, data[item].PaymentModeName == null ? "" : data[item].PaymentModeName);
            y = newY;
            doc.rect(x_rect, newY - 4, x_len, 0);
            y_rect = y_rect + 15;
            y = y + y_counter - 20;
            newPageCounter += 1;
            if (newPageCounter % y_counter == 0) {
                doc.addPage();
                y = 40;
                y_counter = 30;
            }
        }
        x = 0;
        doc.rect(x_rect - 2, y + 5, x_len, 0);
        doc.setFontType("bold");
        doc.text(x = x + x_counter - 22, y, "TOTAL");
        debugger;
        doc.text(x = x + x_counter + 30, y, this.ConvertCurrency(ForAmount == null ? "" : ForAmount.toString()));
        doc.save("DETAILED_BALANCESHEET_" + this.getTodaysDate() + ".pdf");
    };
    ExportToPDF.prototype.ExportDetailedbalancesheetToPDF = function (reportData, headerData) {
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 0;
        var y = 0;
        var x_len = 205;
        var y_len = 0;
        var x_rect = 0;
        var y_rect = 0;
        var x_counter = 10;
        var y_counter = 10;
        doc.setFillColor(221, 221, 221);
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(x = x + 60, y = y + 5, "DETAILED BALANCESHEET REPORT");
        doc.setFontSize(7);
        doc.text(180, y, this.getTodaysDate());
        doc.text(x = x + 22, y = y + 4, "(FROM - " + headerData.frDt + " TILL - " + headerData.toDt + ")");
        doc.setFontSize(8);
        doc.text(x, y = y + 5, "CMRC NAME");
        doc.text(x + 25, y, ":");
        doc.text(x + 30, y, this.globalVariable.CMRCName);
        doc.text(x, y = y + 5, "CODE");
        doc.text(x + 25, y, ":");
        doc.text(x + 30, y, this.globalVariable.cmrcBaseCode);
        doc.text(x, y = y + 5, "VO NAME");
        doc.text(x + 25, y, ":");
        doc.text(x + 30, y, headerData.VOName);
        doc.text(x, y = y + 5, "CODE");
        doc.text(x + 25, y, ":");
        doc.text(x + 30, y, headerData.Code);
        doc.rect(x_rect, y_rect = y_rect + 35, 220, 0);
        x = 2;
        doc.text(x, y = y + y_counter, "ACCOUNT TYPE");
        x = 40;
        x_counter = 12;
        doc.setFontSize(7);
        doc.text(x = x + x_counter, y, "JAN");
        doc.text(x = x + x_counter, y, "FEB");
        doc.text(x = x + x_counter, y, "MAR");
        doc.text(x = x + x_counter, y, "APR");
        doc.text(x = x + x_counter, y, "MAY");
        doc.text(x = x + x_counter, y, "JUN");
        doc.text(x = x + x_counter, y, "JUL");
        doc.text(x = x + x_counter, y, "AUG");
        doc.text(x = x + x_counter, y, "SEPT");
        doc.text(x = x + x_counter, y, "OCT");
        doc.text(x = x + x_counter, y, "NOV");
        doc.text(x = x + x_counter, y, "DEC");
        doc.text(x = x + x_counter, y, "TOTAL");
        doc.rect(2, y + 3, x_len, 0);
        x = 2;
        y = 40;
        debugger;
        var x_in = 62;
        var y_in = 0;
        for (var glAcct in reportData) {
            x = 2;
            doc.setFontSize(9);
            doc.setFontType("bold");
            doc.text(x, y = y + y_counter, reportData[glAcct].GLName);
            doc.rect(x, y + 3, x_len, 0);
            for (var sltypes in reportData[glAcct].SLTypes) {
                doc.setFontSize(7);
                doc.setFontType("normal");
                //doc.rect(x - 1, y + 3, x_len, 0);
                //doc.text(x, y = y + y_counter, reportData[glAcct].SLTypes[sltypes].SLName);
                var y_fr_rect = this.FixTextWidth(doc, x, y_counter + 15, y = y + y_counter, reportData[glAcct].SLTypes[sltypes].SLName);
                doc.rect(x, y_fr_rect - 4, x_len, 0);
                x_in = 52;
                doc.setFontSize(7);
                var sl_tot_amt = 0;
                for (var month in reportData[glAcct].SLTypes[sltypes].MonthAndAmount) {
                    for (var i = 0; i < 12; i++) {
                        if (reportData[glAcct].SLTypes[sltypes].MonthAndAmount[month].Month == this.getCurrentMonth(i)) {
                            sl_tot_amt = sl_tot_amt + reportData[glAcct].SLTypes[sltypes].MonthAndAmount[month].Amount;
                            doc.text(x_in, y, reportData[glAcct].SLTypes[sltypes].MonthAndAmount[month].Amount == null ? "" : this.ConvertCurrency(reportData[glAcct].SLTypes[sltypes].MonthAndAmount[month].Amount.toString()));
                            break;
                        }
                        else {
                            x_in = x_in + x_counter;
                        }
                    }
                }
                doc.setFontType("bold");
                doc.text(196, y, sl_tot_amt == 0 ? "0" : this.ConvertCurrency(sl_tot_amt.toString()));
                doc.setFontType("normal");
            }
            doc.setFontType("bold");
            //doc.rect(x, y + 6, x_len, 0);
            doc.text(x, y = y + y_counter, "TOTAL");
            x_in = 40;
            for (var totalAmountInMonth in reportData[glAcct].TotalMonthAndAmount) {
                doc.text(x_in = x_in + x_counter, y, reportData[glAcct].TotalMonthAndAmount[totalAmountInMonth].Value == null ? "" : this.ConvertCurrency(reportData[glAcct].TotalMonthAndAmount[totalAmountInMonth].Value.toString()));
            }
            doc.text(x_in = x_in + x_counter, y, reportData[glAcct].GLTotalAmount == null ? "" : this.ConvertCurrency(reportData[glAcct].GLTotalAmount.toString()));
            doc.setFontType("normal");
        }
        doc.save("ACCOUNT_TRANSACTIONS_REPORT_" + this.getTodaysDate() + ".pdf");
    };
    ExportToPDF.prototype.ExportDetailedCmrcBalancesheettoPdf = function (reportData, headerData) {
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 0;
        var y = 0;
        var x_len = 208;
        var y_len = 0;
        var x_rect = 0;
        var y_rect = 0;
        var x_counter = 10;
        var y_counter = 10;
        doc.setFillColor(221, 221, 221);
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(x = x + 60, y = y + 5, "DETAILED BALANCESHEET REPORT");
        doc.setFontSize(7);
        doc.text(180, y, this.getTodaysDate());
        // doc.text(x = x + 22, y = y + 4, "(FROM - " + headerData.frDt + " TILL - " + headerData.toDt + ")");
        doc.setFontSize(8);
        doc.text(x, y = y + 5, "CMRC NAME");
        doc.text(x + 25, y, ":");
        doc.text(x + 30, y, this.globalVariable.CMRCName);
        doc.text(x, y = y + 5, "CODE");
        doc.text(x + 25, y, ":");
        doc.text(x + 30, y, this.globalVariable.cmrcBaseCode);
        //doc.text(x, y = y + 5, "VO NAME");
        // doc.text(x + 25, y, ":");
        // doc.text(x + 30, y, headerData.VOName);
        // doc.text(x, y = y + 5, "CODE");
        // doc.text(x + 25, y, ":");
        //doc.text(x + 30, y, headerData.Code);
        doc.rect(x_rect, y_rect = y_rect + 30, 220, 0);
        x = 2;
        doc.text(x, y = y + y_counter, "ACCOUN TYPE");
        x = 65;
        x_counter = 10.5;
        doc.setFontSize(7);
        doc.text(x = x + x_counter, y, "JAN");
        doc.text(x = x + x_counter, y, "FEB");
        doc.text(x = x + x_counter, y, "MAR");
        doc.text(x = x + x_counter, y, "APR");
        doc.text(x = x + x_counter, y, "MAY");
        doc.text(x = x + x_counter, y, "JUN");
        doc.text(x = x + x_counter, y, "JUL");
        doc.text(x = x + x_counter, y, "AUG");
        doc.text(x = x + x_counter, y, "SEPT");
        doc.text(x = x + x_counter, y, "OCT");
        doc.text(x = x + x_counter, y, "NOV");
        doc.text(x = x + x_counter, y, "DEC");
        doc.text(x = x + x_counter, y, "TOTAL");
        doc.rect(2, y + 3, x_len, 0);
        x = 2;
        y = 40;
        debugger;
        var x_in = 62;
        var y_in = 0;
        for (var glAcct in reportData) {
            x = 2;
            doc.setFontSize(9);
            doc.setFontType("bold");
            doc.text(x, y = y + y_counter, reportData[glAcct].GLName);
            doc.rect(x, y + 3, x_len, 0);
            for (var sltypes in reportData[glAcct].SLTypes) {
                doc.setFontSize(7);
                doc.setFontType("normal");
                //doc.rect(x - 1, y + 3, x_len, 0);
                doc.text(x, y = y + y_counter, reportData[glAcct].SLTypes[sltypes].SLName);
                x_in = 75;
                doc.setFontSize(7);
                var sl_tot_amt = 0;
                for (var month in reportData[glAcct].SLTypes[sltypes].MonthAndAmount) {
                    for (var i = 0; i < 12; i++) {
                        if (reportData[glAcct].SLTypes[sltypes].MonthAndAmount[month].Month == this.getCurrentMonth(i)) {
                            sl_tot_amt = sl_tot_amt + reportData[glAcct].SLTypes[sltypes].MonthAndAmount[month].Amount;
                            doc.text(x_in, y, reportData[glAcct].SLTypes[sltypes].MonthAndAmount[month].Amount == null ? "" : this.ConvertCurrency(reportData[glAcct].SLTypes[sltypes].MonthAndAmount[month].Amount.toString()));
                            break;
                        }
                        else {
                            x_in = x_in + x_counter;
                        }
                    }
                }
                doc.setFontType("bold");
                doc.text(202, y, sl_tot_amt == 0 ? "0" : this.ConvertCurrency(sl_tot_amt.toString()));
                doc.setFontType("normal");
            }
            doc.setFontType("bold");
            doc.rect(x, y + 3, x_len, 0);
            doc.text(x, y = y + y_counter, "TOTAL");
            x_in = 65;
            for (var totalAmountInMonth in reportData[glAcct].TotalMonthAndAmount) {
                doc.text(x_in = x_in + x_counter, y, reportData[glAcct].TotalMonthAndAmount[totalAmountInMonth].Value == null ? "" : reportData[glAcct].TotalMonthAndAmount[totalAmountInMonth].Value.toString());
            }
            doc.text(x_in = x_in + x_counter, y, reportData[glAcct].GLTotalAmount == null ? "" : this.ConvertCurrency(reportData[glAcct].GLTotalAmount.toString()));
            doc.setFontType("normal");
        }
        doc.save("ACCOUNT_TRANSACTIONS_REPORT_" + this.getTodaysDate() + ".pdf");
    };
    //Vo Profile detail when created created  Anjali
    ExportToPDF.prototype.R36_VoViewExportTopdf = function (data) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 25;
        var y = 35;
        var x_counter = 180;
        var x_colon_counter = 40;
        var x_forTop = 101;
        var x_value_counter = 45;
        var y_counter = 10;
        var x_cordinate = 2;
        var y_cordinate = 25;
        var x_length = 165;
        var y_length = 0;
        doc.setFontSize(15);
        doc.setFontType("bold");
        doc.text(82, 10, "VO PROFILE");
        doc.setFontSize(9);
        doc.text(82, 15, " CMRC CODE");
        doc.text(x_forTop + 5, 15, ":");
        doc.text(109, 15, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(83, 20, "CMRC NAME");
        doc.text(x_forTop + 5, 20, ":");
        doc.text(109.20, 20, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.rect(0, y_cordinate, 220, y_length, 's');
        doc.text(175, 8, this.getTodaysDate());
        x = 25;
        y = 35;
        x_cordinate = 25;
        doc.setFontSize(10);
        doc.setFontType("normal");
        y_cordinate = 50;
        y_counter = 10;
        doc.rect(x_cordinate, y_cordinate, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "VO NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.VOName == null ? "" : data.VOName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "AREA");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Area == null ? "" : data.Area);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "VILLAGE NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Village == null ? "" : data.Village);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "ADDRESS");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.AddressLine1 == null ? "" : data.AddressLine1);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "TALUKA");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Taluka == null ? "" : data.Taluka);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "DISTRICT");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.District == null ? "" : data.District);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "PINCODE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.PinCode == null ? "" : data.PinCode.toString());
        // y = 35;
        // x = 10;
        // x_colon_counter = 40;
        // x_value_counter = 50;
        // x_counter = 100;
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "PAN CARD NUMBER");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.PanCardNumber == null ? "" : data.PanCardNumber.toString());
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "VO FORMATION DATE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.FormationDate == null ? "" : data.FormationDate.toString());
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK A/C NUMBER");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankAccountNumber == null ? "" : data.BankAccountNumber.toString());
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankName == null ? "" : data.BankName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BRANCH NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BranchName == null ? "" : data.BranchName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK ADDRESS");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankAddress == null ? "" : data.BankAddress);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "IFSC CODE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.IFSCCode == null ? "" : data.IFSCCode);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.save("VO_PROFILE_" + " " + this.getTodaysDate() + ".pdf");
    };
    //Shg profile - Anjali
    ExportToPDF.prototype.R34_ShgViewExportTopdf = function (data) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 25;
        var y = 35;
        var x_counter = 180;
        var x_colon_counter = 40;
        var x_value_counter = 47;
        var y_counter = 10;
        var x_cordinate = 2;
        var y_cordinate = 25;
        var x_length = 165;
        var y_length = 0;
        doc.setFontSize(15);
        doc.setFontType("bold");
        doc.text(82, 10, "SHG PROFILE");
        doc.setFontSize(9);
        doc.text(82, 15, " CMRC CODE");
        doc.text(x_colon_counter - 9 + 75, 15, ":");
        doc.text(109, 15, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(83, 20, "CMRC NAME");
        doc.text(x_colon_counter - 9 + 75, 20, ":");
        doc.text(109.20, 20, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(82, 25, " VO NAME");
        doc.text(x_colon_counter - 9 + 75, 25, ":");
        doc.text(109.25, 25, data.VOName == null ? "" : data.VOName);
        doc.text(83, 30, "VO CODE");
        doc.text(x_colon_counter - 9 + 75, 30, ":");
        doc.text(109, 30, data.ParentCode == null ? "" : data.ParentCode);
        doc.text(83, 35, "SHG SCHEME");
        doc.text(x_colon_counter - 9 + 75, 35, ":");
        doc.text(109, 35, data.SchemeName == null ? "" : data.SchemeName);
        doc.rect(0, y_cordinate + 12, 220, y_length, 's');
        doc.text(175, 8, this.getTodaysDate());
        x = 25;
        y = 35;
        x_cordinate = 25;
        doc.setFontSize(10);
        doc.setFontType("normal");
        y_cordinate = 50;
        y_counter = 10;
        doc.rect(x_cordinate, y_cordinate, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "VO NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.VOName == null ? "" : data.VOName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "AREA");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Area == null ? "" : data.Area);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "VILLAGE NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.VillageName == null ? "" : data.VillageName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "ADDRESS");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Address == null ? "" : data.Address);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "TALUKA");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Taluka == null ? "" : data.Taluka);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "DISTRICT");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.District == null ? "" : data.District);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "PINCODE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.PINCode == null ? "" : data.PINCode.toString());
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "CMRC NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName.toString());
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "CMRC CODE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.ParentCode == null ? "" : data.ParentCode.toString());
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK A/C NUMBER");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankAccountNumber == null ? "" : data.BankAccountNumber.toString());
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankName == null ? "" : data.BankName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BRANCH NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BranchName == null ? "" : data.BranchName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK ADDRESS");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankAddress == null ? "" : data.BankAddress);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "IFSC CODE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.IFSCCode == null ? "" : data.IFSCCode);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.save("SHG_PROFILE_" + this.getTodaysDate() + ".pdf");
    };
    //SHG BY SHG PROFILE - ANjali .. 
    ExportToPDF.prototype.R34_ShgByVoViewExportTopdf = function (data) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 25;
        var y = 35;
        var x_counter = 180;
        var x_colon_counter = 40;
        var x_value_counter = 47;
        var y_counter = 10;
        var x_cordinate = 2;
        var y_cordinate = 25;
        var x_length = 165;
        var y_length = 0;
        doc.setFontSize(15);
        doc.setFontType("bold");
        doc.text(82, 10, "SHG PROFILE");
        doc.setFontSize(9);
        doc.text(82, 15, " CMRC CODE");
        doc.text(x_colon_counter + 65, 15, ":");
        doc.text(109, 15, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(83, 20, "CMRC NAME");
        doc.text(x_colon_counter + 65, 20, ":");
        doc.text(109.20, 20, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(82, 25, " VO NAME");
        doc.text(x_colon_counter + 65, 25, ":");
        doc.text(109.25, 25, data.VOName == null ? "" : data.VOName);
        doc.text(83, 30, "VO CODE");
        doc.text(x_colon_counter + 65, 30, ":");
        doc.text(109, 30, data.ParentCode == null ? "" : data.ParentCode);
        doc.text(83, 35, "SHG SCHEME");
        doc.text(x_colon_counter + 65, 35, ":");
        doc.text(109, 35, data.SchemeName == null ? "" : data.SchemeName);
        doc.rect(0, y_cordinate + 12, 220, y_length, 's');
        doc.text(175, 8, this.getTodaysDate());
        x = 25;
        y = 35;
        x_cordinate = 25;
        doc.setFontSize(10);
        doc.setFontType("normal");
        y_cordinate = 50;
        y_counter = 10;
        doc.rect(x_cordinate, y_cordinate, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "VO NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.VOName == null ? "" : data.VOName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "AREA");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Area == null ? "" : data.Area);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "VILLAGE NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.VillageName == null ? "" : data.VillageName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "ADDRESS");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Address == null ? "" : data.Address);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "TALUKA");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Taluka == null ? "" : data.Taluka);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "DISTRICT");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.District == null ? "" : data.District);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "PINCODE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.PINCode == null ? "" : data.PINCode.toString());
        // y = 35;
        // x = 25;
        // x_colon_counter = 40;
        // x_value_counter = 50;
        // x_counter = 100;
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "CMRC NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName.toString());
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "CMRC CODE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.ParentCode == null ? "" : data.ParentCode.toString());
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK A/C NUMBER");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankAccountNumber == null ? "" : data.BankAccountNumber.toString());
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankName == null ? "" : data.BankName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BRANCH NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BranchName == null ? "" : data.BranchName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK ADDRESS");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankAddress == null ? "" : data.BankAddress);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "IFSC CODE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.IFSCCode == null ? "" : data.IFSCCode);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.save("SHG_PROFILE_" + this.getTodaysDate() + ".pdf");
    };
    //Vo Profile details For vo Dashboard.. Anjali
    ExportToPDF.prototype.voProfileDetails = function (data, forVoName) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        //   let cmrcName = "PRAGATI LOKASANCHALIT, SADHAN KENDRA,  jdhfgjh    jhdj    jh  ghgh    jg KARJAT, DS. RAIGADH.";
        //   this.FixTextWidth(doc,1,2,3,2, "cmrcName");
        // doc.setFontSize(8);
        // doc.text("Hi, I should be fit in the givn coordinate...", 2, 50);
        var fileName = "VO PROFILE.pdf";
        var x = 25;
        var y = 35;
        var x_counter = 180;
        var x_colon_counter = 40;
        // let x_colonForTop = 30;
        var x_value_counter = 45;
        var x_nameLength = 85;
        var y_counter = 10;
        var x_colon = 105;
        var x_cordinate = 2;
        var y_cordinate = 32;
        var x_length = 165;
        var y_length = 0;
        doc.setFont("arial", "bold");
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        doc.setFontSize(15);
        doc.rect(x_cordinate - 2, y_cordinate + 2, 210, y_length, 's');
        doc.text(87, 10, "VO PROFILE");
        doc.setFontSize(9);
        doc.text(95 + 15, 15, data.CMRCName == null ? "" : data.CMRCName);
        doc.text(80, 15, "CMRC NAME");
        doc.text(x_colon, 15, ":");
        doc.text(90 + 20, 20, data.Code == null ? "" : data.Code);
        doc.text(80, 20, "CMRC CODE");
        doc.text(x_colon, 20, ":");
        doc.text(95 + 15, 25, forVoName.Name == null ? "" : forVoName.Name);
        doc.text(80, 25, "VO NAME");
        doc.text(x_colon, 25, ":");
        doc.text(80 + 30, 30, data.Code == null ? "" : data.Code);
        doc.text(80, 30, "VO CODE");
        doc.text(x_colon, 30, ":");
        doc.setFontSize(10);
        x = 25;
        y = 35;
        x_cordinate = 25;
        doc.setFontSize(10);
        doc.setFontType("normal");
        y_cordinate = 50;
        y_counter = 10;
        doc.rect(x_cordinate, y_cordinate, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "CMRC NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.CMRCName == null ? "" : data.CMRCName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "AREA");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Area == null ? "" : data.Area);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "VILLAGE NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Village == null ? "" : data.Village);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "ADDRESS");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Address == null ? "" : data.Address);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "TALUKA");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.Taluka == null ? "" : data.Taluka);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "DISTRICT");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.District == null ? "" : data.District);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "PINCODE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.PinCode == null ? "" : data.PinCode.toString());
        // y = 35;
        // x = 10;
        // x_colon_counter = 40;
        // x_value_counter = 50;
        // x_counter = 100;
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "PAN CARD NUMBER");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.PanCardNumber == null ? "" : data.PanCardNumber.toString());
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "VO FORMATION DATE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.FormationDate == null ? "" : this.convertSystemDateToReportDate(data.FormationDate.toString()));
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK A/C NUMBER");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankAccountNumber == null ? "" : data.BankAccountNumber.toString());
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankName == null ? "" : data.BankName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BRANCH NAME");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BranchName == null ? "" : data.BranchName);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "BANK ADDRESS");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.BankAddress == null ? "" : data.BankAddress);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.setFontType("bold");
        doc.text(x, y = y + y_counter, "IFSC CODE");
        doc.text(x + x_colon_counter, y, ":");
        doc.setFontType("normal");
        doc.text(x + x_value_counter, y, data.IFSCCode == null ? "" : data.IFSCCode);
        doc.rect(x_cordinate, y_cordinate = y_cordinate + y_counter, x_length, y_length, 's');
        doc.save("VO_PROFILE" + "_" + this.getTodaysDate() + ".pdf");
    };
    //pdf For download Vo's login. Anjali 
    ExportToPDF.prototype.maritalStatusWiseDataForVo = function (data, NameForVo, VoName) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 35;
        var dotLoc = 80;
        var x_counter = 40;
        var y = 44;
        var p = 275;
        var q = 285;
        var y_counter = 30;
        var x_rect = 40;
        var y_rect = 40;
        var x_len = 135;
        var y_len = 0;
        var x_colon_counter = 100;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(61, 10, "MARITAL STATUS WISE REPORT");
        doc.setFontSize(9);
        doc.text(88 + 19, 16, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(78, 16, "CMRC CODE");
        doc.text(x_colon_counter + 1, 16, ":");
        doc.text(87 + 21, 21, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(78, 21, "CMRC NAME");
        doc.text(x_colon_counter + 1, 21, ":");
        doc.text(82 + 26, 26, VoName.Name == null ? "" : VoName.Name);
        doc.text(78, 26, "VO NAME");
        doc.text(x_colon_counter + 1, 26, ":");
        doc.text(77 + 31, 31, NameForVo.Code == null ? "" : NameForVo.Code);
        doc.text(78, 31, "VO CODE");
        doc.text(x_colon_counter + 1, 31, ":");
        doc.setFontSize(10);
        doc.text(5, 40, "TOTAL COUNT :");
        doc.text(33, 40, data.length.toString() == null ? "" : data.length.toString());
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        doc.text(x + 15, y, "STATUS");
        doc.text(x = x + x_counter + 13, y, "TOTAL MEMBERS");
        x = x + 3;
        doc.text(x = x + x_counter + 3, y, "TOTAL MEMBERS (%)");
        doc.setFontType("normal");
        doc.rect(0, 36, 210, 0, 's');
        y = y + 10;
        for (var item in data) {
            x = 45;
            doc.text(x + 5, y, data[item].Status == null ? "" : data[item].Status);
            doc.text(x = x + x_counter + 13, y, data[item].TotalMembers.toString() == null ? "" : data[item].TotalMembers.toString());
            doc.text(x = x + x_counter + 7, y, data[item].TotalMemberPer.toString() == null ? "" : data[item].TotalMemberPer.toString() + " " + "%");
            doc.rect(x_rect, y + 5, x_len, 0);
            y_rect = y_rect + 15;
            y = y + y_counter - 20;
        }
        doc.save("MARITAL_STATUS_WISE_REPORT_" + this.getTodaysDate() + ".pdf");
    };
    //Age wise data.. -Anjali
    ExportToPDF.prototype.ageWiseDataForVo = function (data, NameForVo) {
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 35;
        var dotLoc = 80;
        var x_counter = 40;
        var y = 44;
        var p = 275;
        var q = 285;
        var y_counter = 30;
        var x_rect = 40;
        var y_rect = 40;
        var x_len = 135;
        var y_len = 0;
        var x_colon_counter = 100;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(74, 10, "AGE WISE REPORT");
        doc.setFontSize(9);
        doc.text(88 + 19, 16, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(78, 16, "CMRC CODE");
        doc.text(x_colon_counter + 1, 16, ":");
        doc.text(87 + 21, 21, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(78, 21, "CMRC NAME");
        doc.text(x_colon_counter + 1, 21, ":");
        doc.text(82 + 26, 26, NameForVo.Name == null ? "" : NameForVo.Name);
        doc.text(78, 26, "VO NAME");
        doc.text(x_colon_counter + 1, 26, ":");
        doc.text(77 + 31, 31, NameForVo.Code == null ? "" : NameForVo.Code);
        doc.text(78, 31, "VO CODE");
        doc.text(x_colon_counter + 1, 31, ":");
        doc.setFontSize(10);
        doc.text(5, 40, " TOTAL COUNT :");
        doc.text(36, 40, data.length.toString() == null ? "" : data.length.toString());
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        doc.text(x + 15, y, "AGE GROUP");
        doc.text(x = x + x_counter + 13, y, "TOTAL MEMBERS");
        x = x + 3;
        doc.text(x = x + x_counter + 3, y, "TOTAL MEMBERS (%)");
        doc.setFontType("normal");
        doc.rect(0, 36, 210, 0, 's');
        y = y + 10;
        for (var item in data) {
            x = 45;
            doc.text(x + 5, y, data[item].AgeGroup == null ? "" : data[item].AgeGroup);
            doc.text(x = x + x_counter + 13, y, data[item].TotalMember.toString() == null ? "" : data[item].TotalMember.toString());
            doc.text(x = x + x_counter + 7, y, data[item].TotalMemberPer.toString() == null ? "" : data[item].TotalMemberPer.toString() + " " + "%");
            doc.rect(x_rect, y + 5, x_len, 0);
            y_rect = y_rect + 15;
            y = y + y_counter - 20;
        }
        doc.save("AGE_WISE_REPORT_" + this.getTodaysDate() + ".pdf");
    };
    //Cast wise loan distribution data - Anjali
    ExportToPDF.prototype.castWiseLoanDistributionDataForVo = function (data, total, NameForVo) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 3;
        var dotLoc = 80;
        var x_counter = 25;
        var y = 52;
        var y_top = 40;
        var p = 275;
        var q = 285;
        var y_counter = 30;
        var x_rect = 2;
        var y_rect = 40;
        var x_len = 220;
        var y_len = 0;
        var x_colon_counter = 100;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(53, 10, "CASTE WISE LOAN DISTRIBUTION REPORT");
        doc.setFontSize(9);
        doc.text(88 + 19, 16, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(78, 16, "CMRC CODE");
        doc.text(x_colon_counter + 1, 15, ":");
        doc.text(87 + 21, 21, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(78, 21, "CMRC NAME");
        doc.text(x_colon_counter + 1, 20, ":");
        doc.text(82 + 26, 26, NameForVo.Name == null ? "" : NameForVo.Name);
        doc.text(78, 26, "VO NAME");
        doc.text(x_colon_counter + 1, 26, ":");
        doc.text(77 + 31, 31, NameForVo.Code == null ? "" : NameForVo.Code);
        doc.text(78, 31, "VO CODE");
        doc.text(x_colon_counter + 1, 31, ":");
        doc.setFontSize(10);
        doc.text(5, 40, "TOTAL COUNT :");
        doc.text(33, 40, data.length.toString() == null ? "" : data.length.toString());
        doc.setFontSize(8);
        doc.text(175, 8, this.getTodaysDate());
        doc.text(x, y, "CASTE");
        doc.text(x = x + x_counter - 12, y, "TOTAL MEMBERS");
        doc.text(x = x + x_counter + 1, y, "TOTAL MEMBERS (%)");
        doc.text(x = x + x_counter + 6, y, "MEMBERS");
        doc.text(x = x + x_counter + 2, y, "MEMBERS (%)");
        doc.text(x = x + x_counter + 3, y, "TOTAL MEMBERS");
        doc.text(x = x + x_counter + 4, y, "TOTAL MEMBERS (%)");
        doc.text(x = x + x_counter + 9, y, "LOAN");
        var x_next = 3;
        var y_next = 44;
        var x_counternext = 25;
        doc.text(x_next = x_next + x_counternext + 41, y_next, "LOAN CONSUMED");
        doc.text(x_next = x_next + x_counternext + 3, y_next, "LOAN CONSUMED");
        doc.text(x_next = x_next + x_counternext + 7, y_next, "LOAN NOT");
        doc.text(x_next = x_next + x_counternext + 6, y_next, "LOAN NOT");
        doc.text(x_next = x_next + x_counternext + 9, y_next, "TOTAL");
        var x_middale = 3;
        var y_middle = 48;
        var x_countermiddle = 25;
        doc.text(x_middale = x_middale + x_countermiddle + 46, y_middle, "BY TOTAL");
        doc.text(x_middale = x_middale + x_countermiddle + 2, y_middle, "BY TOTAL");
        doc.text(x_middale = x_middale + x_countermiddle + 2, y_middle, "CONSUMED BY");
        doc.text(x_middale = x_middale + x_countermiddle + 4, y_middle, "CONSUMED BY");
        doc.text(x_middale = x_middale + x_countermiddle + 8, y_middle, "CONSUMED");
        doc.setFontType("normal");
        doc.rect(0, 36, 210, 0, 's');
        y = y + 10;
        for (var item in data) {
            x = 3;
            doc.text(x, y, data[item].CasteName.toString() == null ? "" : data[item].CasteName.toString());
            doc.text(x = x + x_counter, y, data[item].TotalMember.toString() == null ? "" : data[item].TotalMember.toString());
            doc.text(x = x + x_counter, y, data[item].TotalMemberPer.toString() == null ? "" : data[item].TotalMemberPer.toString() + " " + "%");
            doc.text(x = x + x_counter, y, data[item].TotalLoanConsumedMembers.toString() == null ? "" : data[item].TotalLoanConsumedMembers.toString());
            doc.text(x = x + x_counter, y, data[item].TotalLoanConsumedMembersPer.toString() == null ? "" : data[item].TotalLoanConsumedMembersPer.toString() + " " + "%");
            doc.text(x = x + x_counter + 4, y, data[item].TotalLoanNotConsumedMembers.toString() == null ? "" : data[item].TotalLoanNotConsumedMembers.toString());
            doc.text(x = x + x_counter + 5, y, data[item].TotalLoanNotConsumedMembersPer.toString() == null ? "" : data[item].TotalLoanNotConsumedMembersPer.toString() + " " + "%");
            doc.text(x = x + x_counter + 5, y, data[item].TotalLoanConsumedLoanAmount.toString() == null ? "" : this.ConvertCurrency(data[item].TotalLoanConsumedLoanAmount.toString()));
            doc.rect(x_rect - 2, y + 5, x_len, 0);
            y_rect = y_rect + 15;
            y = y + y_counter - 20;
        }
        x = 0;
        doc.rect(x_rect - 2, y + 5, x_len, 0);
        doc.setFontType("bold");
        doc.text(x = x + x_counter - 22, y, "TOTAL");
        doc.text(x = x + x_counter, y, total.CastTotalMembers);
        doc.text(x = x + x_counter, y, total.CastTotalMemberPer + " " + "%");
        doc.text(x = x + x_counter, y, total.CastTotalLoanConsumedMem);
        doc.text(x = x + x_counter, y, total.CastTotalLoanConsumedMemberPer + " " + "%");
        doc.text(x = x + x_counter + 3, y, total.CastTotalLoanNotConsumedMem);
        doc.text(x = x + x_counter + 6, y, total.CastTotalLoanNotConsumedMemPer + " " + "%");
        doc.text(x = x + x_counter + 4, y, this.ConvertCurrency(total.CasteTotalLoanAmt));
        doc.save("CASTE_WISE_LOAN_DISTRIBUTION_REPORT_" + this.getTodaysDate() + ".pdf");
    };
    ExportToPDF.prototype.ExportProfitAndLossToPDF = function (reportData, headerData, r_type) {
        debugger;
        var reportName = r_type == 1 ? "PROFIT AND LOSS REPORT" : r_type == 2 ? "PROFIT DETAILED TRANSACTION REPORT" : "LOSS DETAILED TRANSACTION REPORT";
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 0;
        var y = 0;
        var x_len = 208;
        var y_len = 0;
        var x_rect = 0;
        var y_rect = 0;
        var x_counter = 20;
        var x_colon = 20;
        var x_extend = 30;
        var y_counter = 10;
        doc.setFillColor(221, 221, 221);
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(x = x + 60, y = y + 5, reportName);
        doc.setFontSize(7);
        x = 75;
        doc.text(180, y, this.getTodaysDate());
        doc.text(x + x_counter - 20, y = y + 4, "(FROM - " + headerData.frDt + " TILL - " + headerData.toDt + ")");
        doc.setFontSize(8);
        doc.text(x, y = y + 5, "CMRC NAME");
        doc.text(x + x_colon, y, ":");
        doc.text(x + x_extend, y, this.globalVariable.CMRCName);
        doc.text(x, y = y + 5, "CODE");
        doc.text(x + x_colon, y, ":");
        doc.text(x + x_extend, y, this.globalVariable.cmrcBaseCode);
        doc.text(x, y = y + 5, "VO NAME");
        doc.text(x + x_colon, y, ":");
        doc.text(x + x_extend, y, headerData.VOName);
        doc.text(x, y = y + 5, "CODE");
        doc.text(x + x_colon, y, ":");
        doc.text(x + x_extend, y, headerData.Code);
        x = 10;
        doc.rect(x - 9, y = y + 5, 220, 0);
        doc.rect(x - 5, y + 2, 200, 8);
        x_counter = x_counter + 10;
        doc.setFontSize(10);
        doc.text(x, y = y + y_counter - 4, "CLOSING BALANCE - ");
        doc.text(x = x + x_counter + 10, y, reportData[0].TotalClosingBalance == 0 ? "0" : this.ConvertCurrency(reportData[0].TotalClosingBalance.toString()));
        doc.text(x = x + x_counter, y, "PROFIT - ");
        doc.text(x = x + x_counter - 10, y, reportData[0].TotalProfit == 0 ? "0" : this.ConvertCurrency(reportData[0].TotalProfit.toString()));
        doc.text(x = x + x_counter, y, "LOSS - ");
        doc.text(x = x + x_counter - 15, y, reportData[0].TotalLoss == 0 ? "0" : this.ConvertCurrency(reportData[0].TotalLoss.toString()));
        x = 40;
        y_counter = 10;
        doc.setFontSize(8);
        doc.setFontType("bold");
        x_counter = 35;
        if (r_type == 1) {
            doc.text(x, y = y + y_counter, "CLOSING BALANCE");
            doc.text(x = x + x_counter, y, "MONTH");
            doc.text(x = x + x_counter, y, "INCOME");
            doc.text(x = x + x_counter, y, "EXPENSE");
            doc.text(x = x + x_counter, y, "PROFIT/ LOSS");
            doc.setFontType("normal");
            doc.setFontSize(8);
            debugger;
            doc.rect(5, y - 4, 200, 135);
            x = 40;
            y = y - 4;
            doc.rect(x = x + x_counter - 5, y, 0, 135);
            doc.rect(x = x + x_counter, y, 0, 135);
            doc.rect(x = x + x_counter - 10, y, 0, 135);
            doc.rect(x = x + x_counter, y, 0, 135);
            doc.rect(5, y + 6, 200, 0);
            for (var i = 0; i <= 11; i++) {
                y = y + y_counter;
                x = 75;
                if (reportData[0].MonthsAndAmountForProfit[i].Month == this.getCurrentMonth(i)) {
                    doc.text(x, y, this.getCurrentMonth(i));
                    doc.text(x = x + x_counter, y, reportData[0].MonthsAndAmountForProfit[i].Amount == 0 ? "0" : this.ConvertCurrency(reportData[0].MonthsAndAmountForProfit[i].Amount.toString()));
                    doc.text(x = x + x_counter, y, reportData[0].MonthsAndAmountForLoss[i].Amount == 0 ? "0" : this.ConvertCurrency(reportData[0].MonthsAndAmountForLoss[i].Amount.toString()));
                    doc.text(x = x + x_counter, y, reportData[0].MonthsAndAmountForLoss[i].Amount == 0 ? "0" : this.ConvertCurrency((reportData[0].MonthsAndAmountForProfit[i].Amount + reportData[0].MonthsAndAmountForLoss[i].Amount).toString()));
                }
            }
            doc.setFontType("bold");
            doc.rect(5, y + 5, 200, 0);
            x = 40;
            doc.text(x = x + x_counter, y = y + y_counter, "TOTAL");
            doc.text(x = x + x_counter, y, reportData[0].TotalProfit == 0 ? "0" : this.ConvertCurrency(reportData[0].TotalProfit.toString()));
            doc.text(x = x + x_counter, y, reportData[0].TotalLoss == 0 ? "0" : this.ConvertCurrency(reportData[0].TotalLoss.toString()));
            doc.text(x = x + x_counter, y, reportData[0].TotalLoss == 0 ? "0" : this.ConvertCurrency((reportData[0].TotalProfit + reportData[0].TotalLoss).toString()));
        }
        if (r_type == 2) {
            x = 10;
            doc.text(x, y = y + y_counter, "SL NAME");
            doc.text(x = x + x_counter + 25, y, "FROM ACC");
            doc.text(x = x + x_counter, y, "TO ACC");
            doc.text(x = x + x_counter, y, "AMOUNT");
            doc.text(x = x + x_counter, y, "TRANSACTION DATE");
            doc.setFontType("normal");
            doc.setFontSize(8);
            doc.rect(5, y + 2, 200, 0);
            y_counter = 8;
            y = y + y_counter;
            for (var item in reportData[0].ProfitList) {
                x = 10;
                var y_next_cor = this.FixTextWidth(doc, x, 20, y, this.ConvertCurrency(reportData[0].ProfitList[item].SLName));
                this.FixTextWidth(doc, x = x + x_counter + 25, 20, y, reportData[0].ProfitList[item].FromAccount);
                this.FixTextWidth(doc, x = x + x_counter, 20, y, reportData[0].ProfitList[item].ToAccount);
                // doc.text(x = x + x_counter + 25, y, reportData[0].ProfitList[item].FromAccount);
                // doc.text(x = x + x_counter, y, reportData[0].ProfitList[item].ToAccount);
                doc.text(x = x + x_counter, y, reportData[0].ProfitList[item].Profit == 0 ? "0" : this.ConvertCurrency(reportData[0].ProfitList[item].Profit.toString()));
                doc.text(x = x + x_counter, y, reportData[0].ProfitList[item].TranactionDate == null ? "NO DATE" : this.convertSystemDateToReportDate(reportData[0].ProfitList[item].TranactionDate));
                doc.rect(5, y_next_cor - 3, 200, 0);
                y = y_next_cor + 2;
                if (y >= 280) {
                    doc.addPage();
                    y = 10;
                }
            }
            doc.setFontType("bold");
            doc.text(x - 60, y = y + y_counter, "TOTAL");
            doc.text(x - 35, y, reportData[0].TotalProfit == 0 ? "0" : this.ConvertCurrency(reportData[0].TotalProfit.toString()));
        }
        if (r_type == 3) {
            x = 10;
            doc.text(x, y = y + y_counter, "SL NAME");
            doc.text(x = x + x_counter + 25, y, "FROM ACC");
            doc.text(x = x + x_counter, y, "TO ACC");
            doc.text(x = x + x_counter, y, "AMOUNT");
            doc.text(x = x + x_counter, y, "TRANSACTION DATE");
            doc.setFontType("normal");
            doc.setFontSize(8);
            doc.rect(5, y + 2, 200, 0);
            y_counter = 8;
            y = y + y_counter;
            for (var item in reportData[0].LossList) {
                x = 10;
                var y_next_cor = this.FixTextWidth(doc, x, 20, y, reportData[0].LossList[item].SLName);
                doc.text(x = x + x_counter + 25, y, reportData[0].LossList[item].FromAccount);
                doc.text(x = x + x_counter, y, reportData[0].LossList[item].ToAccount);
                doc.text(x = x + x_counter, y, reportData[0].LossList[item].Loss == 0 ? "0" : this.ConvertCurrency(reportData[0].LossList[item].Loss.toString()));
                doc.text(x = x + x_counter, y, reportData[0].LossList[item].TranactionDate == null ? "NO DATE" : this.convertSystemDateToReportDate(reportData[0].LossList[item].TranactionDate));
                doc.rect(5, y_next_cor - 3, 200, 0);
                y = y_next_cor + 2;
                if (y >= 280) {
                    doc.addPage();
                    y = 10;
                }
            }
            doc.setFontType("bold");
            doc.text(x - 60, y = y + y_counter, "TOTAL");
            doc.text(x - 35, y, reportData[0].TotalLoss == 0 ? "0" : this.ConvertCurrency(reportData[0].TotalLoss.toString()));
        }
        x = 75;
        doc.save(reportName + "_" + this.getTodaysDate() + ".pdf");
    };
    ExportToPDF.prototype.SHGLoanBifurcationExportToPdf = function (data) {
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 2;
        var dotLoc = 80;
        var x_counter = 20;
        var y = 40;
        var x_colon_counter = 100;
        var y_counter = 30;
        var x_rect = 2;
        var y_rect = 40;
        var x_len = 220;
        var y_len = 0;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(73, 10, "SHG LOAN DETAILS");
        doc.setFontSize(9);
        doc.text(88 + 19, 15, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(78, 15, "CMRC CODE");
        doc.text(x_colon_counter + 1, 15, ":");
        doc.text(87 + 20, 20, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(78, 20, "CMRC NAME");
        doc.text(x_colon_counter + 1, 20, ":");
        doc.text(88 + 19, 25, this.globalVariable.voBaseCode == null ? "" : this.globalVariable.voBaseCode);
        doc.text(78, 25, "VO CODE");
        doc.text(x_colon_counter + 1, 25, ":");
        doc.text(77 + 30, 30, this.globalVariable.VOName == null ? "" : this.globalVariable.VOName);
        doc.text(78, 30, "VO NAME");
        doc.text(x_colon_counter + 1, 30, ":");
        doc.setFontSize(10);
        doc.text(5, 35, "SHG COUNT :");
        doc.text(30, 35, data.length == null ? "" : data.length.toString());
        doc.setFontSize(7);
        doc.text(175, 8, this.getTodaysDate());
        doc.text(x, y, "SHG NAME");
        doc.text(x = x + x_counter + 15, y, "SHG CODE");
        doc.text(x = x + x_counter, y, "LOAN");
        doc.text(x, y + 5, "AMOUNT");
        doc.text(x = x + x_counter, y, "LOAN");
        doc.text(x, y + 5, "REPAID");
        doc.text(x, y + 10, "AMOUNT");
        doc.text(x = x + x_counter, y, "OUTSTNG");
        doc.text(x, y + 5, "TOTAL");
        doc.text(x, y + 10, "AMOUNT");
        doc.text(x = x + x_counter, y, "OUTSTNG");
        doc.text(x, y + 5, "PRINL");
        doc.text(x, y + 10, "AMOUNT");
        doc.text(x = x + x_counter, y, "OUTSTNG");
        doc.text(x, y + 5, "INTEREST");
        doc.text(x, y + 10, "AMOUNT");
        doc.text(x = x + x_counter, y, "TOTAL");
        doc.text(x, y + 5, "PAID %");
        doc.text(x = x + x_counter, y, "FINE PAID");
        doc.text(x, y + 5, "AMOUNT");
        doc.text(x = x + x_counter - 5, y, "SHG LOAN");
        doc.text(x, y + 5, "TAKEN TIMES");
        doc.setFontType("normal");
        doc.rect(0, 54, 210, 0, 's');
        doc.rect(0, 31, 210, 0, 's');
        y = y + 20;
        var newY = 0;
        var newPageCounter = 1;
        for (var item in data) {
            x = 3;
            newY = this.FixTextWidth(doc, x, 20, y, data[item].SHGName == null ? "" : data[item].SHGName.toString());
            //  doc.text(x, y, data[item].SHGName == null ? "" : data[item].SHGName.toString())
            doc.text(x = x + x_counter + 15, y, data[item].SHGCode.toString());
            doc.text(x = x + x_counter, y, data[item].LoanAmount == 0 ? "0.00" : this.ConvertCurrency(data[item].LoanAmount.toString()));
            doc.text(x = x + x_counter, y, data[item].SHGPaidAmount == 0 ? "0.00" : this.ConvertCurrency(data[item].SHGPaidAmount.toString()));
            doc.text(x = x + x_counter, y, data[item].SHGOutstandingAmount == 0 ? "0.00" : this.ConvertCurrency(data[item].SHGOutstandingAmount.toString()));
            doc.text(x = x + x_counter, y, data[item].SHGOutstandingPrincipalAmount == 0 ? "0.00" : this.ConvertCurrency(data[item].SHGOutstandingPrincipalAmount.toString()));
            doc.text(x = x + x_counter, y, data[item].SHGOutstandingInterest == 0 ? "0.00" : this.ConvertCurrency(data[item].SHGOutstandingInterest.toString()));
            doc.text(x = x + x_counter, y, data[item].SHGPerPaidAmount == 0 ? "0" : data[item].SHGPerPaidAmount.toString());
            doc.text(x = x + x_counter, y, data[item].SHGFineAmt == 0 ? "0.00" : this.ConvertCurrency(data[item].SHGFineAmt.toString()));
            doc.text(x = x + x_counter - 5, y, data[item].NoOfMembers == 0 ? "0" : data[item].NoOfMembers.toString());
            y = newY;
            doc.rect(x_rect, newY - 3, x_len, 0);
            newPageCounter += 1;
            if (newY > 280) {
                doc.addPage();
                y = 20;
                newY = 10;
            }
        }
        doc.save("SHG_LOAN_DETAILS" + "_" + this.getTodaysDate());
    };
    ExportToPDF.prototype.SHGLoanRepaymentExportToPdf = function (data, totalamountData, memberLoanDetails) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 2;
        var dotLoc = 80;
        var x_counter = 20;
        var y = 49;
        var x_colon_counter = 100;
        var y_counter = 30;
        var x_rect = 2;
        var y_rect = 40;
        var x_len = 220;
        var y_len = 0;
        doc.setFont("arial", "bold");
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(59, 10, "MEMBER REPAYMENT PERFORMANCE");
        doc.setFontSize(9);
        doc.text(90 + 19, 15, this.globalVariable.cmrcBaseCode == null ? "" : this.globalVariable.cmrcBaseCode);
        doc.text(80, 15, "CMRC CODE");
        doc.text(x_colon_counter + 4, 15, ":");
        doc.text(89 + 20, 20, this.globalVariable.CMRCName == null ? "" : this.globalVariable.CMRCName);
        doc.text(78, 20, "CMRC NAME");
        doc.text(x_colon_counter + 4, 20, ":");
        doc.text(83 + 25, 25, this.globalVariable.VOName == null ? "" : this.globalVariable.VOName);
        doc.text(78, 25, "VO NAME");
        doc.text(x_colon_counter + 4, 25, ":");
        doc.text(79 + 30, 30, memberLoanDetails.SHGName == null ? "" : memberLoanDetails.SHGName);
        doc.text(78, 30, "SHG NAME");
        doc.text(x_colon_counter + 4, 30, ":");
        doc.text(74 + 35, 35, memberLoanDetails.MemberFirstName + " " + memberLoanDetails.MemberLastName == null ? "" : memberLoanDetails.MemberFirstName + " " + memberLoanDetails.MemberLastName);
        doc.text(78, 35, "MEMBER NAME");
        doc.text(x_colon_counter + 4, 35, ":");
        doc.setFontSize(10);
        doc.text(57 + 42, 42, memberLoanDetails.LoanApprovedAmount == null ? "" : memberLoanDetails.LoanApprovedAmount.toString());
        doc.setFontSize(9);
        doc.text(52, 42, "OUTSTANDING AMOUNT");
        doc.text(92, 42, ":");
        doc.setFontSize(9);
        doc.text(3, 42, "INSTALLMENT  COUNT :");
        doc.setFontSize(10);
        doc.text(42, 42, data.length.toString() == null ? "" : data.length.toString());
        doc.setFontSize(7);
        doc.text(175, 8, this.getTodaysDate());
        doc.text(x, y, "MONTH");
        doc.text(x = x + x_counter - 4, y, "PRINCIPAL");
        doc.text(x, y + 5, "AMOUNT");
        doc.text(x = x + x_counter, y, "INTEREST ");
        doc.text(x, y + 5, "AMOUNT");
        doc.text(x = x + x_counter, y, "TOTAL ");
        doc.text(x, y + 5, "PAYABLE ");
        doc.text(x, y + 10, "AMOUNT");
        doc.text(x = x + x_counter, y, "PRINCIPAL ");
        doc.text(x, y + 5, "AMOUNT");
        doc.text(x, y + 10, "PAID");
        doc.text(x = x + x_counter, y, "INTEREST ");
        doc.text(x, y + 5, "AMOUNT");
        doc.text(x, y + 10, "PAID");
        doc.text(x = x + x_counter, y, "TOTAL");
        doc.text(x, y + 5, "AMOUNT");
        doc.text(x, y + 10, "PAID");
        doc.text(x = x + x_counter - 4, y, " % AMOUNT");
        doc.text(x, y + 5, "PAID");
        doc.text(x = x + x_counter - 2, y, "PAID DATE");
        doc.text(x = x + x_counter - 3, y, "OUTSTANDING");
        doc.text(x, y + 5, "AMOUNT");
        doc.text(x = x + x_counter, y, "DUE/");
        doc.text(x, y + 5, "PENAULTY");
        doc.text(x, y + 10, "AMOUNT");
        doc.rect(0 - 2, 62, 210, 0);
        doc.setFontType("normal");
        doc.rect(0 - 2, 37, 210, 0, 's');
        y = y + 20;
        var newY = 0;
        var newPageCounter = 1;
        for (var item in data) {
            x = 3;
            newY = this.FixTextWidth(doc, x, 11, y, this.convertSystemDateToReportDate(data[item].Date));
            doc.text(x = x + x_counter, y, this.ConvertCurrency(data[item].FixedPayableAmt.toString()));
            doc.text(x = x + x_counter - 4, y, data[item].InterestAmt == 0 ? "" : this.ConvertCurrency(data[item].InterestAmt.toString()));
            doc.text(x = x + x_counter, y, data[item].TotalPayableAmt == 0 ? "" : this.ConvertCurrency(data[item].TotalPayableAmt.toString()));
            doc.text(x = x + x_counter, y, data[item].PaidTotalAmt == null ? "" : this.ConvertCurrency(data[item].PaidTotalAmt.toString()));
            doc.text(x = x + x_counter, y, data[item].PaidIntrestAmount == null ? "" : this.ConvertCurrency(data[item].PaidIntrestAmount.toString()));
            doc.text(x = x + x_counter - 2, y, this.ConvertCurrency((data[item].PaidTotalAmt + data[item].PaidIntrestAmount).toString()));
            doc.text(x = x + x_counter, y, data[item].PerTotalAmountPaid == null ? "" : data[item].PerTotalAmountPaid.toString());
            doc.text(x = x + x_counter - 5, y, data[item].PaidDate == null ? "" : this.convertSystemDateToReportDate(data[item].PaidDate));
            doc.text(x = x + x_counter, y, data[item].OutstandingAmt == 0 ? "" : this.ConvertCurrency(data[item].OutstandingAmt.toString()));
            doc.text(x = x + x_counter - 2, y, data[item].FineAmount == null ? "" : this.ConvertCurrency(data[item].FineAmount.toString()));
            y = newY;
            doc.rect(x_rect, newY - 3, x_len, 0);
            newPageCounter += 1;
            if (newY > 280) {
                doc.addPage();
                y = 10;
            }
        }
        x = 8;
        doc.rect(0, y + 6, 210, 0, 's');
        doc.setFontType("bold");
        doc.text(x - 2, y = y + y_counter - 27, "TOTAL SUM");
        doc.text(x = x + x_counter, y, this.ConvertCurrency(totalamountData.totalLoanAmount));
        doc.text(x = x + x_counter - 5, y, this.ConvertCurrency(totalamountData.totalPaybleAmount));
        doc.text(x = x + x_counter - 5, y, this.ConvertCurrency(totalamountData.totalPrincipleAmount));
        doc.text(x = x + x_counter + 40, y, this.ConvertCurrency(totalamountData.totalFineAmount));
        doc.text(x = x + x_counter + 33, y, this.ConvertCurrency(totalamountData.totalPaidAmount));
        doc.save("MEMBER_REPAYMENT_PERFORMANCE" + "_" + this.getTodaysDate());
    };
    ExportToPDF.prototype.ExportMemberPerformance = function (data, headerData) {
        debugger;
        var doc = new __WEBPACK_IMPORTED_MODULE_1_jspdf__();
        var x = 0;
        var y = 0;
        var x_len = 208;
        var y_len = 0;
        var x_rect = 0;
        var y_rect = 0;
        var x_counter = 30;
        var x_colon = 20;
        var x_extend = 30;
        var y_counter = 10;
        doc.setFillColor(221, 221, 221);
        doc.setFontSize(16);
        doc.setFontType("bold");
        doc.text(x = x + 60, y = y + 5, "MEMBER PERFORMANCE REPORT");
        doc.setFontSize(7);
        x = 75;
        doc.text(180, y, this.getTodaysDate());
        doc.setFontSize(8);
        doc.text(x, y = y + 5, "CMRC NAME");
        doc.text(x + x_colon, y, ":");
        doc.text(x + x_extend, y, this.globalVariable.CMRCName);
        doc.text(x, y = y + 5, "CODE");
        doc.text(x + x_colon, y, ":");
        doc.text(x + x_extend, y, this.globalVariable.cmrcBaseCode);
        doc.text(x, y = y + 5, "VO NAME");
        doc.text(x + x_colon, y, ":");
        doc.text(x + x_extend, y, data.VOName);
        doc.text(x, y = y + 5, "CODE");
        doc.text(x + x_colon, y, ":");
        doc.text(x + x_extend, y, data.VOCode);
        doc.rect(2, y + 5, 220, 0);
        x = 7;
        y = 35;
        x_counter = x_counter + 10;
        doc.setFontSize(8);
        doc.text(x, y, "TOTAL MEMBERS LOAN CONSUMED - ");
        doc.text(x = x_counter + 20, y, data.TotalMemberLoanConsumed == 0 ? "0" : data.TotalMemberLoanConsumed.toString());
        var x_temp = x;
        doc.text(x_temp = x_temp + 10, y, "TOTAL MEMBERS IN GRADE A -");
        doc.text(x_temp = x_temp + 45, y, data.TotalMembersInGradeA == 0 ? "0" : data.TotalMembersInGradeA.toString());
        doc.text(x_temp = x_temp + 10, y, "TOTAL MEMBERS IN GRADE B  -");
        doc.text(x_temp = x_temp + 46, y, data.TotalMembersInGradeB == 0 ? "0" : data.TotalMembersInGradeB.toString());
        x_temp = 70;
        doc.text(x_temp, y = y + y_counter, "TOTAL MEMBERS IN GRADE A % -");
        doc.text(x_temp = x_temp + 47, y, data.TotalMembersInGradeAPer == 0 ? "0" : data.TotalMembersInGradeAPer.toString());
        doc.text(x_temp = x_temp + 10, y, "TOTAL MEMBERS IN GRADE B % -");
        doc.text(x_temp = x_temp + 47, y, data.TotalMembersInGradeBPer == 0 ? "0" : data.TotalMembersInGradeBPer.toString());
        doc.rect(2, y = y + 5, 220, 0);
        x = 2;
        y = 55;
        x_counter = 30;
        doc.text(x, y, "SHG NAME");
        doc.text(x = x + x_counter, y, "MEMBER NAME");
        x_counter = 25;
        doc.text(x = x + x_counter + 4, y, "GRADE");
        var temp_y = y;
        doc.text(x = x + x_counter - 10, temp_y, "EXPECTED");
        doc.text(x, temp_y = temp_y + y_counter - 5, "TOTAL");
        doc.text(x, temp_y = temp_y + y_counter - 5, "AMOUNT");
        temp_y = y;
        doc.text(x = x + x_counter, temp_y, "ACTUAL");
        doc.text(x, temp_y = temp_y + y_counter - 5, "TOTAL");
        doc.text(x, temp_y = temp_y + y_counter - 5, "AMOUNT");
        temp_y = y;
        doc.text(x = x + x_counter, temp_y, "EXPECTED");
        doc.text(x, temp_y = temp_y + y_counter - 5, "PRINCIPAL");
        doc.text(x, temp_y = temp_y + y_counter - 5, "AMOUNT");
        temp_y = y;
        doc.text(x = x + x_counter, temp_y, "ACTUAL");
        doc.text(x, temp_y = temp_y + y_counter - 5, "PRINCIPAL");
        doc.text(x, temp_y = temp_y + y_counter - 5, "AMOUNT");
        temp_y = y;
        doc.text(x = x + x_counter, temp_y, "EXPECTED");
        doc.text(x, temp_y = temp_y + y_counter - 5, "INTEREST");
        doc.text(x, temp_y = temp_y + y_counter - 5, "AMOUNT");
        temp_y = y;
        doc.text(x = x + x_counter - 6, temp_y, "ACTUAL");
        doc.text(x, temp_y = temp_y + y_counter - 5, "INTEREST");
        doc.text(x, temp_y = temp_y + y_counter - 5, "AMOUNT");
        doc.rect(2, temp_y + 5, 220, 0);
        y = y + 20;
        for (var item in data.LoanMemberData) {
            x = 2;
            x_counter = 30;
            y_counter = this.FixTextWidth(doc, x, 15, y, data.LoanMemberData[item].SHGName == null ? "" : data.LoanMemberData[item].SHGName);
            var y_new2 = this.FixTextWidth(doc, x = x + x_counter, 15, y, data.LoanMemberData[item].MemberName == null ? "" : data.LoanMemberData[item].MemberName);
            if (y_counter < y_new2)
                y_counter = y_new2;
            x_counter = 25;
            doc.text(x = x + x_counter + 4, y, data.LoanMemberData[item].Grade == null ? "" : data.LoanMemberData[item].Grade);
            doc.text(x = x + x_counter - 10, y, data.LoanMemberData[item].ExpectedTotalAmount == 0 ? "0" : data.LoanMemberData[item].ExpectedTotalAmount.toString());
            doc.text(x = x + x_counter, y, data.LoanMemberData[item].ActualTotalAmount == 0 ? "0" : data.LoanMemberData[item].ActualTotalAmount.toString());
            doc.text(x = x + x_counter, y, data.LoanMemberData[item].ExpectedPrincipalAmount == 0 ? "0" : data.LoanMemberData[item].ExpectedPrincipalAmount.toString());
            doc.text(x = x + x_counter, y, data.LoanMemberData[item].ActualPrincipalAmount == 0 ? "0" : data.LoanMemberData[item].ActualPrincipalAmount.toString());
            doc.text(x = x + x_counter, y, data.LoanMemberData[item].ExpectedInterestAmount == 0 ? "0" : data.LoanMemberData[item].ExpectedInterestAmount.toString());
            doc.text(x = x + x_counter - 6, y, data.LoanMemberData[item].ActualInterestAmount == 0 ? "0" : data.LoanMemberData[item].ActualInterestAmount.toString());
            y = y_counter;
            if (y >= 280) {
                doc.addPage();
                y = 20;
            }
            doc.rect(2, y - 3, 220, 0);
        }
        doc.save("MEMBER PEFORMANCE REPORT" + this.getTodaysDate() + ".pdf");
    };
    ExportToPDF = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__environments_GlobalVeriables__["a" /* GlobalVariable */]])
    ], ExportToPDF);
    return ExportToPDF;
}());



/***/ }),

/***/ "../../../../../src/app/services/vo.services.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VOService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/map.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_catch__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/catch.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/toPromise.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_toPromise__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





//import 'rxjs/add/Observable/throw';

var VOService = (function () {
    function VOService(_http) {
        this._http = _http;
        this.finalURL = null;
    }
    //Get request with no parameter
    VOService.prototype.get = function (url, token) {
        //if (this.checkParam(param1)) {
        //    this.paramFlag1 = true;
        //    this.finalURL = url + param1;
        //}
        //if (this.paramFlag1)
        //    if (this.checkParam(param2)) {
        //        this.paramFlag2 = true;
        //        this.finalURL = url + param2;
        //    }
        //if (this.paramFlag1 && this.paramFlag2) {
        //    if (this.checkParam(param3)) {
        //        this.paramFlag3 = true;
        //        this.finalURL = url + param3;
        //    }
        //}
        //debugger;
        return this._http.get(url, this.getPutHeaders(token))
            .map(function (response) { return response.json(); })
            .toPromise()
            .catch();
    };
    VOService.prototype.checkParam = function (para) {
        if (para.toString() == "" || para.toString() == undefined || para == undefined)
            return false;
        else
            return true;
    };
    VOService.prototype.post = function (url, modeldata, token) {
        debugger;
        return this._http
            .post(url, modeldata, this.getPutHeaders(token))
            .toPromise()
            .catch();
    };
    //To Define the Header information
    VOService.prototype.getPutHeaders = function (_token) {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        var __token = 'Bearer ' + _token.replace(/['"]+/g, '');
        headers.append('Content-Type', 'application/json');
        headers.append('Authorization', __token);
        return new __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* RequestOptions */]({
            headers: headers
        });
    };
    VOService.prototype.extractData = function (res) {
        var body = res.json();
        return body || {};
    };
    VOService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */]])
    ], VOService);
    return VOService;
}());



/***/ }),

/***/ "../../../../../src/config.js":
/***/ (function(module, exports) {

// alert("Here");


/*! AdminLTE app.js
* ================
* Main JS application file for AdminLTE v2. This file
* should be included in all pages. It controls some layout
* options and implements exclusive AdminLTE plugins.
*
* @Author  Almsaeed Studio
* @Support <https://www.almsaeedstudio.com>
* @Email   <abdullah@almsaeedstudio.com>
* @version 2.4.0
* @repository git://github.com/almasaeed2010/AdminLTE.git
* @license MIT <http://opensource.org/licenses/MIT>
*/

// Make sure jQuery has been loaded
if (typeof jQuery === 'undefined') {
throw new Error('AdminLTE requires jQuery')
}

/* BoxRefresh()
 * =========
 * Adds AJAX content control to a box.
 *
 * @Usage: $('#my-box').boxRefresh(options)
 *         or add [data-widget="box-refresh"] to the box element
 *         Pass any option as data-option="value"
 */
+function ($) {
  'use strict'

  var DataKey = 'lte.boxrefresh'

  var Default = {
    source         : '',
    params         : {},
    trigger        : '.refresh-btn',
    content        : '.box-body',
    loadInContent  : true,
    responseType   : '',
    overlayTemplate: '<div class="overlay"><div class="fa fa-refresh fa-spin"></div></div>',
    onLoadStart    : function () {
    },
    onLoadDone     : function (response) {
      return response
    }
  }

  var Selector = {
    data: '[data-widget="box-refresh"]'
  }

  // BoxRefresh Class Definition
  // =========================
  var BoxRefresh = function (element, options) {
    this.element  = element
    this.options  = options
    this.$overlay = $(options.overlay)

    if (options.source === '') {
      throw new Error('Source url was not defined. Please specify a url in your BoxRefresh source option.')
    }

    this._setUpListeners()
    this.load()
  }

  BoxRefresh.prototype.load = function () {
    this._addOverlay()
    this.options.onLoadStart.call($(this))

    $.get(this.options.source, this.options.params, function (response) {
      if (this.options.loadInContent) {
        $(this.options.content).html(response)
      }
      this.options.onLoadDone.call($(this), response)
      this._removeOverlay()
    }.bind(this), this.options.responseType !== '' && this.options.responseType)
  }

  // Private

  BoxRefresh.prototype._setUpListeners = function () {
    $(this.element).on('click', Selector.trigger, function (event) {
      if (event) event.preventDefault()
      this.load()
    }.bind(this))
  }

  BoxRefresh.prototype._addOverlay = function () {
    $(this.element).append(this.$overlay)
  }

  BoxRefresh.prototype._removeOverlay = function () {
    $(this.element).remove(this.$overlay)
  }

  // Plugin Definition
  // =================
  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data(DataKey)

      if (!data) {
        var options = $.extend({}, Default, $this.data(), typeof option == 'object' && option)
        $this.data(DataKey, (data = new BoxRefresh($this, options)))
      }

      if (typeof data == 'string') {
        if (typeof data[option] == 'undefined') {
          throw new Error('No method named ' + option)
        }
        data[option]()
      }
    })
  }

  var old = $.fn.boxRefresh

  $.fn.boxRefresh             = Plugin
  $.fn.boxRefresh.Constructor = BoxRefresh

  // No Conflict Mode
  // ================
  $.fn.boxRefresh.noConflict = function () {
    $.fn.boxRefresh = old
    return this
  }

  // BoxRefresh Data API
  // =================
  $(window).on('load', function () {
    $(Selector.data).each(function () {
      Plugin.call($(this))
    })
  })

}(jQuery)


/* BoxWidget()
 * ======
 * Adds box widget functions to boxes.
 *
 * @Usage: $('.my-box').boxWidget(options)
 *         This plugin auto activates on any element using the `.box` class
 *         Pass any option as data-option="value"
 */
+function ($) {
  'use strict'

  var DataKey = 'lte.boxwidget'

  var Default = {
    animationSpeed : 500,
    collapseTrigger: '[data-widget="collapse"]',
    removeTrigger  : '[data-widget="remove"]',
    collapseIcon   : 'fa-minus',
    expandIcon     : 'fa-plus',
    removeIcon     : 'fa-times'
  }

  var Selector = {
    data     : '.box',
    collapsed: '.collapsed-box',
    body     : '.box-body',
    footer   : '.box-footer',
    tools    : '.box-tools'
  }

  var ClassName = {
    collapsed: 'collapsed-box'
  }

  var Event = {
    collapsed: 'collapsed.boxwidget',
    expanded : 'expanded.boxwidget',
    removed  : 'removed.boxwidget'
  }

  // BoxWidget Class Definition
  // =====================
  var BoxWidget = function (element, options) {
    this.element = element
    this.options = options

    this._setUpListeners()
  }

  BoxWidget.prototype.toggle = function () {
    var isOpen = !$(this.element).is(Selector.collapsed)

    if (isOpen) {
      this.collapse()
    } else {
      this.expand()
    }
  }

  BoxWidget.prototype.expand = function () {
    var expandedEvent = $.Event(Event.expanded)
    var collapseIcon  = this.options.collapseIcon
    var expandIcon    = this.options.expandIcon

    $(this.element).removeClass(ClassName.collapsed)

    $(this.element)
      .find(Selector.tools)
      .find('.' + expandIcon)
      .removeClass(expandIcon)
      .addClass(collapseIcon)

    $(this.element).find(Selector.body + ', ' + Selector.footer)
      .slideDown(this.options.animationSpeed, function () {
        $(this.element).trigger(expandedEvent)
      }.bind(this))
  }

  BoxWidget.prototype.collapse = function () {
    var collapsedEvent = $.Event(Event.collapsed)
    var collapseIcon   = this.options.collapseIcon
    var expandIcon     = this.options.expandIcon

    $(this.element)
      .find(Selector.tools)
      .find('.' + collapseIcon)
      .removeClass(collapseIcon)
      .addClass(expandIcon)

    $(this.element).find(Selector.body + ', ' + Selector.footer)
      .slideUp(this.options.animationSpeed, function () {
        $(this.element).addClass(ClassName.collapsed)
        $(this.element).trigger(collapsedEvent)
      }.bind(this))
  }

  BoxWidget.prototype.remove = function () {
    var removedEvent = $.Event(Event.removed)

    $(this.element).slideUp(this.options.animationSpeed, function () {
      $(this.element).trigger(removedEvent)
      $(this.element).remove()
    }.bind(this))
  }

  // Private

  BoxWidget.prototype._setUpListeners = function () {
    var that = this

    $(this.element).on('click', this.options.collapseTrigger, function (event) {
      if (event) event.preventDefault()
      that.toggle()
    })

    $(this.element).on('click', this.options.removeTrigger, function (event) {
      if (event) event.preventDefault()
      that.remove()
    })
  }

  // Plugin Definition
  // =================
  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data(DataKey)

      if (!data) {
        var options = $.extend({}, Default, $this.data(), typeof option == 'object' && option)
        $this.data(DataKey, (data = new BoxWidget($this, options)))
      }

      if (typeof option == 'string') {
        if (typeof data[option] == 'undefined') {
          throw new Error('No method named ' + option)
        }
        data[option]()
      }
    })
  }

  var old = $.fn.boxWidget

  $.fn.boxWidget             = Plugin
  $.fn.boxWidget.Constructor = BoxWidget

  // No Conflict Mode
  // ================
  $.fn.boxWidget.noConflict = function () {
    $.fn.boxWidget = old
    return this
  }

  // BoxWidget Data API
  // ==================
  $(window).on('load', function () {
    $(Selector.data).each(function () {
      Plugin.call($(this))
    })
  })

}(jQuery)


/* ControlSidebar()
 * ===============
 * Toggles the state of the control sidebar
 *
 * @Usage: $('#control-sidebar-trigger').controlSidebar(options)
 *         or add [data-toggle="control-sidebar"] to the trigger
 *         Pass any option as data-option="value"
 */
+function ($) {
  'use strict'

  var DataKey = 'lte.controlsidebar'

  var Default = {
    slide: true
  }

  var Selector = {
    sidebar: '.control-sidebar',
    data   : '[data-toggle="control-sidebar"]',
    open   : '.control-sidebar-open',
    bg     : '.control-sidebar-bg',
    wrapper: '.wrapper',
    content: '.content-wrapper',
    boxed  : '.layout-boxed'
  }

  var ClassName = {
    open : 'control-sidebar-open',
    fixed: 'fixed'
  }

  var Event = {
    collapsed: 'collapsed.controlsidebar',
    expanded : 'expanded.controlsidebar'
  }

  // ControlSidebar Class Definition
  // ===============================
  var ControlSidebar = function (element, options) {
    this.element         = element
    this.options         = options
    this.hasBindedResize = false

    this.init()
  }

  ControlSidebar.prototype.init = function () {
    // Add click listener if the element hasn't been
    // initialized using the data API
    if (!$(this.element).is(Selector.data)) {
      $(this).on('click', this.toggle)
    }

    this.fix()
    $(window).resize(function () {
      this.fix()
    }.bind(this))
  }

  ControlSidebar.prototype.toggle = function (event) {
    if (event) event.preventDefault()

    this.fix()

    if (!$(Selector.sidebar).is(Selector.open) && !$('body').is(Selector.open)) {
      this.expand()
    } else {
      this.collapse()
    }
  }

  ControlSidebar.prototype.expand = function () {
    if (!this.options.slide) {
      $('body').addClass(ClassName.open)
    } else {
      $(Selector.sidebar).addClass(ClassName.open)
    }

    $(this.element).trigger($.Event(Event.expanded))
  }

  ControlSidebar.prototype.collapse = function () {
    $('body, ' + Selector.sidebar).removeClass(ClassName.open)
    $(this.element).trigger($.Event(Event.collapsed))
  }

  ControlSidebar.prototype.fix = function () {
    if ($('body').is(Selector.boxed)) {
      this._fixForBoxed($(Selector.bg))
    }
  }

  // Private

  ControlSidebar.prototype._fixForBoxed = function (bg) {
    bg.css({
      position: 'absolute',
      height  : $(Selector.wrapper).height()
    })
  }

  // Plugin Definition
  // =================
  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data(DataKey)

      if (!data) {
        var options = $.extend({}, Default, $this.data(), typeof option == 'object' && option)
        $this.data(DataKey, (data = new ControlSidebar($this, options)))
      }

      if (typeof option == 'string') data.toggle()
    })
  }

  var old = $.fn.controlSidebar

  $.fn.controlSidebar             = Plugin
  $.fn.controlSidebar.Constructor = ControlSidebar

  // No Conflict Mode
  // ================
  $.fn.controlSidebar.noConflict = function () {
    $.fn.controlSidebar = old
    return this
  }

  // ControlSidebar Data API
  // =======================
  $(document).on('click', Selector.data, function (event) {
    if (event) event.preventDefault()
    Plugin.call($(this), 'toggle')
  })

}(jQuery)


/* DirectChat()
 * ===============
 * Toggles the state of the control sidebar
 *
 * @Usage: $('#my-chat-box').directChat()
 *         or add [data-widget="direct-chat"] to the trigger
 */
+function ($) {
  'use strict'

  var DataKey = 'lte.directchat'

  var Selector = {
    data: '[data-widget="chat-pane-toggle"]',
    box : '.direct-chat'
  }

  var ClassName = {
    open: 'direct-chat-contacts-open'
  }

  // DirectChat Class Definition
  // ===========================
  var DirectChat = function (element) {
    this.element = element
  }

  DirectChat.prototype.toggle = function ($trigger) {
    $trigger.parents(Selector.box).first().toggleClass(ClassName.open)
  }

  // Plugin Definition
  // =================
  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data(DataKey)

      if (!data) {
        $this.data(DataKey, (data = new DirectChat($this)))
      }

      if (typeof option == 'string') data.toggle($this)
    })
  }

  var old = $.fn.directChat

  $.fn.directChat             = Plugin
  $.fn.directChat.Constructor = DirectChat

  // No Conflict Mode
  // ================
  $.fn.directChat.noConflict = function () {
    $.fn.directChat = old
    return this
  }

  // DirectChat Data API
  // ===================
  $(document).on('click', Selector.data, function (event) {
    if (event) event.preventDefault()
    Plugin.call($(this), 'toggle')
  })

}(jQuery)


/* Layout()
 * ========
 * Implements AdminLTE layout.
 * Fixes the layout height in case min-height fails.
 *
 * @usage activated automatically upon window load.
 *        Configure any options by passing data-option="value"
 *        to the body tag.
 */
+function ($) {
  'use strict'

  var DataKey = 'lte.layout'

  var Default = {
    slimscroll : true,
    resetHeight: true
  }

  var Selector = {
    wrapper       : '.wrapper',
    contentWrapper: '.content-wrapper',
    layoutBoxed   : '.layout-boxed',
    mainFooter    : '.main-footer',
    mainHeader    : '.main-header',
    sidebar       : '.sidebar',
    controlSidebar: '.control-sidebar',
    fixed         : '.fixed',
    sidebarMenu   : '.sidebar-menu',
    logo          : '.main-header .logo'
  }

  var ClassName = {
    fixed         : 'fixed',
    holdTransition: 'hold-transition'
  }

  var Layout = function (options) {
    this.options      = options
    this.bindedResize = false
    this.activate()
  }

  Layout.prototype.activate = function () {
    this.fix()
    this.fixSidebar()

    $('body').removeClass(ClassName.holdTransition)

    if (this.options.resetHeight) {
      $('body, html, ' + Selector.wrapper).css({
        'height'    : '100%',
        'min-height': '100%'
      })
    }

    if (!this.bindedResize) {
      $(window).resize(function () {
        this.fix()
        this.fixSidebar()

        $(Selector.logo + ', ' + Selector.sidebar).one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function () {
          this.fix()
          this.fixSidebar()
        }.bind(this))
      }.bind(this))

      this.bindedResize = true
    }

    $(Selector.sidebarMenu).on('expanded.tree', function () {
      this.fix()
      this.fixSidebar()
    }.bind(this))

    $(Selector.sidebarMenu).on('collapsed.tree', function () {
      this.fix()
      this.fixSidebar()
    }.bind(this))
  }

  Layout.prototype.fix = function () {
    // Remove overflow from .wrapper if layout-boxed exists
    $(Selector.layoutBoxed + ' > ' + Selector.wrapper).css('overflow', 'hidden')

    // Get window height and the wrapper height
    var footerHeight  = $(Selector.mainFooter).outerHeight() || 0
    var neg           = $(Selector.mainHeader).outerHeight() + footerHeight
    var windowHeight  = $(window).height()
    var sidebarHeight = $(Selector.sidebar).height() || 0

    // Set the min-height of the content and sidebar based on
    // the height of the document.
    if ($('body').hasClass(ClassName.fixed)) {
      $(Selector.contentWrapper).css('min-height', windowHeight - footerHeight)
    } else {
      var postSetHeight

      if (windowHeight >= sidebarHeight) {
        $(Selector.contentWrapper).css('min-height', windowHeight - neg)
        postSetHeight = windowHeight - neg
      } else {
        $(Selector.contentWrapper).css('min-height', sidebarHeight)
        postSetHeight = sidebarHeight
      }

      // Fix for the control sidebar height
      var $controlSidebar = $(Selector.controlSidebar)
      if (typeof $controlSidebar !== 'undefined') {
        if ($controlSidebar.height() > postSetHeight)
          $(Selector.contentWrapper).css('min-height', $controlSidebar.height())
      }
    }
  }

  Layout.prototype.fixSidebar = function () {
    // Make sure the body tag has the .fixed class
    if (!$('body').hasClass(ClassName.fixed)) {
      if (typeof $.fn.slimScroll !== 'undefined') {
        $(Selector.sidebar).slimScroll({ destroy: true }).height('auto')
      }
      return
    }

    // Enable slimscroll for fixed layout
    if (this.options.slimscroll) {
      if (typeof $.fn.slimScroll !== 'undefined') {
        // Destroy if it exists
        $(Selector.sidebar).slimScroll({ destroy: true }).height('auto')

        // Add slimscroll
        $(Selector.sidebar).slimScroll({
          height: ($(window).height() - $(Selector.mainHeader).height()) + 'px',
          color : 'rgba(0,0,0,0.2)',
          size  : '3px'
        })
      }
    }
  }

  // Plugin Definition
  // =================
  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data(DataKey)

      if (!data) {
        var options = $.extend({}, Default, $this.data(), typeof option === 'object' && option)
        $this.data(DataKey, (data = new Layout(options)))
      }

      if (typeof option === 'string') {
        if (typeof data[option] === 'undefined') {
          throw new Error('No method named ' + option)
        }
        data[option]()
      }
    })
  }

  var old = $.fn.layout

  $.fn.layout            = Plugin
  $.fn.layout.Constuctor = Layout

  // No conflict mode
  // ================
  $.fn.layout.noConflict = function () {
    $.fn.layout = old
    return this
  }

  // Layout DATA-API
  // ===============
  $(window).on('load', function () {
    Plugin.call($('body'))
  })
}(jQuery)


/* PushMenu()
 * ==========
 * Adds the push menu functionality to the sidebar.
 *
 * @usage: $('.btn').pushMenu(options)
 *          or add [data-toggle="push-menu"] to any button
 *          Pass any option as data-option="value"
 */
+function ($) {
  'use strict'

  var DataKey = 'lte.pushmenu'

  var Default = {
    collapseScreenSize   : 767,
    expandOnHover        : false,
    expandTransitionDelay: 200
  }

  var Selector = {
    collapsed     : '.sidebar-collapse',
    open          : '.sidebar-open',
    mainSidebar   : '.main-sidebar',
    contentWrapper: '.content-wrapper',
    searchInput   : '.sidebar-form .form-control',
    button        : '[data-toggle="push-menu"]',
    mini          : '.sidebar-mini',
    expanded      : '.sidebar-expanded-on-hover',
    layoutFixed   : '.fixed'
  }

  var ClassName = {
    collapsed    : 'sidebar-collapse',
    open         : 'sidebar-open',
    mini         : 'sidebar-mini',
    expanded     : 'sidebar-expanded-on-hover',
    expandFeature: 'sidebar-mini-expand-feature',
    layoutFixed  : 'fixed'
  }

  var Event = {
    expanded : 'expanded.pushMenu',
    collapsed: 'collapsed.pushMenu'
  }

  // PushMenu Class Definition
  // =========================
  var PushMenu = function (options) {
    this.options = options
    this.init()
  }

  PushMenu.prototype.init = function () {
    if (this.options.expandOnHover
      || ($('body').is(Selector.mini + Selector.layoutFixed))) {
      this.expandOnHover()
      $('body').addClass(ClassName.expandFeature)
    }

    $(Selector.contentWrapper).click(function () {
      // Enable hide menu when clicking on the content-wrapper on small screens
      if ($(window).width() <= this.options.collapseScreenSize && $('body').hasClass(ClassName.open)) {
        this.close()
      }
    }.bind(this))

    // __Fix for android devices
    $(Selector.searchInput).click(function (e) {
      e.stopPropagation()
    })
  }

  PushMenu.prototype.toggle = function () {
    var windowWidth = $(window).width()
    var isOpen      = !$('body').hasClass(ClassName.collapsed)

    if (windowWidth <= this.options.collapseScreenSize) {
      isOpen = $('body').hasClass(ClassName.open)
    }

    if (!isOpen) {
      this.open()
    } else {
      this.close()
    }
  }

  PushMenu.prototype.open = function () {
    var windowWidth = $(window).width()

    if (windowWidth > this.options.collapseScreenSize) {
      $('body').removeClass(ClassName.collapsed)
        .trigger($.Event(Event.expanded))
    }
    else {
      $('body').addClass(ClassName.open)
        .trigger($.Event(Event.expanded))
    }
  }

  PushMenu.prototype.close = function () {
    var windowWidth = $(window).width()
    if (windowWidth > this.options.collapseScreenSize) {
      $('body').addClass(ClassName.collapsed)
        .trigger($.Event(Event.collapsed))
    } else {
      $('body').removeClass(ClassName.open + ' ' + ClassName.collapsed)
        .trigger($.Event(Event.collapsed))
    }
  }

  PushMenu.prototype.expandOnHover = function () {
    $(Selector.mainSidebar).hover(function () {
      if ($('body').is(Selector.mini + Selector.collapsed)
        && $(window).width() > this.options.collapseScreenSize) {
        this.expand()
      }
    }.bind(this), function () {
      if ($('body').is(Selector.expanded)) {
        this.collapse()
      }
    }.bind(this))
  }

  PushMenu.prototype.expand = function () {
    setTimeout(function () {
      $('body').removeClass(ClassName.collapsed)
        .addClass(ClassName.expanded)
    }, this.options.expandTransitionDelay)
  }

  PushMenu.prototype.collapse = function () {
    setTimeout(function () {
      $('body').removeClass(ClassName.expanded)
        .addClass(ClassName.collapsed)
    }, this.options.expandTransitionDelay)
  }

  // PushMenu Plugin Definition
  // ==========================
  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data(DataKey)

      if (!data) {
        var options = $.extend({}, Default, $this.data(), typeof option == 'object' && option)
        $this.data(DataKey, (data = new PushMenu(options)))
      }

      if (option == 'toggle') data.toggle()
    })
  }

  var old = $.fn.pushMenu

  $.fn.pushMenu             = Plugin
  $.fn.pushMenu.Constructor = PushMenu

  // No Conflict Mode
  // ================
  $.fn.pushMenu.noConflict = function () {
    $.fn.pushMenu = old
    return this
  }

  // Data API
  // ========
  $(document).on('click', Selector.button, function (e) {
    e.preventDefault()
    Plugin.call($(this), 'toggle')
  })
  $(window).on('load', function () {
    Plugin.call($(Selector.button))
  })
}(jQuery)


/* TodoList()
 * =========
 * Converts a list into a todoList.
 *
 * @Usage: $('.my-list').todoList(options)
 *         or add [data-widget="todo-list"] to the ul element
 *         Pass any option as data-option="value"
 */
+function ($) {
  'use strict'

  var DataKey = 'lte.todolist'

  var Default = {
    onCheck  : function (item) {
      return item
    },
    onUnCheck: function (item) {
      return item
    }
  }

  var Selector = {
    data: '[data-widget="todo-list"]'
  }

  var ClassName = {
    done: 'done'
  }

  // TodoList Class Definition
  // =========================
  var TodoList = function (element, options) {
    this.element = element
    this.options = options

    this._setUpListeners()
  }

  TodoList.prototype.toggle = function (item) {
    item.parents(Selector.li).first().toggleClass(ClassName.done)
    if (!item.prop('checked')) {
      this.unCheck(item)
      return
    }

    this.check(item)
  }

  TodoList.prototype.check = function (item) {
    this.options.onCheck.call(item)
  }

  TodoList.prototype.unCheck = function (item) {
    this.options.onUnCheck.call(item)
  }

  // Private

  TodoList.prototype._setUpListeners = function () {
    var that = this
    $(this.element).on('change ifChanged', 'input:checkbox', function () {
      that.toggle($(this))
    })
  }

  // Plugin Definition
  // =================
  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data(DataKey)

      if (!data) {
        var options = $.extend({}, Default, $this.data(), typeof option == 'object' && option)
        $this.data(DataKey, (data = new TodoList($this, options)))
      }

      if (typeof data == 'string') {
        if (typeof data[option] == 'undefined') {
          throw new Error('No method named ' + option)
        }
        data[option]()
      }
    })
  }

  var old = $.fn.todoList

  $.fn.todoList         = Plugin
  $.fn.todoList.Constructor = TodoList

  // No Conflict Mode
  // ================
  $.fn.todoList.noConflict = function () {
    $.fn.todoList = old
    return this
  }

  // TodoList Data API
  // =================
  $(window).on('load', function () {
    $(Selector.data).each(function () {
      Plugin.call($(this))
    })
  })

}(jQuery)


/* Tree()
 * ======
 * Converts a nested list into a multilevel
 * tree view menu.
 *
 * @Usage: $('.my-menu').tree(options)
 *         or add [data-widget="tree"] to the ul element
 *         Pass any option as data-option="value"
 */
+function ($) {
  'use strict'

  var DataKey = 'lte.tree'

  var Default = {
    animationSpeed: 500,
    accordion     : true,
    followLink    : false,
    trigger       : '.treeview a'
  }

  var Selector = {
    tree        : '.tree',
    treeview    : '.treeview',
    treeviewMenu: '.treeview-menu',
    open        : '.menu-open, .active',
    li          : 'li',
    data        : '[data-widget="tree"]',
    active      : '.active'
  }

  var ClassName = {
    open: 'menu-open',
    tree: 'tree'
  }

  var Event = {
    collapsed: 'collapsed.tree',
    expanded : 'expanded.tree'
  }

  // Tree Class Definition
  // =====================
  var Tree = function (element, options) {
    this.element = element
    this.options = options

    $(this.element).addClass(ClassName.tree)

    $(Selector.treeview + Selector.active, this.element).addClass(ClassName.open)

    this._setUpListeners()
  }

  Tree.prototype.toggle = function (link, event) {
    var treeviewMenu = link.next(Selector.treeviewMenu)
    var parentLi     = link.parent()
    var isOpen       = parentLi.hasClass(ClassName.open)

    if (!parentLi.is(Selector.treeview)) {
      return
    }

    if (!this.options.followLink || link.attr('href') == '#') {
      event.preventDefault()
    }

    if (isOpen) {
      this.collapse(treeviewMenu, parentLi)
    } else {
      this.expand(treeviewMenu, parentLi)
    }
  }

  Tree.prototype.expand = function (tree, parent) {
    var expandedEvent = $.Event(Event.expanded)

    if (this.options.accordion) {
      var openMenuLi = parent.siblings(Selector.open)
      var openTree   = openMenuLi.children(Selector.treeviewMenu)
      this.collapse(openTree, openMenuLi)
    }

    parent.addClass(ClassName.open)
    tree.slideDown(this.options.animationSpeed, function () {
      $(this.element).trigger(expandedEvent)
    }.bind(this))
  }

  Tree.prototype.collapse = function (tree, parentLi) {
    var collapsedEvent = $.Event(Event.collapsed)

    tree.find(Selector.open).removeClass(ClassName.open)
    parentLi.removeClass(ClassName.open)
    tree.slideUp(this.options.animationSpeed, function () {
      tree.find(Selector.open + ' > ' + Selector.treeview).slideUp()
      $(this.element).trigger(collapsedEvent)
    }.bind(this))
  }

  // Private

  Tree.prototype._setUpListeners = function () {
    var that = this

    $(this.element).on('click', this.options.trigger, function (event) {
      that.toggle($(this), event)
    })
  }

  // Plugin Definition
  // =================
  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data(DataKey)

      if (!data) {
        var options = $.extend({}, Default, $this.data(), typeof option == 'object' && option)
        $this.data(DataKey, new Tree($this, options))
      }
    })
  }

  var old = $.fn.tree

  $.fn.tree             = Plugin
  $.fn.tree.Constructor = Tree

  // No Conflict Mode
  // ================
  $.fn.tree.noConflict = function () {
    $.fn.tree = old
    return this
  }

  // Tree Data API
  // =============
  $(window).on('load', function () {
    $(Selector.data).each(function () {
      Plugin.call($(this))
    })
  })

}(jQuery)

// $(document).ready(function(){
//   $(".fancybox").fancybox({
//       openEffect: "none",
//       closeEffect: "none"
//   });
// });
 

/***/ }),

/***/ "../../../../../src/environments/environment.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return environment; });
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.
var environment = {
    production: false
};


/***/ }),

/***/ "../../../../../src/main.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser_dynamic__ = __webpack_require__("../../../platform-browser-dynamic/esm5/platform-browser-dynamic.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_app_module__ = __webpack_require__("../../../../../src/app/app.module.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_environment__ = __webpack_require__("../../../../../src/environments/environment.ts");




if (__WEBPACK_IMPORTED_MODULE_3__environments_environment__["a" /* environment */].production) {
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["enableProdMode"])();
}
Object(__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser_dynamic__["a" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_2__app_app_module__["a" /* AppModule */])
    .catch(function (err) { return console.log(err); });


/***/ }),

/***/ 0:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 1:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("../../../../../src/main.ts");


/***/ }),

/***/ 2:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 3:
/***/ (function(module, exports) {

/* (ignored) */

/***/ })

},[1]);
//# sourceMappingURL=main.bundle.js.map